#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Task_Multiplayer_RequestReserveSlots

#include "Basic.hpp"

#include "Task_Multiplayer_RequestReserveSlots_classes.hpp"
#include "Task_Multiplayer_RequestReserveSlots_parameters.hpp"


namespace SDK
{

// Function Task_Multiplayer_RequestReserveSlots.Task_Multiplayer_RequestReserveSlots_C.ExecuteUbergraph_Task_Multiplayer_RequestReserveSlots
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTask_Multiplayer_RequestReserveSlots_C::ExecuteUbergraph_Task_Multiplayer_RequestReserveSlots(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Multiplayer_RequestReserveSlots_C", "ExecuteUbergraph_Task_Multiplayer_RequestReserveSlots");

	Params::Task_Multiplayer_RequestReserveSlots_C_ExecuteUbergraph_Task_Multiplayer_RequestReserveSlots Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Task_Multiplayer_RequestReserveSlots.Task_Multiplayer_RequestReserveSlots_C.OnClickLeave_Event
// (BlueprintCallable, BlueprintEvent)

void UTask_Multiplayer_RequestReserveSlots_C::OnClickLeave_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Multiplayer_RequestReserveSlots_C", "OnClickLeave_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Task_Multiplayer_RequestReserveSlots.Task_Multiplayer_RequestReserveSlots_C.OnConnectionStateChange_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTask_Multiplayer_RequestReserveSlots_C::OnConnectionStateChange_Event(bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Multiplayer_RequestReserveSlots_C", "OnConnectionStateChange_Event");

	Params::Task_Multiplayer_RequestReserveSlots_C_OnConnectionStateChange_Event Parms{};

	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Task_Multiplayer_RequestReserveSlots.Task_Multiplayer_RequestReserveSlots_C.OnFinished__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSuccessful                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   Param_ErrorCode                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTask_Multiplayer_RequestReserveSlots_C::OnFinished__DelegateSignature(bool IsSuccessful, uint8 Param_ErrorCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Multiplayer_RequestReserveSlots_C", "OnFinished__DelegateSignature");

	Params::Task_Multiplayer_RequestReserveSlots_C_OnFinished__DelegateSignature Parms{};

	Parms.IsSuccessful = IsSuccessful;
	Parms.Param_ErrorCode = Param_ErrorCode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Task_Multiplayer_RequestReserveSlots.Task_Multiplayer_RequestReserveSlots_C.OnPutInQueue_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Number                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTask_Multiplayer_RequestReserveSlots_C::OnPutInQueue_Event(uint8 Number)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Multiplayer_RequestReserveSlots_C", "OnPutInQueue_Event");

	Params::Task_Multiplayer_RequestReserveSlots_C_OnPutInQueue_Event Parms{};

	Parms.Number = Number;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Task_Multiplayer_RequestReserveSlots.Task_Multiplayer_RequestReserveSlots_C.OnResponseReserveSlot_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Payload                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTask_Multiplayer_RequestReserveSlots_C::OnResponseReserveSlot_Event(uint8 Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Multiplayer_RequestReserveSlots_C", "OnResponseReserveSlot_Event");

	Params::Task_Multiplayer_RequestReserveSlots_C_OnResponseReserveSlot_Event Parms{};

	Parms.Payload = Payload;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Task_Multiplayer_RequestReserveSlots.Task_Multiplayer_RequestReserveSlots_C.ReceiveActivate
// (Event, Protected, BlueprintEvent)

void UTask_Multiplayer_RequestReserveSlots_C::ReceiveActivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Multiplayer_RequestReserveSlots_C", "ReceiveActivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Task_Multiplayer_RequestReserveSlots.Task_Multiplayer_RequestReserveSlots_C.ReceiveFinished
// (Event, Protected, BlueprintEvent)
// Parameters:
// EActionState                            Reason                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTask_Multiplayer_RequestReserveSlots_C::ReceiveFinished(const EActionState Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Multiplayer_RequestReserveSlots_C", "ReceiveFinished");

	Params::Task_Multiplayer_RequestReserveSlots_C_ReceiveFinished Parms{};

	Parms.Reason = Reason;

	UObject::ProcessEvent(Func, &Parms);
}

}

