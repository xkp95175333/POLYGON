#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ModuleInfo

#include "Basic.hpp"

#include "POLYGON_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DataContainer_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_ModuleInfo.UI_ModuleInfo_C.FindModuleCharacteristic
// 0x0070 (0x0070 - 0x0000)
struct UI_ModuleInfo_C_FindModuleCharacteristic final
{
public:
	struct FDataContainerObjectWrapper            DataContainer;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 CharacteristicKey;                                 // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1A[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1B[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UDataContainerValue_Base*               CallFunc_FindDataContainerValue_ReturnValue;       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UDataContainerValue_Base*               K2Node_LowEntry_LocalVariable_Value__Object;       // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1C[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataContainerValue_Float*              K2Node_DynamicCast_AsFloat;                        // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ModuleInfo_C_FindModuleCharacteristic) == 0x000008, "Wrong alignment on UI_ModuleInfo_C_FindModuleCharacteristic");
static_assert(sizeof(UI_ModuleInfo_C_FindModuleCharacteristic) == 0x000070, "Wrong size on UI_ModuleInfo_C_FindModuleCharacteristic");
static_assert(offsetof(UI_ModuleInfo_C_FindModuleCharacteristic, DataContainer) == 0x000000, "Member 'UI_ModuleInfo_C_FindModuleCharacteristic::DataContainer' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_FindModuleCharacteristic, CharacteristicKey) == 0x000008, "Member 'UI_ModuleInfo_C_FindModuleCharacteristic::CharacteristicKey' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_FindModuleCharacteristic, Value) == 0x000018, "Member 'UI_ModuleInfo_C_FindModuleCharacteristic::Value' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_FindModuleCharacteristic, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'UI_ModuleInfo_C_FindModuleCharacteristic::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_FindModuleCharacteristic, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'UI_ModuleInfo_C_FindModuleCharacteristic::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_FindModuleCharacteristic, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000038, "Member 'UI_ModuleInfo_C_FindModuleCharacteristic::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_FindModuleCharacteristic, CallFunc_FindDataContainerValue_ReturnValue) == 0x000048, "Member 'UI_ModuleInfo_C_FindModuleCharacteristic::CallFunc_FindDataContainerValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_FindModuleCharacteristic, K2Node_LowEntry_LocalVariable_Value__Object) == 0x000050, "Member 'UI_ModuleInfo_C_FindModuleCharacteristic::K2Node_LowEntry_LocalVariable_Value__Object' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_FindModuleCharacteristic, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'UI_ModuleInfo_C_FindModuleCharacteristic::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_FindModuleCharacteristic, K2Node_DynamicCast_AsFloat) == 0x000060, "Member 'UI_ModuleInfo_C_FindModuleCharacteristic::K2Node_DynamicCast_AsFloat' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_FindModuleCharacteristic, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'UI_ModuleInfo_C_FindModuleCharacteristic::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function UI_ModuleInfo.UI_ModuleInfo_C.ParseModuleInfo
// 0x0360 (0x0360 - 0x0000)
struct UI_ModuleInfo_C_ParseModuleInfo final
{
public:
	class UClass*                                 GunClass;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CurrentModuleClass;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ComparisonModuleClass;                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGunModuleInfo                         L_ComparisonModuleInfo;                            // 0x0018(0x0040)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FGunModuleInfo                         L_CurrentModuleInfo;                               // 0x0058(0x0040)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1D[0x1];                                     // 0x00A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FindModuleCharacteristic_Value;           // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FindModuleCharacteristic_Value_1;         // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1E[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1F[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C20[0x1];                                     // 0x00DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FindModuleCharacteristic_Value_2;         // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FindModuleCharacteristic_Value_3;         // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C21[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FindModuleCharacteristic_Value_4;         // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FindModuleCharacteristic_Value_5;         // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FindModuleCharacteristic_Value_6;         // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FindModuleCharacteristic_Value_7;         // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_6;           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_7;           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FindModuleCharacteristic_Value_8;         // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FindModuleCharacteristic_Value_9;         // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FindModuleCharacteristic_Value_10;        // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C22[0x4];                                     // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FindModuleCharacteristic_Value_11;        // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C23[0x4];                                     // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_8;           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_9;           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue_2;               // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C24[0x7];                                     // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGunModulesInfo*                        K2Node_DynamicCast_AsGun_Modules_Info;             // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue_3;               // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C25[0x6];                                     // 0x01D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGunModuleInfo                         CallFunc_Array_Get_Item;                           // 0x01D8(0x0040)(ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue_4;               // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C26[0x2];                                     // 0x021E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FindModuleCharacteristic_Value_12;        // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C27[0x4];                                     // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_10;          // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FindModuleCharacteristic_Value_13;        // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_11;          // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C28[0x2];                                     // 0x0242(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue_5;               // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue_6;               // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x024A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x024B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_12;          // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_12;     // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_13;          // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1;   // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2;   // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_3;   // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_4;   // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_1;        // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2;   // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_5;   // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_6;   // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_2;        // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_3;        // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_3;   // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_4;   // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_5;   // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_7;   // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_6;   // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_7;   // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C29[0x4];                                     // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_8;   // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_2;        // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_3;        // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_8;   // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ModuleInfo_C_ParseModuleInfo) == 0x000008, "Wrong alignment on UI_ModuleInfo_C_ParseModuleInfo");
static_assert(sizeof(UI_ModuleInfo_C_ParseModuleInfo) == 0x000360, "Wrong size on UI_ModuleInfo_C_ParseModuleInfo");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, GunClass) == 0x000000, "Member 'UI_ModuleInfo_C_ParseModuleInfo::GunClass' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CurrentModuleClass) == 0x000008, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CurrentModuleClass' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, ComparisonModuleClass) == 0x000010, "Member 'UI_ModuleInfo_C_ParseModuleInfo::ComparisonModuleClass' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, L_ComparisonModuleInfo) == 0x000018, "Member 'UI_ModuleInfo_C_ParseModuleInfo::L_ComparisonModuleInfo' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, L_CurrentModuleInfo) == 0x000058, "Member 'UI_ModuleInfo_C_ParseModuleInfo::L_CurrentModuleInfo' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, Temp_int_Array_Index_Variable) == 0x000098, "Member 'UI_ModuleInfo_C_ParseModuleInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_IsValidClass_ReturnValue) == 0x00009C, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00009D, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00009E, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_BooleanAND_ReturnValue) == 0x00009F, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_GetVisibility_ReturnValue) == 0x0000A0, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, Temp_bool_True_if_break_was_hit_Variable) == 0x0000A1, "Member 'UI_ModuleInfo_C_ParseModuleInfo::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Not_PreBool_ReturnValue) == 0x0000A2, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_FindModuleCharacteristic_Value) == 0x0000A4, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_FindModuleCharacteristic_Value' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_FindModuleCharacteristic_Value_1) == 0x0000A8, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_FindModuleCharacteristic_Value_1' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000C8, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000D0, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000D8, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_IsValidClass_ReturnValue_1) == 0x0000D9, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x0000DA, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_FindModuleCharacteristic_Value_2) == 0x0000DC, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_FindModuleCharacteristic_Value_2' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000E0, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_FindModuleCharacteristic_Value_3) == 0x0000E8, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_FindModuleCharacteristic_Value_3' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000F0, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000F8, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000100, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000108, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_FindModuleCharacteristic_Value_4) == 0x000110, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_FindModuleCharacteristic_Value_4' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_FindModuleCharacteristic_Value_5) == 0x000114, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_FindModuleCharacteristic_Value_5' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000118, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000120, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x000128, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_FindModuleCharacteristic_Value_6) == 0x000130, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_FindModuleCharacteristic_Value_6' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_FindModuleCharacteristic_Value_7) == 0x000134, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_FindModuleCharacteristic_Value_7' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000138, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000140, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Add_DoubleDouble_ReturnValue_6) == 0x000148, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Add_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Add_DoubleDouble_ReturnValue_7) == 0x000150, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Add_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_FindModuleCharacteristic_Value_8) == 0x000158, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_FindModuleCharacteristic_Value_8' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_FindModuleCharacteristic_Value_9) == 0x00015C, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_FindModuleCharacteristic_Value_9' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000160, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_FindModuleCharacteristic_Value_10) == 0x000168, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_FindModuleCharacteristic_Value_10' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_NormalizeToRange_ReturnValue) == 0x000170, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_FindModuleCharacteristic_Value_11) == 0x000178, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_FindModuleCharacteristic_Value_11' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000180, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000188, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x000190, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Add_DoubleDouble_ReturnValue_8) == 0x000198, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Add_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Add_DoubleDouble_ReturnValue_9) == 0x0001A0, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Add_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_IsValidClass_ReturnValue_2) == 0x0001A8, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_IsValidClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0001B0, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x0001B8, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x0001C0, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, K2Node_DynamicCast_AsGun_Modules_Info) == 0x0001C8, "Member 'UI_ModuleInfo_C_ParseModuleInfo::K2Node_DynamicCast_AsGun_Modules_Info' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, K2Node_DynamicCast_bSuccess) == 0x0001D0, "Member 'UI_ModuleInfo_C_ParseModuleInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_IsValidClass_ReturnValue_3) == 0x0001D1, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_IsValidClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Array_Get_Item) == 0x0001D8, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Array_Length_ReturnValue) == 0x000218, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_IsValidClass_ReturnValue_4) == 0x00021C, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_IsValidClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_BooleanOR_ReturnValue) == 0x00021D, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_FindModuleCharacteristic_Value_12) == 0x000220, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_FindModuleCharacteristic_Value_12' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Add_DoubleDouble_ReturnValue_10) == 0x000228, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Add_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, Temp_int_Loop_Counter_Variable) == 0x000230, "Member 'UI_ModuleInfo_C_ParseModuleInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_FindModuleCharacteristic_Value_13) == 0x000234, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_FindModuleCharacteristic_Value_13' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Add_DoubleDouble_ReturnValue_11) == 0x000238, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Add_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Less_IntInt_ReturnValue) == 0x000240, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_BooleanAND_ReturnValue_1) == 0x000241, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000244, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_IsValidClass_ReturnValue_5) == 0x000248, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_IsValidClass_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_IsValidClass_ReturnValue_6) == 0x000249, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_IsValidClass_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x00024A, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x00024B, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_GetFloatValue_ReturnValue) == 0x00024C, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x000250, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x000258, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Add_DoubleDouble_ReturnValue_12) == 0x000260, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Add_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_ReturnValue_12) == 0x000268, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Add_DoubleDouble_ReturnValue_13) == 0x000270, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Add_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000278, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1) == 0x000280, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000288, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000290, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000298, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x0002A0, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x0002A8, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2) == 0x0002B0, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_3) == 0x0002B8, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_4) == 0x0002C0, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x0002C8, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Add_DoubleDouble_B_ImplicitCast_1) == 0x0002D0, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Add_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2) == 0x0002D8, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_5) == 0x0002E0, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_6) == 0x0002E8, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Add_DoubleDouble_A_ImplicitCast_2) == 0x0002F0, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Add_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Add_DoubleDouble_A_ImplicitCast_3) == 0x0002F8, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Add_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_3) == 0x000300, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_4) == 0x000308, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_5) == 0x000310, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_7) == 0x000318, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_6) == 0x000320, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_7) == 0x000328, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000330, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000338, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_8) == 0x000340, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Add_DoubleDouble_B_ImplicitCast_2) == 0x000348, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Add_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Add_DoubleDouble_B_ImplicitCast_3) == 0x000350, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Add_DoubleDouble_B_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_ParseModuleInfo, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_8) == 0x000358, "Member 'UI_ModuleInfo_C_ParseModuleInfo::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_8' has a wrong offset!");

// Function UI_ModuleInfo.UI_ModuleInfo_C.SetDescription
// 0x0028 (0x0028 - 0x0000)
struct UI_ModuleInfo_C_SetDescription final
{
public:
	class UClass*                                 ModuleClass;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C2A[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataContainerValue_Base*               CallFunc_FindDataContainerValue_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UDataContainerValue_FText*              K2Node_DynamicCast_AsFText;                        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ModuleInfo_C_SetDescription) == 0x000008, "Wrong alignment on UI_ModuleInfo_C_SetDescription");
static_assert(sizeof(UI_ModuleInfo_C_SetDescription) == 0x000028, "Wrong size on UI_ModuleInfo_C_SetDescription");
static_assert(offsetof(UI_ModuleInfo_C_SetDescription, ModuleClass) == 0x000000, "Member 'UI_ModuleInfo_C_SetDescription::ModuleClass' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_SetDescription, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'UI_ModuleInfo_C_SetDescription::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_SetDescription, CallFunc_FindDataContainerValue_ReturnValue) == 0x000010, "Member 'UI_ModuleInfo_C_SetDescription::CallFunc_FindDataContainerValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_SetDescription, K2Node_DynamicCast_AsFText) == 0x000018, "Member 'UI_ModuleInfo_C_SetDescription::K2Node_DynamicCast_AsFText' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_SetDescription, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'UI_ModuleInfo_C_SetDescription::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function UI_ModuleInfo.UI_ModuleInfo_C.SetRare
// 0x0108 (0x0108 - 0x0000)
struct UI_ModuleInfo_C_SetRare final
{
public:
	class UClass*                                 ModuleClass;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EItemRareType                                 L_Rare;                                            // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C2B[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0010(0x0018)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C2C[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0030(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0048(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0060(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0078(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0090(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00A8(0x0018)()
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemRareType                                 Temp_byte_Variable;                                // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Subtract_ByteByte_ReturnValue;            // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C2D[0x5];                                     // 0x00C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00C8(0x0018)()
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetRareColor_NewParam;                    // 0x00E4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C2E[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsItem_Module_Skin;        // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ModuleInfo_C_SetRare) == 0x000008, "Wrong alignment on UI_ModuleInfo_C_SetRare");
static_assert(sizeof(UI_ModuleInfo_C_SetRare) == 0x000108, "Wrong size on UI_ModuleInfo_C_SetRare");
static_assert(offsetof(UI_ModuleInfo_C_SetRare, ModuleClass) == 0x000000, "Member 'UI_ModuleInfo_C_SetRare::ModuleClass' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_SetRare, L_Rare) == 0x000008, "Member 'UI_ModuleInfo_C_SetRare::L_Rare' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_SetRare, Temp_text_Variable) == 0x000010, "Member 'UI_ModuleInfo_C_SetRare::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_SetRare, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'UI_ModuleInfo_C_SetRare::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_SetRare, Temp_text_Variable_1) == 0x000030, "Member 'UI_ModuleInfo_C_SetRare::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_SetRare, Temp_text_Variable_2) == 0x000048, "Member 'UI_ModuleInfo_C_SetRare::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_SetRare, Temp_text_Variable_3) == 0x000060, "Member 'UI_ModuleInfo_C_SetRare::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_SetRare, Temp_text_Variable_4) == 0x000078, "Member 'UI_ModuleInfo_C_SetRare::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_SetRare, Temp_text_Variable_5) == 0x000090, "Member 'UI_ModuleInfo_C_SetRare::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_SetRare, Temp_text_Variable_6) == 0x0000A8, "Member 'UI_ModuleInfo_C_SetRare::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_SetRare, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000C0, "Member 'UI_ModuleInfo_C_SetRare::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_SetRare, Temp_byte_Variable) == 0x0000C1, "Member 'UI_ModuleInfo_C_SetRare::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_SetRare, CallFunc_Subtract_ByteByte_ReturnValue) == 0x0000C2, "Member 'UI_ModuleInfo_C_SetRare::CallFunc_Subtract_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_SetRare, K2Node_Select_Default) == 0x0000C8, "Member 'UI_ModuleInfo_C_SetRare::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_SetRare, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0000E0, "Member 'UI_ModuleInfo_C_SetRare::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_SetRare, CallFunc_GetRareColor_NewParam) == 0x0000E4, "Member 'UI_ModuleInfo_C_SetRare::CallFunc_GetRareColor_NewParam' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_SetRare, K2Node_ClassDynamicCast_AsItem_Module_Skin) == 0x0000F8, "Member 'UI_ModuleInfo_C_SetRare::K2Node_ClassDynamicCast_AsItem_Module_Skin' has a wrong offset!");
static_assert(offsetof(UI_ModuleInfo_C_SetRare, K2Node_ClassDynamicCast_bSuccess) == 0x000100, "Member 'UI_ModuleInfo_C_SetRare::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");

}

