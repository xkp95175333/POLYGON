#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OpenCVHelper

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum OpenCVHelper.EOpenCVArucoDictionary
// NumValues: 0x0006
enum class EOpenCVArucoDictionary : uint8
{
	Dict4x4                                  = 0,
	Dict5x5                                  = 1,
	Dict6x6                                  = 2,
	Dict7x7                                  = 3,
	DictOriginal                             = 4,
	EOpenCVArucoDictionary_MAX               = 5,
};

// Enum OpenCVHelper.EOpenCVArucoDictionarySize
// NumValues: 0x0005
enum class EOpenCVArucoDictionarySize : uint8
{
	DictSize50                               = 0,
	DictSize100                              = 1,
	DictSize250                              = 2,
	DictSize1000                             = 3,
	EOpenCVArucoDictionarySize_MAX           = 4,
};

// ScriptStruct OpenCVHelper.OpenCVLensDistortionParametersBase
// 0x0048 (0x0048 - 0x0000)
struct FOpenCVLensDistortionParametersBase
{
public:
	float                                         K1;                                                // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         K2;                                                // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         P1;                                                // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         P2;                                                // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         K3;                                                // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         K4;                                                // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         K5;                                                // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         K6;                                                // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              F;                                                 // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              C;                                                 // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseFisheyeModel;                                  // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F57[0x7];                                     // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FOpenCVLensDistortionParametersBase) == 0x000008, "Wrong alignment on FOpenCVLensDistortionParametersBase");
static_assert(sizeof(FOpenCVLensDistortionParametersBase) == 0x000048, "Wrong size on FOpenCVLensDistortionParametersBase");
static_assert(offsetof(FOpenCVLensDistortionParametersBase, K1) == 0x000000, "Member 'FOpenCVLensDistortionParametersBase::K1' has a wrong offset!");
static_assert(offsetof(FOpenCVLensDistortionParametersBase, K2) == 0x000004, "Member 'FOpenCVLensDistortionParametersBase::K2' has a wrong offset!");
static_assert(offsetof(FOpenCVLensDistortionParametersBase, P1) == 0x000008, "Member 'FOpenCVLensDistortionParametersBase::P1' has a wrong offset!");
static_assert(offsetof(FOpenCVLensDistortionParametersBase, P2) == 0x00000C, "Member 'FOpenCVLensDistortionParametersBase::P2' has a wrong offset!");
static_assert(offsetof(FOpenCVLensDistortionParametersBase, K3) == 0x000010, "Member 'FOpenCVLensDistortionParametersBase::K3' has a wrong offset!");
static_assert(offsetof(FOpenCVLensDistortionParametersBase, K4) == 0x000014, "Member 'FOpenCVLensDistortionParametersBase::K4' has a wrong offset!");
static_assert(offsetof(FOpenCVLensDistortionParametersBase, K5) == 0x000018, "Member 'FOpenCVLensDistortionParametersBase::K5' has a wrong offset!");
static_assert(offsetof(FOpenCVLensDistortionParametersBase, K6) == 0x00001C, "Member 'FOpenCVLensDistortionParametersBase::K6' has a wrong offset!");
static_assert(offsetof(FOpenCVLensDistortionParametersBase, F) == 0x000020, "Member 'FOpenCVLensDistortionParametersBase::F' has a wrong offset!");
static_assert(offsetof(FOpenCVLensDistortionParametersBase, C) == 0x000030, "Member 'FOpenCVLensDistortionParametersBase::C' has a wrong offset!");
static_assert(offsetof(FOpenCVLensDistortionParametersBase, bUseFisheyeModel) == 0x000040, "Member 'FOpenCVLensDistortionParametersBase::bUseFisheyeModel' has a wrong offset!");

// ScriptStruct OpenCVHelper.OpenCVArucoDetectedMarker
// 0x0080 (0x0080 - 0x0000)
struct FOpenCVArucoDetectedMarker final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F58[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      Corners;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1F59[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Pose;                                              // 0x0020(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOpenCVArucoDetectedMarker) == 0x000010, "Wrong alignment on FOpenCVArucoDetectedMarker");
static_assert(sizeof(FOpenCVArucoDetectedMarker) == 0x000080, "Wrong size on FOpenCVArucoDetectedMarker");
static_assert(offsetof(FOpenCVArucoDetectedMarker, ID) == 0x000000, "Member 'FOpenCVArucoDetectedMarker::ID' has a wrong offset!");
static_assert(offsetof(FOpenCVArucoDetectedMarker, Corners) == 0x000008, "Member 'FOpenCVArucoDetectedMarker::Corners' has a wrong offset!");
static_assert(offsetof(FOpenCVArucoDetectedMarker, Pose) == 0x000020, "Member 'FOpenCVArucoDetectedMarker::Pose' has a wrong offset!");

}

