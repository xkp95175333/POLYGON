#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OpenIcon

#include "Basic.hpp"

#include "OpenIcon_classes.hpp"
#include "OpenIcon_parameters.hpp"


namespace SDK
{

// Function OpenIcon.CustomIcon.InitCustomIcon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataTable*                       InIconData                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          InIconFont                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomIcon::InitCustomIcon(class UDataTable* InIconData, class UObject* InIconFont)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomIcon", "InitCustomIcon");

	Params::CustomIcon_InitCustomIcon Parms{};

	Parms.InIconData = InIconData;
	Parms.InIconFont = InIconFont;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OpenIcon.CustomIcon.SetIconByID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             IconID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Size                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomIcon::SetIconByID(class FName IconID, int32 Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomIcon", "SetIconByID");

	Params::CustomIcon_SetIconByID Parms{};

	Parms.IconID = IconID;
	Parms.Size = Size;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OpenIcon.OpenIcon.SetIcon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EOpenIconSource                         Source                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Category                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           IconUcode                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Size                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOpenIcon::SetIcon(EOpenIconSource Source, const class FString& Category, const class FString& IconUcode, int32 Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OpenIcon", "SetIcon");

	Params::OpenIcon_SetIcon Parms{};

	Parms.Source = Source;
	Parms.Category = std::move(Category);
	Parms.IconUcode = std::move(IconUcode);
	Parms.Size = Size;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OpenIcon.OpenIcon.SetIconByID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             IconID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Size                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOpenIcon::SetIconByID(class FName IconID, int32 Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OpenIcon", "SetIconByID");

	Params::OpenIcon_SetIconByID Parms{};

	Parms.IconID = IconID;
	Parms.Size = Size;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OpenIcon.OpenIconUtil.CopyToClipboard
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           S                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOpenIconUtil::CopyToClipboard(const class FString& S)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OpenIconUtil", "CopyToClipboard");

	Params::OpenIconUtil_CopyToClipboard Parms{};

	Parms.S = std::move(S);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OpenIcon.OpenIconUtil.CustomIconToTexture
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UDataTable*                       IconData                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFont*                            IconFont                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             IconID                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IconSize                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOpenIconTextureSize                    OutputSize                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Path                                                   (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Filename                                               (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseDefaultName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UOpenIconUtil::CustomIconToTexture(class UDataTable* IconData, class UFont* IconFont, const class FName IconID, const int32 IconSize, const EOpenIconTextureSize OutputSize, const class FString& Path, const class FString& Filename, bool UseDefaultName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OpenIconUtil", "CustomIconToTexture");

	Params::OpenIconUtil_CustomIconToTexture Parms{};

	Parms.IconData = IconData;
	Parms.IconFont = IconFont;
	Parms.IconID = IconID;
	Parms.IconSize = IconSize;
	Parms.OutputSize = OutputSize;
	Parms.Path = std::move(Path);
	Parms.Filename = std::move(Filename);
	Parms.UseDefaultName = UseDefaultName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OpenIcon.OpenIconUtil.CustomIconToTexture_Advanced
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        Translation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSlateColor                      ColorAndOpacity                                        (Parm, NativeAccessSpecifierPublic)
// struct FLinearColor                     ShadowColorAndOpacity                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ShadowOffset                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFontOutlineSettings             OutlineSettings                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSlateBrush                      StrikeBrush                                            (Parm, NativeAccessSpecifierPublic)
// class UDataTable*                       IconData                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFont*                            IconFont                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             IconID                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IconSize                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOpenIconTextureSize                    OutputSize                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Path                                                   (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Filename                                               (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseDefaultName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UOpenIconUtil::CustomIconToTexture_Advanced(const struct FVector2D& Translation, const struct FSlateColor& ColorAndOpacity, const struct FLinearColor& ShadowColorAndOpacity, const struct FVector2D& ShadowOffset, const struct FFontOutlineSettings& OutlineSettings, const struct FSlateBrush& StrikeBrush, class UDataTable* IconData, class UFont* IconFont, const class FName IconID, const int32 IconSize, const EOpenIconTextureSize OutputSize, const class FString& Path, const class FString& Filename, bool UseDefaultName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OpenIconUtil", "CustomIconToTexture_Advanced");

	Params::OpenIconUtil_CustomIconToTexture_Advanced Parms{};

	Parms.Translation = std::move(Translation);
	Parms.ColorAndOpacity = std::move(ColorAndOpacity);
	Parms.ShadowColorAndOpacity = std::move(ShadowColorAndOpacity);
	Parms.ShadowOffset = std::move(ShadowOffset);
	Parms.OutlineSettings = std::move(OutlineSettings);
	Parms.StrikeBrush = std::move(StrikeBrush);
	Parms.IconData = IconData;
	Parms.IconFont = IconFont;
	Parms.IconID = IconID;
	Parms.IconSize = IconSize;
	Parms.OutputSize = OutputSize;
	Parms.Path = std::move(Path);
	Parms.Filename = std::move(Filename);
	Parms.UseDefaultName = UseDefaultName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OpenIcon.OpenIconUtil.GetCustomIconDataFromTable
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UDataTable*                       DataTable                                              (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FCustomIconData>          OutData                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOpenIconUtil::GetCustomIconDataFromTable(class UDataTable* DataTable, TArray<struct FCustomIconData>* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OpenIconUtil", "GetCustomIconDataFromTable");

	Params::OpenIconUtil_GetCustomIconDataFromTable Parms{};

	Parms.DataTable = DataTable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function OpenIcon.OpenIconUtil.OpenIconToTexture
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             IconID                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IconSize                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOpenIconTextureSize                    OutputSize                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Path                                                   (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Filename                                               (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseDefaultName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UOpenIconUtil::OpenIconToTexture(const class FName IconID, const int32 IconSize, const EOpenIconTextureSize OutputSize, const class FString& Path, const class FString& Filename, bool UseDefaultName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OpenIconUtil", "OpenIconToTexture");

	Params::OpenIconUtil_OpenIconToTexture Parms{};

	Parms.IconID = IconID;
	Parms.IconSize = IconSize;
	Parms.OutputSize = OutputSize;
	Parms.Path = std::move(Path);
	Parms.Filename = std::move(Filename);
	Parms.UseDefaultName = UseDefaultName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OpenIcon.OpenIconUtil.OpenIconToTexture_Advanced
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        Translation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSlateColor                      ColorAndOpacity                                        (Parm, NativeAccessSpecifierPublic)
// struct FLinearColor                     ShadowColorAndOpacity                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ShadowOffset                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFontOutlineSettings             OutlineSettings                                        (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSlateBrush                      StrikeBrush                                            (Parm, NativeAccessSpecifierPublic)
// class FName                             IconID                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IconSize                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOpenIconTextureSize                    OutputSize                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Path                                                   (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Filename                                               (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UseDefaultName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UOpenIconUtil::OpenIconToTexture_Advanced(const struct FVector2D& Translation, const struct FSlateColor& ColorAndOpacity, const struct FLinearColor& ShadowColorAndOpacity, const struct FVector2D& ShadowOffset, const struct FFontOutlineSettings& OutlineSettings, const struct FSlateBrush& StrikeBrush, const class FName IconID, const int32 IconSize, const EOpenIconTextureSize OutputSize, const class FString& Path, const class FString& Filename, bool UseDefaultName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OpenIconUtil", "OpenIconToTexture_Advanced");

	Params::OpenIconUtil_OpenIconToTexture_Advanced Parms{};

	Parms.Translation = std::move(Translation);
	Parms.ColorAndOpacity = std::move(ColorAndOpacity);
	Parms.ShadowColorAndOpacity = std::move(ShadowColorAndOpacity);
	Parms.ShadowOffset = std::move(ShadowOffset);
	Parms.OutlineSettings = std::move(OutlineSettings);
	Parms.StrikeBrush = std::move(StrikeBrush);
	Parms.IconID = IconID;
	Parms.IconSize = IconSize;
	Parms.OutputSize = OutputSize;
	Parms.Path = std::move(Path);
	Parms.Filename = std::move(Filename);
	Parms.UseDefaultName = UseDefaultName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

