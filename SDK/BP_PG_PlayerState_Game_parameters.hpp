#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PG_PlayerState_Game

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_PG_PlayerState_Game.BP_PG_PlayerState_Game_C.ExecuteUbergraph_BP_PG_PlayerState_Game
// 0x0038 (0x0038 - 0x0000)
struct BP_PG_PlayerState_Game_C_ExecuteUbergraph_BP_PG_PlayerState_Game final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_327D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_ModuleName;                     // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UUI_Game_NotifyPossibilityUnlockModule_C* CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& ModuleName)> K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PG_PlayerState_Game_C_ExecuteUbergraph_BP_PG_PlayerState_Game) == 0x000008, "Wrong alignment on BP_PG_PlayerState_Game_C_ExecuteUbergraph_BP_PG_PlayerState_Game");
static_assert(sizeof(BP_PG_PlayerState_Game_C_ExecuteUbergraph_BP_PG_PlayerState_Game) == 0x000038, "Wrong size on BP_PG_PlayerState_Game_C_ExecuteUbergraph_BP_PG_PlayerState_Game");
static_assert(offsetof(BP_PG_PlayerState_Game_C_ExecuteUbergraph_BP_PG_PlayerState_Game, EntryPoint) == 0x000000, "Member 'BP_PG_PlayerState_Game_C_ExecuteUbergraph_BP_PG_PlayerState_Game::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerState_Game_C_ExecuteUbergraph_BP_PG_PlayerState_Game, K2Node_CustomEvent_ModuleName) == 0x000008, "Member 'BP_PG_PlayerState_Game_C_ExecuteUbergraph_BP_PG_PlayerState_Game::K2Node_CustomEvent_ModuleName' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerState_Game_C_ExecuteUbergraph_BP_PG_PlayerState_Game, CallFunc_Create_ReturnValue) == 0x000018, "Member 'BP_PG_PlayerState_Game_C_ExecuteUbergraph_BP_PG_PlayerState_Game::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerState_Game_C_ExecuteUbergraph_BP_PG_PlayerState_Game, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'BP_PG_PlayerState_Game_C_ExecuteUbergraph_BP_PG_PlayerState_Game::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerState_Game_C_ExecuteUbergraph_BP_PG_PlayerState_Game, CallFunc_IsDedicatedServer_ReturnValue) == 0x000030, "Member 'BP_PG_PlayerState_Game_C_ExecuteUbergraph_BP_PG_PlayerState_Game::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerState_Game_C_ExecuteUbergraph_BP_PG_PlayerState_Game, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'BP_PG_PlayerState_Game_C_ExecuteUbergraph_BP_PG_PlayerState_Game::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_PG_PlayerState_Game.BP_PG_PlayerState_Game_C.OnNotifyPossibilityUnlockModule_Event
// 0x0010 (0x0010 - 0x0000)
struct BP_PG_PlayerState_Game_C_OnNotifyPossibilityUnlockModule_Event final
{
public:
	class FString                                 ModuleName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PG_PlayerState_Game_C_OnNotifyPossibilityUnlockModule_Event) == 0x000008, "Wrong alignment on BP_PG_PlayerState_Game_C_OnNotifyPossibilityUnlockModule_Event");
static_assert(sizeof(BP_PG_PlayerState_Game_C_OnNotifyPossibilityUnlockModule_Event) == 0x000010, "Wrong size on BP_PG_PlayerState_Game_C_OnNotifyPossibilityUnlockModule_Event");
static_assert(offsetof(BP_PG_PlayerState_Game_C_OnNotifyPossibilityUnlockModule_Event, ModuleName) == 0x000000, "Member 'BP_PG_PlayerState_Game_C_OnNotifyPossibilityUnlockModule_Event::ModuleName' has a wrong offset!");

}

