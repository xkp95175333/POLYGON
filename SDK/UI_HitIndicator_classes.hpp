#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_HitIndicator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_HitIndicator.UI_HitIndicator_C
// 0x0030 (0x02B0 - 0x0280)
class UUI_HitIndicator_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       StartAnimation;                                    // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_Indicator;                                   // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector                                FromLocation;                                      // 0x0298(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_UI_HitIndicator(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_HitIndicator_C">();
	}
	static class UUI_HitIndicator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_HitIndicator_C>();
	}
};
static_assert(alignof(UUI_HitIndicator_C) == 0x000008, "Wrong alignment on UUI_HitIndicator_C");
static_assert(sizeof(UUI_HitIndicator_C) == 0x0002B0, "Wrong size on UUI_HitIndicator_C");
static_assert(offsetof(UUI_HitIndicator_C, UberGraphFrame) == 0x000280, "Member 'UUI_HitIndicator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_HitIndicator_C, StartAnimation) == 0x000288, "Member 'UUI_HitIndicator_C::StartAnimation' has a wrong offset!");
static_assert(offsetof(UUI_HitIndicator_C, Image_Indicator) == 0x000290, "Member 'UUI_HitIndicator_C::Image_Indicator' has a wrong offset!");
static_assert(offsetof(UUI_HitIndicator_C, FromLocation) == 0x000298, "Member 'UUI_HitIndicator_C::FromLocation' has a wrong offset!");

}

