#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MediaFrameworkUtilities

#include "Basic.hpp"

#include "MediaFrameworkUtilities_classes.hpp"
#include "MediaFrameworkUtilities_parameters.hpp"


namespace SDK
{

// Function MediaFrameworkUtilities.MediaBundle.GetLensDisplacementTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTextureRenderTarget2D* UMediaBundle::GetLensDisplacementTexture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MediaBundle", "GetLensDisplacementTexture");

	Params::MediaBundle_GetLensDisplacementTexture Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MediaFrameworkUtilities.MediaBundle.GetMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInterface* UMediaBundle::GetMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MediaBundle", "GetMaterial");

	Params::MediaBundle_GetMaterial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MediaFrameworkUtilities.MediaBundle.GetMediaPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMediaPlayer*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMediaPlayer* UMediaBundle::GetMediaPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MediaBundle", "GetMediaPlayer");

	Params::MediaBundle_GetMediaPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MediaFrameworkUtilities.MediaBundle.GetMediaSource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMediaSource*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMediaSource* UMediaBundle::GetMediaSource()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MediaBundle", "GetMediaSource");

	Params::MediaBundle_GetMediaSource Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MediaFrameworkUtilities.MediaBundle.GetMediaTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMediaTexture*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMediaTexture* UMediaBundle::GetMediaTexture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MediaBundle", "GetMediaTexture");

	Params::MediaBundle_GetMediaTexture Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MediaFrameworkUtilities.MediaBundle.GetUndistortedCameraViewInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FOpenCVCameraViewInfo            ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FOpenCVCameraViewInfo UMediaBundle::GetUndistortedCameraViewInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MediaBundle", "GetUndistortedCameraViewInfo");

	Params::MediaBundle_GetUndistortedCameraViewInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MediaFrameworkUtilities.MediaBundle.OnMediaClosed
// (Final, Native, Private)

void UMediaBundle::OnMediaClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MediaBundle", "OnMediaClosed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MediaFrameworkUtilities.MediaBundle.OnMediaOpenFailed
// (Final, Native, Private)
// Parameters:
// class FString                           DeviceUrl                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMediaBundle::OnMediaOpenFailed(const class FString& DeviceUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MediaBundle", "OnMediaOpenFailed");

	Params::MediaBundle_OnMediaOpenFailed Parms{};

	Parms.DeviceUrl = std::move(DeviceUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MediaFrameworkUtilities.MediaBundle.OnMediaOpenOpened
// (Final, Native, Private)
// Parameters:
// class FString                           DeviceUrl                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMediaBundle::OnMediaOpenOpened(const class FString& DeviceUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MediaBundle", "OnMediaOpenOpened");

	Params::MediaBundle_OnMediaOpenOpened Parms{};

	Parms.DeviceUrl = std::move(DeviceUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MediaFrameworkUtilities.MediaBundleActorBase.GetMediaBundle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMediaBundle*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMediaBundle* AMediaBundleActorBase::GetMediaBundle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MediaBundleActorBase", "GetMediaBundle");

	Params::MediaBundleActorBase_GetMediaBundle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MediaFrameworkUtilities.MediaBundleActorBase.RequestCloseMediaSource
// (Final, Native, Public, BlueprintCallable)

void AMediaBundleActorBase::RequestCloseMediaSource()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MediaBundleActorBase", "RequestCloseMediaSource");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MediaFrameworkUtilities.MediaBundleActorBase.RequestOpenMediaSource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AMediaBundleActorBase::RequestOpenMediaSource()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MediaBundleActorBase", "RequestOpenMediaSource");

	Params::MediaBundleActorBase_RequestOpenMediaSource Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MediaFrameworkUtilities.MediaBundleActorBase.SetComponent
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*              InPrimitive                                            (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMediaSoundComponent*             InMediaSound                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AMediaBundleActorBase::SetComponent(class UPrimitiveComponent* InPrimitive, class UMediaSoundComponent* InMediaSound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MediaBundleActorBase", "SetComponent");

	Params::MediaBundleActorBase_SetComponent Parms{};

	Parms.InPrimitive = InPrimitive;
	Parms.InMediaSound = InMediaSound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MediaFrameworkUtilities.MediaProfileBlueprintLibrary.GetAllMediaOutputProxy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class UProxyMediaOutput*>        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UProxyMediaOutput*> UMediaProfileBlueprintLibrary::GetAllMediaOutputProxy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MediaProfileBlueprintLibrary", "GetAllMediaOutputProxy");

	Params::MediaProfileBlueprintLibrary_GetAllMediaOutputProxy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MediaFrameworkUtilities.MediaProfileBlueprintLibrary.GetAllMediaSourceProxy
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class UProxyMediaSource*>        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UProxyMediaSource*> UMediaProfileBlueprintLibrary::GetAllMediaSourceProxy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MediaProfileBlueprintLibrary", "GetAllMediaSourceProxy");

	Params::MediaProfileBlueprintLibrary_GetAllMediaSourceProxy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MediaFrameworkUtilities.MediaProfileBlueprintLibrary.GetMediaProfile
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UMediaProfile*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMediaProfile* UMediaProfileBlueprintLibrary::GetMediaProfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MediaProfileBlueprintLibrary", "GetMediaProfile");

	Params::MediaProfileBlueprintLibrary_GetMediaProfile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MediaFrameworkUtilities.MediaProfileBlueprintLibrary.SetMediaProfile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UMediaProfile*                    MediaProfile                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMediaProfileBlueprintLibrary::SetMediaProfile(class UMediaProfile* MediaProfile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MediaProfileBlueprintLibrary", "SetMediaProfile");

	Params::MediaProfileBlueprintLibrary_SetMediaProfile Parms{};

	Parms.MediaProfile = MediaProfile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MediaFrameworkUtilities.ProxyMediaOutput.IsProxyValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UProxyMediaOutput::IsProxyValid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProxyMediaOutput", "IsProxyValid");

	Params::ProxyMediaOutput_IsProxyValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MediaFrameworkUtilities.ProxyMediaSource.IsProxyValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UProxyMediaSource::IsProxyValid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProxyMediaSource", "IsProxyValid");

	Params::ProxyMediaSource_IsProxyValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

