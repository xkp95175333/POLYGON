#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Actions

#include "Basic.hpp"

#include "Actions_structs.hpp"


namespace SDK::Params
{

// Function Actions.Action.Fail
// 0x0008 (0x0008 - 0x0000)
struct Action_Fail final
{
public:
	class FName                                   Error;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Action_Fail) == 0x000004, "Wrong alignment on Action_Fail");
static_assert(sizeof(Action_Fail) == 0x000008, "Wrong size on Action_Fail");
static_assert(offsetof(Action_Fail, Error) == 0x000000, "Member 'Action_Fail::Error' has a wrong offset!");

// Function Actions.Action.ReceiveCanActivate
// 0x0001 (0x0001 - 0x0000)
struct Action_ReceiveCanActivate final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Action_ReceiveCanActivate) == 0x000001, "Wrong alignment on Action_ReceiveCanActivate");
static_assert(sizeof(Action_ReceiveCanActivate) == 0x000001, "Wrong size on Action_ReceiveCanActivate");
static_assert(offsetof(Action_ReceiveCanActivate, ReturnValue) == 0x000000, "Member 'Action_ReceiveCanActivate::ReturnValue' has a wrong offset!");

// Function Actions.Action.ReceiveFinished
// 0x0001 (0x0001 - 0x0000)
struct Action_ReceiveFinished final
{
public:
	EActionState                                  Reason;                                            // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Action_ReceiveFinished) == 0x000001, "Wrong alignment on Action_ReceiveFinished");
static_assert(sizeof(Action_ReceiveFinished) == 0x000001, "Wrong size on Action_ReceiveFinished");
static_assert(offsetof(Action_ReceiveFinished, Reason) == 0x000000, "Member 'Action_ReceiveFinished::Reason' has a wrong offset!");

// Function Actions.Action.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Action_ReceiveTick final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Action_ReceiveTick) == 0x000004, "Wrong alignment on Action_ReceiveTick");
static_assert(sizeof(Action_ReceiveTick) == 0x000004, "Wrong size on Action_ReceiveTick");
static_assert(offsetof(Action_ReceiveTick, DeltaTime) == 0x000000, "Member 'Action_ReceiveTick::DeltaTime' has a wrong offset!");

// Function Actions.Action.Failed
// 0x0001 (0x0001 - 0x0000)
struct Action_Failed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Action_Failed) == 0x000001, "Wrong alignment on Action_Failed");
static_assert(sizeof(Action_Failed) == 0x000001, "Wrong size on Action_Failed");
static_assert(offsetof(Action_Failed, ReturnValue) == 0x000000, "Member 'Action_Failed::ReturnValue' has a wrong offset!");

// Function Actions.Action.GetOwner
// 0x0008 (0x0008 - 0x0000)
struct Action_GetOwner final
{
public:
	class UObject*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Action_GetOwner) == 0x000008, "Wrong alignment on Action_GetOwner");
static_assert(sizeof(Action_GetOwner) == 0x000008, "Wrong size on Action_GetOwner");
static_assert(offsetof(Action_GetOwner, ReturnValue) == 0x000000, "Member 'Action_GetOwner::ReturnValue' has a wrong offset!");

// Function Actions.Action.GetOwnerActor
// 0x0008 (0x0008 - 0x0000)
struct Action_GetOwnerActor final
{
public:
	class AActor*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Action_GetOwnerActor) == 0x000008, "Wrong alignment on Action_GetOwnerActor");
static_assert(sizeof(Action_GetOwnerActor) == 0x000008, "Wrong size on Action_GetOwnerActor");
static_assert(offsetof(Action_GetOwnerActor, ReturnValue) == 0x000000, "Member 'Action_GetOwnerActor::ReturnValue' has a wrong offset!");

// Function Actions.Action.GetOwnerComponent
// 0x0008 (0x0008 - 0x0000)
struct Action_GetOwnerComponent final
{
public:
	class UActorComponent*                        ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Action_GetOwnerComponent) == 0x000008, "Wrong alignment on Action_GetOwnerComponent");
static_assert(sizeof(Action_GetOwnerComponent) == 0x000008, "Wrong size on Action_GetOwnerComponent");
static_assert(offsetof(Action_GetOwnerComponent, ReturnValue) == 0x000000, "Member 'Action_GetOwnerComponent::ReturnValue' has a wrong offset!");

// Function Actions.Action.GetParent
// 0x0008 (0x0008 - 0x0000)
struct Action_GetParent final
{
public:
	const class UObject*                          ReturnValue;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Action_GetParent) == 0x000008, "Wrong alignment on Action_GetParent");
static_assert(sizeof(Action_GetParent) == 0x000008, "Wrong size on Action_GetParent");
static_assert(offsetof(Action_GetParent, ReturnValue) == 0x000000, "Member 'Action_GetParent::ReturnValue' has a wrong offset!");

// Function Actions.Action.GetParentAction
// 0x0008 (0x0008 - 0x0000)
struct Action_GetParentAction final
{
public:
	class UAction*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Action_GetParentAction) == 0x000008, "Wrong alignment on Action_GetParentAction");
static_assert(sizeof(Action_GetParentAction) == 0x000008, "Wrong size on Action_GetParentAction");
static_assert(offsetof(Action_GetParentAction, ReturnValue) == 0x000000, "Member 'Action_GetParentAction::ReturnValue' has a wrong offset!");

// Function Actions.Action.GetState
// 0x0001 (0x0001 - 0x0000)
struct Action_GetState final
{
public:
	EActionState                                  ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Action_GetState) == 0x000001, "Wrong alignment on Action_GetState");
static_assert(sizeof(Action_GetState) == 0x000001, "Wrong size on Action_GetState");
static_assert(offsetof(Action_GetState, ReturnValue) == 0x000000, "Member 'Action_GetState::ReturnValue' has a wrong offset!");

// Function Actions.Action.GetTickRate
// 0x0004 (0x0004 - 0x0000)
struct Action_GetTickRate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Action_GetTickRate) == 0x000004, "Wrong alignment on Action_GetTickRate");
static_assert(sizeof(Action_GetTickRate) == 0x000004, "Wrong size on Action_GetTickRate");
static_assert(offsetof(Action_GetTickRate, ReturnValue) == 0x000000, "Member 'Action_GetTickRate::ReturnValue' has a wrong offset!");

// Function Actions.Action.IsRunning
// 0x0001 (0x0001 - 0x0000)
struct Action_IsRunning final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Action_IsRunning) == 0x000001, "Wrong alignment on Action_IsRunning");
static_assert(sizeof(Action_IsRunning) == 0x000001, "Wrong size on Action_IsRunning");
static_assert(offsetof(Action_IsRunning, ReturnValue) == 0x000000, "Member 'Action_IsRunning::ReturnValue' has a wrong offset!");

// Function Actions.Action.Succeeded
// 0x0001 (0x0001 - 0x0000)
struct Action_Succeeded final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(Action_Succeeded) == 0x000001, "Wrong alignment on Action_Succeeded");
static_assert(sizeof(Action_Succeeded) == 0x000001, "Wrong size on Action_Succeeded");
static_assert(offsetof(Action_Succeeded, ReturnValue) == 0x000000, "Member 'Action_Succeeded::ReturnValue' has a wrong offset!");

// Function Actions.ActionLibrary.CreateAction
// 0x0020 (0x0020 - 0x0000)
struct ActionLibrary_CreateAction final
{
public:
	class UObject*                                Owner;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAction>                    Type;                                              // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoActivate;                                     // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1FB3[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAction*                                ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ActionLibrary_CreateAction) == 0x000008, "Wrong alignment on ActionLibrary_CreateAction");
static_assert(sizeof(ActionLibrary_CreateAction) == 0x000020, "Wrong size on ActionLibrary_CreateAction");
static_assert(offsetof(ActionLibrary_CreateAction, Owner) == 0x000000, "Member 'ActionLibrary_CreateAction::Owner' has a wrong offset!");
static_assert(offsetof(ActionLibrary_CreateAction, Type) == 0x000008, "Member 'ActionLibrary_CreateAction::Type' has a wrong offset!");
static_assert(offsetof(ActionLibrary_CreateAction, bAutoActivate) == 0x000010, "Member 'ActionLibrary_CreateAction::bAutoActivate' has a wrong offset!");
static_assert(offsetof(ActionLibrary_CreateAction, ReturnValue) == 0x000018, "Member 'ActionLibrary_CreateAction::ReturnValue' has a wrong offset!");

// Function Actions.ActionsSubsystem.CancelAllByClass
// 0x0018 (0x0018 - 0x0000)
struct ActionsSubsystem_CancelAllByClass final
{
public:
	class UClass*                                 ActionClass;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UAction*>                        IgnoreActions;                                     // 0x0008(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(ActionsSubsystem_CancelAllByClass) == 0x000008, "Wrong alignment on ActionsSubsystem_CancelAllByClass");
static_assert(sizeof(ActionsSubsystem_CancelAllByClass) == 0x000018, "Wrong size on ActionsSubsystem_CancelAllByClass");
static_assert(offsetof(ActionsSubsystem_CancelAllByClass, ActionClass) == 0x000000, "Member 'ActionsSubsystem_CancelAllByClass::ActionClass' has a wrong offset!");
static_assert(offsetof(ActionsSubsystem_CancelAllByClass, IgnoreActions) == 0x000008, "Member 'ActionsSubsystem_CancelAllByClass::IgnoreActions' has a wrong offset!");

// Function Actions.ActionsSubsystem.CancelAllByOwner
// 0x0008 (0x0008 - 0x0000)
struct ActionsSubsystem_CancelAllByOwner final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ActionsSubsystem_CancelAllByOwner) == 0x000008, "Wrong alignment on ActionsSubsystem_CancelAllByOwner");
static_assert(sizeof(ActionsSubsystem_CancelAllByOwner) == 0x000008, "Wrong size on ActionsSubsystem_CancelAllByOwner");
static_assert(offsetof(ActionsSubsystem_CancelAllByOwner, Object) == 0x000000, "Member 'ActionsSubsystem_CancelAllByOwner::Object' has a wrong offset!");

// Function Actions.BTT_RunAction.OnRunActionFinished
// 0x0001 (0x0001 - 0x0000)
struct BTT_RunAction_OnRunActionFinished final
{
public:
	EActionState                                  Reason;                                            // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BTT_RunAction_OnRunActionFinished) == 0x000001, "Wrong alignment on BTT_RunAction_OnRunActionFinished");
static_assert(sizeof(BTT_RunAction_OnRunActionFinished) == 0x000001, "Wrong size on BTT_RunAction_OnRunActionFinished");
static_assert(offsetof(BTT_RunAction_OnRunActionFinished, Reason) == 0x000000, "Member 'BTT_RunAction_OnRunActionFinished::Reason' has a wrong offset!");

}

