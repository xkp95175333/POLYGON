#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WidgetFunctionLibrary

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WidgetFunctionLibrary.WidgetFunctionLibrary.CheckWidgetIsActive
// 0x0010 (0x0010 - 0x0000)
struct WidgetFunctionLibrary_CheckWidgetIsActive final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24CB[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(WidgetFunctionLibrary_CheckWidgetIsActive) == 0x000008, "Wrong alignment on WidgetFunctionLibrary_CheckWidgetIsActive");
static_assert(sizeof(WidgetFunctionLibrary_CheckWidgetIsActive) == 0x000010, "Wrong size on WidgetFunctionLibrary_CheckWidgetIsActive");
static_assert(offsetof(WidgetFunctionLibrary_CheckWidgetIsActive, Widget) == 0x000000, "Member 'WidgetFunctionLibrary_CheckWidgetIsActive::Widget' has a wrong offset!");
static_assert(offsetof(WidgetFunctionLibrary_CheckWidgetIsActive, ReturnValue) == 0x000008, "Member 'WidgetFunctionLibrary_CheckWidgetIsActive::ReturnValue' has a wrong offset!");

// Function WidgetFunctionLibrary.WidgetFunctionLibrary.DrawLineUnder
// 0x0068 (0x0068 - 0x0000)
struct WidgetFunctionLibrary_DrawLineUnder final
{
public:
	struct FPaintContext                          Context;                                           // 0x0000(0x0030)(Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector2D                              PositionA;                                         // 0x0030(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              PositionB;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Tint;                                              // 0x0050(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAntiAlias;                                        // 0x0060(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24CC[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Thickness;                                         // 0x0064(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WidgetFunctionLibrary_DrawLineUnder) == 0x000008, "Wrong alignment on WidgetFunctionLibrary_DrawLineUnder");
static_assert(sizeof(WidgetFunctionLibrary_DrawLineUnder) == 0x000068, "Wrong size on WidgetFunctionLibrary_DrawLineUnder");
static_assert(offsetof(WidgetFunctionLibrary_DrawLineUnder, Context) == 0x000000, "Member 'WidgetFunctionLibrary_DrawLineUnder::Context' has a wrong offset!");
static_assert(offsetof(WidgetFunctionLibrary_DrawLineUnder, PositionA) == 0x000030, "Member 'WidgetFunctionLibrary_DrawLineUnder::PositionA' has a wrong offset!");
static_assert(offsetof(WidgetFunctionLibrary_DrawLineUnder, PositionB) == 0x000040, "Member 'WidgetFunctionLibrary_DrawLineUnder::PositionB' has a wrong offset!");
static_assert(offsetof(WidgetFunctionLibrary_DrawLineUnder, Tint) == 0x000050, "Member 'WidgetFunctionLibrary_DrawLineUnder::Tint' has a wrong offset!");
static_assert(offsetof(WidgetFunctionLibrary_DrawLineUnder, bAntiAlias) == 0x000060, "Member 'WidgetFunctionLibrary_DrawLineUnder::bAntiAlias' has a wrong offset!");
static_assert(offsetof(WidgetFunctionLibrary_DrawLineUnder, Thickness) == 0x000064, "Member 'WidgetFunctionLibrary_DrawLineUnder::Thickness' has a wrong offset!");

// Function WidgetFunctionLibrary.WidgetFunctionLibrary.GetAllWidgetsInTree
// 0x0018 (0x0018 - 0x0000)
struct WidgetFunctionLibrary_GetAllWidgetsInTree final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UWidget*>                        ReturnValue;                                       // 0x0008(0x0010)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(WidgetFunctionLibrary_GetAllWidgetsInTree) == 0x000008, "Wrong alignment on WidgetFunctionLibrary_GetAllWidgetsInTree");
static_assert(sizeof(WidgetFunctionLibrary_GetAllWidgetsInTree) == 0x000018, "Wrong size on WidgetFunctionLibrary_GetAllWidgetsInTree");
static_assert(offsetof(WidgetFunctionLibrary_GetAllWidgetsInTree, Widget) == 0x000000, "Member 'WidgetFunctionLibrary_GetAllWidgetsInTree::Widget' has a wrong offset!");
static_assert(offsetof(WidgetFunctionLibrary_GetAllWidgetsInTree, ReturnValue) == 0x000008, "Member 'WidgetFunctionLibrary_GetAllWidgetsInTree::ReturnValue' has a wrong offset!");

// Function WidgetFunctionLibrary.WidgetFunctionLibrary.GetRootWidget
// 0x0010 (0x0010 - 0x0000)
struct WidgetFunctionLibrary_GetRootWidget final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WidgetFunctionLibrary_GetRootWidget) == 0x000008, "Wrong alignment on WidgetFunctionLibrary_GetRootWidget");
static_assert(sizeof(WidgetFunctionLibrary_GetRootWidget) == 0x000010, "Wrong size on WidgetFunctionLibrary_GetRootWidget");
static_assert(offsetof(WidgetFunctionLibrary_GetRootWidget, Widget) == 0x000000, "Member 'WidgetFunctionLibrary_GetRootWidget::Widget' has a wrong offset!");
static_assert(offsetof(WidgetFunctionLibrary_GetRootWidget, ReturnValue) == 0x000008, "Member 'WidgetFunctionLibrary_GetRootWidget::ReturnValue' has a wrong offset!");

// Function WidgetFunctionLibrary.WidgetFunctionLibrary.GetSlotContent
// 0x0010 (0x0010 - 0x0000)
struct WidgetFunctionLibrary_GetSlotContent final
{
public:
	class UPanelSlot*                             Slot;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WidgetFunctionLibrary_GetSlotContent) == 0x000008, "Wrong alignment on WidgetFunctionLibrary_GetSlotContent");
static_assert(sizeof(WidgetFunctionLibrary_GetSlotContent) == 0x000010, "Wrong size on WidgetFunctionLibrary_GetSlotContent");
static_assert(offsetof(WidgetFunctionLibrary_GetSlotContent, Slot) == 0x000000, "Member 'WidgetFunctionLibrary_GetSlotContent::Slot' has a wrong offset!");
static_assert(offsetof(WidgetFunctionLibrary_GetSlotContent, ReturnValue) == 0x000008, "Member 'WidgetFunctionLibrary_GetSlotContent::ReturnValue' has a wrong offset!");

}

