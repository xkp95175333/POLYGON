#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_CaptureProcess

#include "Basic.hpp"

#include "UI_CaptureProcess_classes.hpp"
#include "UI_CaptureProcess_parameters.hpp"


namespace SDK
{

// Function UI_CaptureProcess.UI_CaptureProcess_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_CaptureProcess_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CaptureProcess_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_CaptureProcess.UI_CaptureProcess_C.ExecuteUbergraph_UI_CaptureProcess
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_CaptureProcess_C::ExecuteUbergraph_UI_CaptureProcess(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CaptureProcess_C", "ExecuteUbergraph_UI_CaptureProcess");

	Params::UI_CaptureProcess_C_ExecuteUbergraph_UI_CaptureProcess Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CaptureProcess.UI_CaptureProcess_C.GetCapturePointsByTeam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ETeam                                   Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MyTeam                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OpponentTeam                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_CaptureProcess_C::GetCapturePointsByTeam(ETeam Team, int32* MyTeam, int32* OpponentTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CaptureProcess_C", "GetCapturePointsByTeam");

	Params::UI_CaptureProcess_C_GetCapturePointsByTeam Parms{};

	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);

	if (MyTeam != nullptr)
		*MyTeam = Parms.MyTeam;

	if (OpponentTeam != nullptr)
		*OpponentTeam = Parms.OpponentTeam;
}


// Function UI_CaptureProcess.UI_CaptureProcess_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_CaptureProcess_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CaptureProcess_C", "PreConstruct");

	Params::UI_CaptureProcess_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_CaptureProcess.UI_CaptureProcess_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_CaptureProcess_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_CaptureProcess_C", "Tick");

	Params::UI_CaptureProcess_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

