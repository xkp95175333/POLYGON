#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PG_PlayerController_Game

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "POLYGON_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PG_PlayerController_Game.BP_PG_PlayerController_Game_C
// 0x0040 (0x08F8 - 0x08B8)
class ABP_PG_PlayerController_Game_C final : public APG_PlayerController_Game
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x08B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_EventManagerComponent_C*            BP_EventManagerComponent;                          // 0x08C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_FOVManagerComponent_Game_C*         BP_FOVManagerComponent_Game;                       // 0x08C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UUI_GeneralGameScreen_C*                UI_GeneralGameScreen;                              // 0x08D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_InteractionTime_C*                  UI_InteractionTime;                                // 0x08D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_CameraTransitions_DarkenScreen_C*   UI_DarkenScreen;                                   // 0x08E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_CaptureProcess_C*                   UI_CaptureProcess;                                 // 0x08E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_KillCam_C*                          UI_KillerInfo;                                     // 0x08F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void CloseScoreboard();
	void DisplayMessageToChatEvent(const struct FGameChatMessage& Message);
	void ExecuteUbergraph_BP_PG_PlayerController_Game(int32 EntryPoint);
	void InpActEvt_ChatAll_K2Node_InputActionEvent_2(const struct FKey& Key);
	void InpActEvt_ChatTeam_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpActEvt_Escape_K2Node_InputKeyEvent_2(const struct FKey& Key);
	void InpActEvt_HideInterface_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_MiddleMouseButton_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpActEvt_N_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpActEvt_Scoreboard_K2Node_InputActionEvent_3(const struct FKey& Key);
	void InpActEvt_Scoreboard_K2Node_InputActionEvent_4(const struct FKey& Key);
	void NotifyPossibilityUnlockModule(class AItem_Gun_General* Gun);
	void OnAddedGameScore_Event(const TArray<struct FScoreInfoBlueprint>& ScoreInfos);
	void OnClientReset_Event();
	void OnIsAlive_Event();
	void OnPossessedPawnChanged_Event(class APawn* OldPawn, class APawn* NewPawn);
	void OnSetCharacterHiddenInGame_Event();
	void OpenScoreboard();
	void ReceiveBeginPlay();
	void Reset();
	void SetPlayerState();
	void StartInteractionEvent(const float InteractionTime);
	void StopInteractionEvent();
	void ToggleVisibilityInterface(bool ForceVisible);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PG_PlayerController_Game_C">();
	}
	static class ABP_PG_PlayerController_Game_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PG_PlayerController_Game_C>();
	}
};
static_assert(alignof(ABP_PG_PlayerController_Game_C) == 0x000008, "Wrong alignment on ABP_PG_PlayerController_Game_C");
static_assert(sizeof(ABP_PG_PlayerController_Game_C) == 0x0008F8, "Wrong size on ABP_PG_PlayerController_Game_C");
static_assert(offsetof(ABP_PG_PlayerController_Game_C, UberGraphFrame) == 0x0008B8, "Member 'ABP_PG_PlayerController_Game_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PG_PlayerController_Game_C, BP_EventManagerComponent) == 0x0008C0, "Member 'ABP_PG_PlayerController_Game_C::BP_EventManagerComponent' has a wrong offset!");
static_assert(offsetof(ABP_PG_PlayerController_Game_C, BP_FOVManagerComponent_Game) == 0x0008C8, "Member 'ABP_PG_PlayerController_Game_C::BP_FOVManagerComponent_Game' has a wrong offset!");
static_assert(offsetof(ABP_PG_PlayerController_Game_C, UI_GeneralGameScreen) == 0x0008D0, "Member 'ABP_PG_PlayerController_Game_C::UI_GeneralGameScreen' has a wrong offset!");
static_assert(offsetof(ABP_PG_PlayerController_Game_C, UI_InteractionTime) == 0x0008D8, "Member 'ABP_PG_PlayerController_Game_C::UI_InteractionTime' has a wrong offset!");
static_assert(offsetof(ABP_PG_PlayerController_Game_C, UI_DarkenScreen) == 0x0008E0, "Member 'ABP_PG_PlayerController_Game_C::UI_DarkenScreen' has a wrong offset!");
static_assert(offsetof(ABP_PG_PlayerController_Game_C, UI_CaptureProcess) == 0x0008E8, "Member 'ABP_PG_PlayerController_Game_C::UI_CaptureProcess' has a wrong offset!");
static_assert(offsetof(ABP_PG_PlayerController_Game_C, UI_KillerInfo) == 0x0008F0, "Member 'ABP_PG_PlayerController_Game_C::UI_KillerInfo' has a wrong offset!");

}

