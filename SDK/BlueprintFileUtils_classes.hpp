#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BlueprintFileUtils

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// Class BlueprintFileUtils.BlueprintFileUtilsBPLibrary
// 0x0000 (0x0028 - 0x0028)
class UBlueprintFileUtilsBPLibrary final : public UBlueprintFunctionLibrary
{
public:
	static bool CopyFile(const class FString& DestFilename, const class FString& SrcFilename, bool bReplace, bool bEvenIfReadOnly);
	static bool DeleteDirectory(const class FString& Directory, bool bMustExist, bool bDeleteRecursively);
	static bool DeleteFile(const class FString& Filename, bool bMustExist, bool bEvenIfReadOnly);
	static bool DirectoryExists(const class FString& Directory);
	static bool FileExists(const class FString& Filename);
	static bool FindFiles(const class FString& Directory, TArray<class FString>* FoundFiles, const class FString& FileExtension);
	static bool FindRecursive(const class FString& StartDirectory, TArray<class FString>* FoundPaths, const class FString& Wildcard, bool bFindFiles, bool bFindDirectories);
	static class FString GetUserDirectory();
	static bool MakeDirectory(const class FString& Path, bool bCreateTree);
	static bool MoveFile(const class FString& DestFilename, const class FString& SrcFilename, bool bReplace, bool bEvenIfReadOnly);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BlueprintFileUtilsBPLibrary">();
	}
	static class UBlueprintFileUtilsBPLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBlueprintFileUtilsBPLibrary>();
	}
};
static_assert(alignof(UBlueprintFileUtilsBPLibrary) == 0x000008, "Wrong alignment on UBlueprintFileUtilsBPLibrary");
static_assert(sizeof(UBlueprintFileUtilsBPLibrary) == 0x000028, "Wrong size on UBlueprintFileUtilsBPLibrary");

}

