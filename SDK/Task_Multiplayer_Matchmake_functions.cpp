#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Task_Multiplayer_Matchmake

#include "Basic.hpp"

#include "Task_Multiplayer_Matchmake_classes.hpp"
#include "Task_Multiplayer_Matchmake_parameters.hpp"


namespace SDK
{

// Function Task_Multiplayer_Matchmake.Task_Multiplayer_Matchmake_C.ConnectToBestServer
// (BlueprintCallable, BlueprintEvent)

void UTask_Multiplayer_Matchmake_C::ConnectToBestServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Multiplayer_Matchmake_C", "ConnectToBestServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Task_Multiplayer_Matchmake.Task_Multiplayer_Matchmake_C.ExecuteUbergraph_Task_Multiplayer_Matchmake
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTask_Multiplayer_Matchmake_C::ExecuteUbergraph_Task_Multiplayer_Matchmake(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Multiplayer_Matchmake_C", "ExecuteUbergraph_Task_Multiplayer_Matchmake");

	Params::Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Task_Multiplayer_Matchmake.Task_Multiplayer_Matchmake_C.OnConnectionFinished_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSuccessful                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTask_Multiplayer_Matchmake_C::OnConnectionFinished_Event(bool IsSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Multiplayer_Matchmake_C", "OnConnectionFinished_Event");

	Params::Task_Multiplayer_Matchmake_C_OnConnectionFinished_Event Parms{};

	Parms.IsSuccessful = IsSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Task_Multiplayer_Matchmake.Task_Multiplayer_Matchmake_C.OnServerListUpdated_Event
// (BlueprintCallable, BlueprintEvent)

void UTask_Multiplayer_Matchmake_C::OnServerListUpdated_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Multiplayer_Matchmake_C", "OnServerListUpdated_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Task_Multiplayer_Matchmake.Task_Multiplayer_Matchmake_C.ReceiveActivate
// (Event, Protected, BlueprintEvent)

void UTask_Multiplayer_Matchmake_C::ReceiveActivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Multiplayer_Matchmake_C", "ReceiveActivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Task_Multiplayer_Matchmake.Task_Multiplayer_Matchmake_C.SelectBestServer
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UUI_ServerInfo_C*                 BestServer                                             (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UTask_Multiplayer_Matchmake_C::SelectBestServer(class UUI_ServerInfo_C** BestServer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Multiplayer_Matchmake_C", "SelectBestServer");

	Params::Task_Multiplayer_Matchmake_C_SelectBestServer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BestServer != nullptr)
		*BestServer = Parms.BestServer;
}

}

