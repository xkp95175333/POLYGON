#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Item_Gear_Watch_04

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Item_Gear_Watch_04.BP_Item_Gear_Watch_04_C.ExecuteUbergraph_BP_Item_Gear_Watch_04
// 0x0128 (0x0128 - 0x0000)
struct BP_Item_Gear_Watch_04_C_ExecuteUbergraph_BP_Item_Gear_Watch_04 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32E4[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32E5[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_useFovMaterial;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32E6[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0040(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Item_Gear_Watch_04_C_ExecuteUbergraph_BP_Item_Gear_Watch_04) == 0x000008, "Wrong alignment on BP_Item_Gear_Watch_04_C_ExecuteUbergraph_BP_Item_Gear_Watch_04");
static_assert(sizeof(BP_Item_Gear_Watch_04_C_ExecuteUbergraph_BP_Item_Gear_Watch_04) == 0x000128, "Wrong size on BP_Item_Gear_Watch_04_C_ExecuteUbergraph_BP_Item_Gear_Watch_04");
static_assert(offsetof(BP_Item_Gear_Watch_04_C_ExecuteUbergraph_BP_Item_Gear_Watch_04, EntryPoint) == 0x000000, "Member 'BP_Item_Gear_Watch_04_C_ExecuteUbergraph_BP_Item_Gear_Watch_04::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Item_Gear_Watch_04_C_ExecuteUbergraph_BP_Item_Gear_Watch_04, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_Item_Gear_Watch_04_C_ExecuteUbergraph_BP_Item_Gear_Watch_04::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Gear_Watch_04_C_ExecuteUbergraph_BP_Item_Gear_Watch_04, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_Item_Gear_Watch_04_C_ExecuteUbergraph_BP_Item_Gear_Watch_04::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Gear_Watch_04_C_ExecuteUbergraph_BP_Item_Gear_Watch_04, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'BP_Item_Gear_Watch_04_C_ExecuteUbergraph_BP_Item_Gear_Watch_04::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Gear_Watch_04_C_ExecuteUbergraph_BP_Item_Gear_Watch_04, K2Node_Event_DeltaSeconds) == 0x00001C, "Member 'BP_Item_Gear_Watch_04_C_ExecuteUbergraph_BP_Item_Gear_Watch_04::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Item_Gear_Watch_04_C_ExecuteUbergraph_BP_Item_Gear_Watch_04, K2Node_Event_useFovMaterial) == 0x000020, "Member 'BP_Item_Gear_Watch_04_C_ExecuteUbergraph_BP_Item_Gear_Watch_04::K2Node_Event_useFovMaterial' has a wrong offset!");
static_assert(offsetof(BP_Item_Gear_Watch_04_C_ExecuteUbergraph_BP_Item_Gear_Watch_04, CallFunc_ComposeRotators_ReturnValue) == 0x000028, "Member 'BP_Item_Gear_Watch_04_C_ExecuteUbergraph_BP_Item_Gear_Watch_04::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Gear_Watch_04_C_ExecuteUbergraph_BP_Item_Gear_Watch_04, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000040, "Member 'BP_Item_Gear_Watch_04_C_ExecuteUbergraph_BP_Item_Gear_Watch_04::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

// Function BP_Item_Gear_Watch_04.BP_Item_Gear_Watch_04_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Item_Gear_Watch_04_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Item_Gear_Watch_04_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Item_Gear_Watch_04_C_ReceiveTick");
static_assert(sizeof(BP_Item_Gear_Watch_04_C_ReceiveTick) == 0x000004, "Wrong size on BP_Item_Gear_Watch_04_C_ReceiveTick");
static_assert(offsetof(BP_Item_Gear_Watch_04_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Item_Gear_Watch_04_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Item_Gear_Watch_04.BP_Item_Gear_Watch_04_C.SetCorrectiveFovMaterial
// 0x0001 (0x0001 - 0x0000)
struct BP_Item_Gear_Watch_04_C_SetCorrectiveFovMaterial final
{
public:
	bool                                          UseFovMaterial;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Item_Gear_Watch_04_C_SetCorrectiveFovMaterial) == 0x000001, "Wrong alignment on BP_Item_Gear_Watch_04_C_SetCorrectiveFovMaterial");
static_assert(sizeof(BP_Item_Gear_Watch_04_C_SetCorrectiveFovMaterial) == 0x000001, "Wrong size on BP_Item_Gear_Watch_04_C_SetCorrectiveFovMaterial");
static_assert(offsetof(BP_Item_Gear_Watch_04_C_SetCorrectiveFovMaterial, UseFovMaterial) == 0x000000, "Member 'BP_Item_Gear_Watch_04_C_SetCorrectiveFovMaterial::UseFovMaterial' has a wrong offset!");

}

