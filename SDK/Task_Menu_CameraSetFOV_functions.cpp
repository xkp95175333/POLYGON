#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Task_Menu_CameraSetFOV

#include "Basic.hpp"

#include "Task_Menu_CameraSetFOV_classes.hpp"
#include "Task_Menu_CameraSetFOV_parameters.hpp"


namespace SDK
{

// Function Task_Menu_CameraSetFOV.Task_Menu_CameraSetFOV_C.ExecuteUbergraph_Task_Menu_CameraSetFOV
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTask_Menu_CameraSetFOV_C::ExecuteUbergraph_Task_Menu_CameraSetFOV(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Menu_CameraSetFOV_C", "ExecuteUbergraph_Task_Menu_CameraSetFOV");

	Params::Task_Menu_CameraSetFOV_C_ExecuteUbergraph_Task_Menu_CameraSetFOV Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Task_Menu_CameraSetFOV.Task_Menu_CameraSetFOV_C.ReceiveActivate
// (Event, Protected, BlueprintEvent)

void UTask_Menu_CameraSetFOV_C::ReceiveActivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Menu_CameraSetFOV_C", "ReceiveActivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Task_Menu_CameraSetFOV.Task_Menu_CameraSetFOV_C.ReceiveTick
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTask_Menu_CameraSetFOV_C::ReceiveTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Menu_CameraSetFOV_C", "ReceiveTick");

	Params::Task_Menu_CameraSetFOV_C_ReceiveTick Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

