#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_CharacterPG_TP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "POLYGON_structs.hpp"


namespace SDK::Params
{

// Function ABP_CharacterPG_TP.ABP_CharacterPG_TP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_CharacterPG_TP_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_CharacterPG_TP_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_CharacterPG_TP_C_AnimGraph");
static_assert(sizeof(ABP_CharacterPG_TP_C_AnimGraph) == 0x000010, "Wrong size on ABP_CharacterPG_TP_C_AnimGraph");
static_assert(offsetof(ABP_CharacterPG_TP_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'ABP_CharacterPG_TP_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

// Function ABP_CharacterPG_TP.ABP_CharacterPG_TP_C.BaseLocomotion
// 0x0010 (0x0010 - 0x0000)
struct ABP_CharacterPG_TP_C_BaseLocomotion final
{
public:
	struct FPoseLink                              Param_BaseLocomotion;                              // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_CharacterPG_TP_C_BaseLocomotion) == 0x000008, "Wrong alignment on ABP_CharacterPG_TP_C_BaseLocomotion");
static_assert(sizeof(ABP_CharacterPG_TP_C_BaseLocomotion) == 0x000010, "Wrong size on ABP_CharacterPG_TP_C_BaseLocomotion");
static_assert(offsetof(ABP_CharacterPG_TP_C_BaseLocomotion, Param_BaseLocomotion) == 0x000000, "Member 'ABP_CharacterPG_TP_C_BaseLocomotion::Param_BaseLocomotion' has a wrong offset!");

// Function ABP_CharacterPG_TP.ABP_CharacterPG_TP_C.BasePose
// 0x0010 (0x0010 - 0x0000)
struct ABP_CharacterPG_TP_C_BasePose final
{
public:
	struct FPoseLink                              Param_BasePose;                                    // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_CharacterPG_TP_C_BasePose) == 0x000008, "Wrong alignment on ABP_CharacterPG_TP_C_BasePose");
static_assert(sizeof(ABP_CharacterPG_TP_C_BasePose) == 0x000010, "Wrong size on ABP_CharacterPG_TP_C_BasePose");
static_assert(offsetof(ABP_CharacterPG_TP_C_BasePose, Param_BasePose) == 0x000000, "Member 'ABP_CharacterPG_TP_C_BasePose::Param_BasePose' has a wrong offset!");

// Function ABP_CharacterPG_TP.ABP_CharacterPG_TP_C.BlueprintThreadSafeUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_CharacterPG_TP_C_BlueprintThreadSafeUpdateAnimation final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_CharacterPG_TP_C_BlueprintThreadSafeUpdateAnimation) == 0x000004, "Wrong alignment on ABP_CharacterPG_TP_C_BlueprintThreadSafeUpdateAnimation");
static_assert(sizeof(ABP_CharacterPG_TP_C_BlueprintThreadSafeUpdateAnimation) == 0x000004, "Wrong size on ABP_CharacterPG_TP_C_BlueprintThreadSafeUpdateAnimation");
static_assert(offsetof(ABP_CharacterPG_TP_C_BlueprintThreadSafeUpdateAnimation, DeltaTime) == 0x000000, "Member 'ABP_CharacterPG_TP_C_BlueprintThreadSafeUpdateAnimation::DeltaTime' has a wrong offset!");

// Function ABP_CharacterPG_TP.ABP_CharacterPG_TP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_CharacterPG_TP_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_CharacterPG_TP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_CharacterPG_TP_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_CharacterPG_TP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_CharacterPG_TP_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_CharacterPG_TP_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_CharacterPG_TP_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_CharacterPG_TP.ABP_CharacterPG_TP_C.CacheGunModulesValues
// 0x0160 (0x0160 - 0x0000)
struct ABP_CharacterPG_TP_C_CacheGunModulesValues final
{
public:
	class AItem_Module_General*                   L_ModuleIt;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E43[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AItem_Module_Underbarrel_Grip*          K2Node_DynamicCast_AsItem_Module_Underbarrel_Grip; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E44[0xD];                                     // 0x0023(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0030(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRelativeLocation_ReturnValue;     // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E45[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue;          // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PG_PlayerState_Game_C*              K2Node_DynamicCast_AsBP_PG_Player_State_Game;      // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E46[0x6];                                     // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AItem_Module_General*                   CallFunc_Array_Get_Item;                           // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_CharacterPG_TP_C_CacheGunModulesValues) == 0x000010, "Wrong alignment on ABP_CharacterPG_TP_C_CacheGunModulesValues");
static_assert(sizeof(ABP_CharacterPG_TP_C_CacheGunModulesValues) == 0x000160, "Wrong size on ABP_CharacterPG_TP_C_CacheGunModulesValues");
static_assert(offsetof(ABP_CharacterPG_TP_C_CacheGunModulesValues, L_ModuleIt) == 0x000000, "Member 'ABP_CharacterPG_TP_C_CacheGunModulesValues::L_ModuleIt' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_CacheGunModulesValues, Temp_int_Array_Index_Variable) == 0x000008, "Member 'ABP_CharacterPG_TP_C_CacheGunModulesValues::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_CacheGunModulesValues, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'ABP_CharacterPG_TP_C_CacheGunModulesValues::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_CacheGunModulesValues, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'ABP_CharacterPG_TP_C_CacheGunModulesValues::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_CacheGunModulesValues, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'ABP_CharacterPG_TP_C_CacheGunModulesValues::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_CacheGunModulesValues, K2Node_DynamicCast_AsItem_Module_Underbarrel_Grip) == 0x000018, "Member 'ABP_CharacterPG_TP_C_CacheGunModulesValues::K2Node_DynamicCast_AsItem_Module_Underbarrel_Grip' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_CacheGunModulesValues, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ABP_CharacterPG_TP_C_CacheGunModulesValues::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_CacheGunModulesValues, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'ABP_CharacterPG_TP_C_CacheGunModulesValues::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_CacheGunModulesValues, CallFunc_DoesSocketExist_ReturnValue) == 0x000022, "Member 'ABP_CharacterPG_TP_C_CacheGunModulesValues::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_CacheGunModulesValues, CallFunc_GetSocketTransform_ReturnValue) == 0x000030, "Member 'ABP_CharacterPG_TP_C_CacheGunModulesValues::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_CacheGunModulesValues, CallFunc_BreakTransform_Location) == 0x000090, "Member 'ABP_CharacterPG_TP_C_CacheGunModulesValues::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_CacheGunModulesValues, CallFunc_BreakTransform_Rotation) == 0x0000A8, "Member 'ABP_CharacterPG_TP_C_CacheGunModulesValues::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_CacheGunModulesValues, CallFunc_BreakTransform_Scale) == 0x0000C0, "Member 'ABP_CharacterPG_TP_C_CacheGunModulesValues::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_CacheGunModulesValues, CallFunc_GetActorRelativeLocation_ReturnValue) == 0x0000D8, "Member 'ABP_CharacterPG_TP_C_CacheGunModulesValues::CallFunc_GetActorRelativeLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_CacheGunModulesValues, CallFunc_K2_GetComponentScale_ReturnValue) == 0x0000F0, "Member 'ABP_CharacterPG_TP_C_CacheGunModulesValues::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_CacheGunModulesValues, CallFunc_IsValid_ReturnValue_1) == 0x000108, "Member 'ABP_CharacterPG_TP_C_CacheGunModulesValues::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_CacheGunModulesValues, CallFunc_Divide_VectorVector_ReturnValue) == 0x000110, "Member 'ABP_CharacterPG_TP_C_CacheGunModulesValues::CallFunc_Divide_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_CacheGunModulesValues, CallFunc_Add_VectorVector_ReturnValue) == 0x000128, "Member 'ABP_CharacterPG_TP_C_CacheGunModulesValues::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_CacheGunModulesValues, K2Node_DynamicCast_AsBP_PG_Player_State_Game) == 0x000140, "Member 'ABP_CharacterPG_TP_C_CacheGunModulesValues::K2Node_DynamicCast_AsBP_PG_Player_State_Game' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_CacheGunModulesValues, K2Node_DynamicCast_bSuccess_1) == 0x000148, "Member 'ABP_CharacterPG_TP_C_CacheGunModulesValues::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_CacheGunModulesValues, CallFunc_IsValid_ReturnValue_2) == 0x000149, "Member 'ABP_CharacterPG_TP_C_CacheGunModulesValues::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_CacheGunModulesValues, CallFunc_Array_Get_Item) == 0x000150, "Member 'ABP_CharacterPG_TP_C_CacheGunModulesValues::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_CacheGunModulesValues, CallFunc_Array_Length_ReturnValue) == 0x000158, "Member 'ABP_CharacterPG_TP_C_CacheGunModulesValues::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_CacheGunModulesValues, CallFunc_Less_IntInt_ReturnValue) == 0x00015C, "Member 'ABP_CharacterPG_TP_C_CacheGunModulesValues::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ABP_CharacterPG_TP.ABP_CharacterPG_TP_C.CacheGunValues
// 0x0020 (0x0020 - 0x0000)
struct ABP_CharacterPG_TP_C_CacheGunValues final
{
public:
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E47[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_CharacterPG_TP_C_CacheGunValues) == 0x000008, "Wrong alignment on ABP_CharacterPG_TP_C_CacheGunValues");
static_assert(sizeof(ABP_CharacterPG_TP_C_CacheGunValues) == 0x000020, "Wrong size on ABP_CharacterPG_TP_C_CacheGunValues");
static_assert(offsetof(ABP_CharacterPG_TP_C_CacheGunValues, CallFunc_GetObjectClass_ReturnValue) == 0x000000, "Member 'ABP_CharacterPG_TP_C_CacheGunValues::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_CacheGunValues, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x000008, "Member 'ABP_CharacterPG_TP_C_CacheGunValues::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_CacheGunValues, CallFunc_IsValidClass_ReturnValue) == 0x000009, "Member 'ABP_CharacterPG_TP_C_CacheGunValues::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_CacheGunValues, CallFunc_GetObjectClass_ReturnValue_1) == 0x000010, "Member 'ABP_CharacterPG_TP_C_CacheGunValues::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_CacheGunValues, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'ABP_CharacterPG_TP_C_CacheGunValues::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ABP_CharacterPG_TP.ABP_CharacterPG_TP_C.ExecuteUbergraph_ABP_CharacterPG_TP
// 0x0550 (0x0550 - 0x0000)
struct ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E48[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_DegSin_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegCos_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E49[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E4A[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPredictedLODLevel_ReturnValue;         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E4B[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Temp_struct_Variable;                              // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegSin_ReturnValue_1;                     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegCos_ReturnValue_1;                     // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue_1;  // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AItem_Gun_General* OldCurrentGun)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00F8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E4C[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue; // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_5;       // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_2;     // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E4D[0x2];                                     // 0x012E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0130(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0140(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_1; // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_3;     // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E4E[0x3];                                     // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_2; // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_4;     // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E4F[0x3];                                     // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetPredictedLODLevel_ReturnValue_1;       // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E50[0x3];                                     // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetGunRecoilAlpha_Backward_ReturnValue;   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E51[0x4];                                     // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_5;     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_6;       // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E52[0x1];                                     // 0x01C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_6;     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E53[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_1;                            // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_2;                            // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGunSlot                                      Temp_byte_Variable;                                // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_7;     // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E54[0x6];                                     // 0x028A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_7;       // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E55[0x2];                                     // 0x02DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_8;       // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_8;     // 0x02E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E56[0x1];                                     // 0x02E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E57[0x3];                                     // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPredictedLODLevel_ReturnValue_2;       // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x02F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_9;       // 0x02F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E58[0x4];                                     // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetBaseAimRotation_ReturnValue;           // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E59[0x4];                                     // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0368(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0372(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E5A[0x5];                                     // 0x0373(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_2;        // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E5B[0x7];                                     // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateDirection_ReturnValue;           // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E5C[0x4];                                     // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue_1;                // 0x03B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x03D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E5D[0x6];                                     // 0x03DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Pitch_Variable;                          // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_3;        // 0x03E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue_1;     // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_10;      // 0x0424(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E5E[0x3];                                     // 0x0425(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E5F[0x7];                                     // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_ReturnValue_2;                  // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0440(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PG_Game_Character_C*                K2Node_DynamicCast_AsBP_PG_Game_Character;         // 0x0448(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0451(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E60[0x6];                                     // 0x0452(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_9;     // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E61[0x7];                                     // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_ReturnValue_3;                  // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AItem_Gun_General*                      K2Node_CustomEvent_OldCurrentGun;                  // 0x0478(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0481(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x0482(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E62[0x1];                                     // 0x0483(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRateScale_ReturnValue;                 // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E63[0x4];                                     // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PG_PlayerState_Game_C*              K2Node_DynamicCast_AsBP_PG_Player_State_Game;      // 0x0490(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E64[0x7];                                     // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E65[0x3];                                     // 0x04A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_StructMemberSet___FloatProperty_5_ImplicitCast; // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_4_ImplicitCast; // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Yaw_ImplicitCast;           // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_7_ImplicitCast; // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_6_ImplicitCast; // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_DeltaTime_ImplicitCast;         // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1;  // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_2;  // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast; // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_DeltaTime_ImplicitCast_1;       // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_DeltaTime_ImplicitCast_2;       // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_DeltaTime_ImplicitCast_3;       // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Target_ImplicitCast;            // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast;           // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Value_ImplicitCast;                // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_LeanBodyAlphaInterp_ImplicitCast; // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E66[0x4];                                     // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_MoveDirection_ImplicitCast;     // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Value_ImplicitCast_1;              // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast; // 0x0548(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP) == 0x000008, "Wrong alignment on ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP");
static_assert(sizeof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP) == 0x000550, "Wrong size on ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, EntryPoint) == 0x000000, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000004, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_DegSin_ReturnValue) == 0x000008, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_DegCos_ReturnValue) == 0x000010, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_MakeVector2D_ReturnValue) == 0x000018, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000030, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_BreakVector2D_X) == 0x000040, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_BreakVector2D_Y) == 0x000048, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Not_PreBool_ReturnValue) == 0x000050, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000051, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_BooleanAND_ReturnValue) == 0x000052, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000053, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000054, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Not_PreBool_ReturnValue_1) == 0x000055, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000056, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Not_PreBool_ReturnValue_2) == 0x000057, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_BooleanAND_ReturnValue_1) == 0x000058, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000059, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_BooleanAND_ReturnValue_2) == 0x00005A, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Not_PreBool_ReturnValue_3) == 0x00005B, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_BooleanAND_ReturnValue_3) == 0x00005C, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x00005D, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_BooleanAND_ReturnValue_4) == 0x00005E, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Not_PreBool_ReturnValue_4) == 0x00005F, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_BooleanAND_ReturnValue_5) == 0x000060, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_GetPredictedLODLevel_ReturnValue) == 0x000064, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_GetPredictedLODLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000068, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_MakeRotator_ReturnValue) == 0x000070, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, Temp_struct_Variable) == 0x000088, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_DegSin_ReturnValue_1) == 0x0000A8, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_DegSin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_DegCos_ReturnValue_1) == 0x0000B0, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_DegCos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000B8, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, K2Node_CreateDelegate_OutputDelegate) == 0x0000C8, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Multiply_Vector2DVector2D_ReturnValue_1) == 0x0000D8, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Multiply_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_BreakVector2D_X_1) == 0x0000E8, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_BreakVector2D_Y_1) == 0x0000F0, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000F8, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_IsValid_ReturnValue_1) == 0x000108, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000110, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue) == 0x000128, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Greater_DoubleDouble_ReturnValue_5) == 0x00012C, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Greater_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_LessEqual_DoubleDouble_ReturnValue_2) == 0x00012D, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_LessEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, K2Node_CreateDelegate_OutputDelegate_2) == 0x000130, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, K2Node_CreateDelegate_OutputDelegate_3) == 0x000140, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000150, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_1) == 0x000158, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_LessEqual_DoubleDouble_ReturnValue_3) == 0x00015C, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_LessEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_2) == 0x000160, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_GetInstanceAssetPlayerTimeFromEndFraction_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_LessEqual_DoubleDouble_ReturnValue_4) == 0x000164, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_LessEqual_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_ComposeRotators_ReturnValue) == 0x000168, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_GetPredictedLODLevel_ReturnValue_1) == 0x000180, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_GetPredictedLODLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000184, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_MakeRotator_ReturnValue_1) == 0x000188, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_GetGunRecoilAlpha_Backward_ReturnValue) == 0x0001A0, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_GetGunRecoilAlpha_Backward_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0001A8, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_LessEqual_DoubleDouble_ReturnValue_5) == 0x0001C0, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_LessEqual_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Greater_DoubleDouble_ReturnValue_6) == 0x0001C1, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Greater_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_BooleanAND_ReturnValue_6) == 0x0001C2, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_GetCurveValue_ReturnValue) == 0x0001C4, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_LessEqual_DoubleDouble_ReturnValue_6) == 0x0001C8, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_LessEqual_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_BreakTransform_Location) == 0x0001D0, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_BreakTransform_Rotation) == 0x0001E8, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_BreakTransform_Scale) == 0x000200, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Abs_ReturnValue) == 0x000218, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, Temp_struct_Variable_1) == 0x000220, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000238, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_MakeVector_ReturnValue) == 0x000240, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, Temp_struct_Variable_2) == 0x000258, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Add_VectorVector_ReturnValue) == 0x000270, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, Temp_byte_Variable) == 0x000288, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_LessEqual_DoubleDouble_ReturnValue_7) == 0x000289, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_LessEqual_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, K2Node_Select_Default) == 0x000290, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0002A8, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0002C0, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Greater_DoubleDouble_ReturnValue_7) == 0x0002D8, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Greater_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Not_PreBool_ReturnValue_5) == 0x0002D9, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_GetCurveValue_ReturnValue_1) == 0x0002DC, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_BooleanAND_ReturnValue_7) == 0x0002E0, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Greater_DoubleDouble_ReturnValue_8) == 0x0002E1, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Greater_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_LessEqual_DoubleDouble_ReturnValue_8) == 0x0002E2, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_LessEqual_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, K2Node_Event_DeltaTimeX) == 0x0002E4, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_IsValid_ReturnValue_2) == 0x0002E8, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_GetPredictedLODLevel_ReturnValue_2) == 0x0002EC, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_GetPredictedLODLevel_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_IsDedicatedServer_ReturnValue) == 0x0002F0, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0002F1, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Not_PreBool_ReturnValue_6) == 0x0002F2, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Greater_DoubleDouble_ReturnValue_9) == 0x0002F3, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Greater_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x0002F8, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_GetBaseAimRotation_ReturnValue) == 0x000310, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_GetBaseAimRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000328, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_BreakRotator_Roll) == 0x000340, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_BreakRotator_Pitch) == 0x000344, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_BreakRotator_Yaw) == 0x000348, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_FInterpTo_ReturnValue) == 0x000350, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_FClamp_ReturnValue) == 0x000358, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_FInterpTo_ReturnValue_1) == 0x000360, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_GetMovementComponent_ReturnValue) == 0x000368, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_IsFalling_ReturnValue) == 0x000370, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Not_PreBool_ReturnValue_7) == 0x000371, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000372, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_K2_GetActorRotation_ReturnValue_2) == 0x000378, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_K2_GetActorRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_BooleanAND_ReturnValue_8) == 0x000390, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_GetVelocity_ReturnValue) == 0x000398, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_CalculateDirection_ReturnValue) == 0x0003B0, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_CalculateDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_GetVelocity_ReturnValue_1) == 0x0003B8, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_GetVelocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_VSize_ReturnValue) == 0x0003D0, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Not_PreBool_ReturnValue_8) == 0x0003D8, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_BooleanAND_ReturnValue_9) == 0x0003D9, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, Temp_real_Pitch_Variable) == 0x0003E0, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::Temp_real_Pitch_Variable' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_K2_GetActorRotation_ReturnValue_3) == 0x0003E8, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_K2_GetActorRotation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_NormalizedDeltaRotator_ReturnValue_1) == 0x000400, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_NormalizedDeltaRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_BreakRotator_Roll_1) == 0x000418, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_BreakRotator_Pitch_1) == 0x00041C, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_BreakRotator_Yaw_1) == 0x000420, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Greater_DoubleDouble_ReturnValue_10) == 0x000424, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Greater_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_FClamp_ReturnValue_1) == 0x000428, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_BooleanAND_ReturnValue_10) == 0x000430, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_FInterpTo_ReturnValue_2) == 0x000438, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_FInterpTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000440, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, K2Node_DynamicCast_AsBP_PG_Game_Character) == 0x000448, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::K2Node_DynamicCast_AsBP_PG_Game_Character' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, K2Node_DynamicCast_bSuccess) == 0x000450, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_IsValid_ReturnValue_3) == 0x000451, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000458, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_FClamp_ReturnValue_2) == 0x000460, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_LessEqual_DoubleDouble_ReturnValue_9) == 0x000468, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_LessEqual_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_FInterpTo_ReturnValue_3) == 0x000470, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_FInterpTo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, K2Node_CustomEvent_OldCurrentGun) == 0x000478, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::K2Node_CustomEvent_OldCurrentGun' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Not_PreBool_ReturnValue_9) == 0x000480, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_IsValid_ReturnValue_4) == 0x000481, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_BooleanAND_ReturnValue_11) == 0x000482, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_GetRateScale_ReturnValue) == 0x000484, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_GetRateScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_GetPlayLength_ReturnValue) == 0x000488, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, K2Node_DynamicCast_AsBP_PG_Player_State_Game) == 0x000490, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::K2Node_DynamicCast_AsBP_PG_Player_State_Game' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, K2Node_DynamicCast_bSuccess_1) == 0x000498, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0004A0, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_IsValid_ReturnValue_5) == 0x0004A8, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, K2Node_StructMemberSet___FloatProperty_5_ImplicitCast) == 0x0004AC, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::K2Node_StructMemberSet___FloatProperty_5_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, K2Node_StructMemberSet___FloatProperty_4_ImplicitCast) == 0x0004B0, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::K2Node_StructMemberSet___FloatProperty_4_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x0004B4, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0004B8, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, K2Node_StructMemberSet_Yaw_ImplicitCast) == 0x0004BC, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::K2Node_StructMemberSet_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, K2Node_StructMemberSet___FloatProperty_7_ImplicitCast) == 0x0004C0, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::K2Node_StructMemberSet___FloatProperty_7_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, K2Node_StructMemberSet___FloatProperty_6_ImplicitCast) == 0x0004C4, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::K2Node_StructMemberSet___FloatProperty_6_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x0004C8, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_FInterpTo_DeltaTime_ImplicitCast) == 0x0004D0, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_FInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1) == 0x0004D8, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_2) == 0x0004E0, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast) == 0x0004E8, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_FInterpTo_DeltaTime_ImplicitCast_1) == 0x0004F0, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_FInterpTo_DeltaTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_FInterpTo_DeltaTime_ImplicitCast_2) == 0x0004F8, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_FInterpTo_DeltaTime_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_FInterpTo_DeltaTime_ImplicitCast_3) == 0x000500, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_FInterpTo_DeltaTime_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_FInterpTo_Target_ImplicitCast) == 0x000508, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_FInterpTo_Target_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_FInterpTo_Current_ImplicitCast) == 0x000510, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_FInterpTo_Current_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_FClamp_Value_ImplicitCast) == 0x000518, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_FClamp_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, K2Node_VariableSet_LeanBodyAlphaInterp_ImplicitCast) == 0x000520, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::K2Node_VariableSet_LeanBodyAlphaInterp_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, K2Node_VariableSet_MoveDirection_ImplicitCast) == 0x000528, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::K2Node_VariableSet_MoveDirection_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_FClamp_Value_ImplicitCast_1) == 0x000530, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_FClamp_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000538, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000540, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP, CallFunc_RetriggerableDelay_Duration_ImplicitCast) == 0x000548, "Member 'ABP_CharacterPG_TP_C_ExecuteUbergraph_ABP_CharacterPG_TP::CallFunc_RetriggerableDelay_Duration_ImplicitCast' has a wrong offset!");

// Function ABP_CharacterPG_TP.ABP_CharacterPG_TP_C.FootStep
// 0x02E8 (0x02E8 - 0x0000)
struct ABP_CharacterPG_TP_C_FootStep final
{
public:
	bool                                          RightLeg;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E67[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E68[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_2;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E69[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable;                              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_1;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_2;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_3;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_4;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_5;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_6;                            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_7;                            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_8;                            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_9;                            // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_10;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_11;                           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_12;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_13;                           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_14;                           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_15;                           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_16;                           // 0x00B0(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_GetIsSprinting_ReturnValue;               // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E6A[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E6B[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E6C[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E6D[0x2];                                     // 0x0166(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x01E0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue;               // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E6E[0x6];                                     // 0x02CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default_2;                           // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SpawnSoundAttached_VolumeMultiplier_ImplicitCast; // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_CharacterPG_TP_C_FootStep) == 0x000008, "Wrong alignment on ABP_CharacterPG_TP_C_FootStep");
static_assert(sizeof(ABP_CharacterPG_TP_C_FootStep) == 0x0002E8, "Wrong size on ABP_CharacterPG_TP_C_FootStep");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, RightLeg) == 0x000000, "Member 'ABP_CharacterPG_TP_C_FootStep::RightLeg' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, Temp_real_Variable) == 0x000008, "Member 'ABP_CharacterPG_TP_C_FootStep::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, Temp_real_Variable_1) == 0x000010, "Member 'ABP_CharacterPG_TP_C_FootStep::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, Temp_bool_Variable) == 0x000018, "Member 'ABP_CharacterPG_TP_C_FootStep::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, Temp_real_Variable_2) == 0x000020, "Member 'ABP_CharacterPG_TP_C_FootStep::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, Temp_byte_Variable) == 0x000028, "Member 'ABP_CharacterPG_TP_C_FootStep::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, Temp_object_Variable) == 0x000030, "Member 'ABP_CharacterPG_TP_C_FootStep::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, Temp_object_Variable_1) == 0x000038, "Member 'ABP_CharacterPG_TP_C_FootStep::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, Temp_object_Variable_2) == 0x000040, "Member 'ABP_CharacterPG_TP_C_FootStep::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, Temp_object_Variable_3) == 0x000048, "Member 'ABP_CharacterPG_TP_C_FootStep::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, Temp_object_Variable_4) == 0x000050, "Member 'ABP_CharacterPG_TP_C_FootStep::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, Temp_object_Variable_5) == 0x000058, "Member 'ABP_CharacterPG_TP_C_FootStep::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, Temp_object_Variable_6) == 0x000060, "Member 'ABP_CharacterPG_TP_C_FootStep::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, Temp_object_Variable_7) == 0x000068, "Member 'ABP_CharacterPG_TP_C_FootStep::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, Temp_object_Variable_8) == 0x000070, "Member 'ABP_CharacterPG_TP_C_FootStep::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, Temp_object_Variable_9) == 0x000078, "Member 'ABP_CharacterPG_TP_C_FootStep::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, Temp_object_Variable_10) == 0x000080, "Member 'ABP_CharacterPG_TP_C_FootStep::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, Temp_object_Variable_11) == 0x000088, "Member 'ABP_CharacterPG_TP_C_FootStep::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, Temp_object_Variable_12) == 0x000090, "Member 'ABP_CharacterPG_TP_C_FootStep::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, Temp_object_Variable_13) == 0x000098, "Member 'ABP_CharacterPG_TP_C_FootStep::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, Temp_object_Variable_14) == 0x0000A0, "Member 'ABP_CharacterPG_TP_C_FootStep::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, Temp_object_Variable_15) == 0x0000A8, "Member 'ABP_CharacterPG_TP_C_FootStep::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, Temp_object_Variable_16) == 0x0000B0, "Member 'ABP_CharacterPG_TP_C_FootStep::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, CallFunc_GetIsSprinting_ReturnValue) == 0x0000C0, "Member 'ABP_CharacterPG_TP_C_FootStep::CallFunc_GetIsSprinting_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, CallFunc_GetPlayerController_ReturnValue) == 0x0000C8, "Member 'ABP_CharacterPG_TP_C_FootStep::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, CallFunc_K2_GetPawn_ReturnValue) == 0x0000D0, "Member 'ABP_CharacterPG_TP_C_FootStep::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'ABP_CharacterPG_TP_C_FootStep::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, Temp_bool_Variable_1) == 0x0000D9, "Member 'ABP_CharacterPG_TP_C_FootStep::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, CallFunc_IsValid_ReturnValue_1) == 0x0000DA, "Member 'ABP_CharacterPG_TP_C_FootStep::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, CallFunc_BooleanAND_ReturnValue) == 0x0000DB, "Member 'ABP_CharacterPG_TP_C_FootStep::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, K2Node_Select_Default) == 0x0000E0, "Member 'ABP_CharacterPG_TP_C_FootStep::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, K2Node_Select_Default_1) == 0x0000E8, "Member 'ABP_CharacterPG_TP_C_FootStep::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, CallFunc_GetPlayerController_ReturnValue_1) == 0x0000F0, "Member 'ABP_CharacterPG_TP_C_FootStep::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000F8, "Member 'ABP_CharacterPG_TP_C_FootStep::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000110, "Member 'ABP_CharacterPG_TP_C_FootStep::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000118, "Member 'ABP_CharacterPG_TP_C_FootStep::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000130, "Member 'ABP_CharacterPG_TP_C_FootStep::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000138, "Member 'ABP_CharacterPG_TP_C_FootStep::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, CallFunc_VSize_ReturnValue) == 0x000150, "Member 'ABP_CharacterPG_TP_C_FootStep::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, CallFunc_GetMovementComponent_ReturnValue) == 0x000158, "Member 'ABP_CharacterPG_TP_C_FootStep::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000160, "Member 'ABP_CharacterPG_TP_C_FootStep::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, CallFunc_IsFalling_ReturnValue) == 0x000161, "Member 'ABP_CharacterPG_TP_C_FootStep::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, CallFunc_Not_PreBool_ReturnValue) == 0x000162, "Member 'ABP_CharacterPG_TP_C_FootStep::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, CallFunc_IsDedicatedServer_ReturnValue) == 0x000163, "Member 'ABP_CharacterPG_TP_C_FootStep::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, CallFunc_BooleanAND_ReturnValue_1) == 0x000164, "Member 'ABP_CharacterPG_TP_C_FootStep::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, CallFunc_Not_PreBool_ReturnValue_1) == 0x000165, "Member 'ABP_CharacterPG_TP_C_FootStep::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000168, "Member 'ABP_CharacterPG_TP_C_FootStep::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, CallFunc_GetActorUpVector_ReturnValue) == 0x000180, "Member 'ABP_CharacterPG_TP_C_FootStep::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000198, "Member 'ABP_CharacterPG_TP_C_FootStep::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0001B0, "Member 'ABP_CharacterPG_TP_C_FootStep::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, CallFunc_Add_VectorVector_ReturnValue) == 0x0001C8, "Member 'ABP_CharacterPG_TP_C_FootStep::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, CallFunc_LineTraceSingle_OutHit) == 0x0001E0, "Member 'ABP_CharacterPG_TP_C_FootStep::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, CallFunc_LineTraceSingle_ReturnValue) == 0x0002C8, "Member 'ABP_CharacterPG_TP_C_FootStep::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, CallFunc_GetSurfaceType_ReturnValue) == 0x0002C9, "Member 'ABP_CharacterPG_TP_C_FootStep::CallFunc_GetSurfaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, K2Node_Select_Default_2) == 0x0002D0, "Member 'ABP_CharacterPG_TP_C_FootStep::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0002D8, "Member 'ABP_CharacterPG_TP_C_FootStep::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep, CallFunc_SpawnSoundAttached_VolumeMultiplier_ImplicitCast) == 0x0002E0, "Member 'ABP_CharacterPG_TP_C_FootStep::CallFunc_SpawnSoundAttached_VolumeMultiplier_ImplicitCast' has a wrong offset!");

// Function ABP_CharacterPG_TP.ABP_CharacterPG_TP_C.FootStep_Cloth
// 0x00E0 (0x00E0 - 0x0000)
struct ABP_CharacterPG_TP_C_FootStep_Cloth final
{
public:
	double                                        Temp_real_Variable;                                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E6F[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_2;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSprinting_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E70[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E71[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E72[0x2];                                     // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E73[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E74[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E75[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SpawnSoundAttached_VolumeMultiplier_ImplicitCast; // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_CharacterPG_TP_C_FootStep_Cloth) == 0x000008, "Wrong alignment on ABP_CharacterPG_TP_C_FootStep_Cloth");
static_assert(sizeof(ABP_CharacterPG_TP_C_FootStep_Cloth) == 0x0000E0, "Wrong size on ABP_CharacterPG_TP_C_FootStep_Cloth");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep_Cloth, Temp_real_Variable) == 0x000000, "Member 'ABP_CharacterPG_TP_C_FootStep_Cloth::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep_Cloth, Temp_real_Variable_1) == 0x000008, "Member 'ABP_CharacterPG_TP_C_FootStep_Cloth::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep_Cloth, Temp_bool_Variable) == 0x000010, "Member 'ABP_CharacterPG_TP_C_FootStep_Cloth::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep_Cloth, Temp_real_Variable_2) == 0x000018, "Member 'ABP_CharacterPG_TP_C_FootStep_Cloth::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep_Cloth, CallFunc_GetIsSprinting_ReturnValue) == 0x000020, "Member 'ABP_CharacterPG_TP_C_FootStep_Cloth::CallFunc_GetIsSprinting_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep_Cloth, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000021, "Member 'ABP_CharacterPG_TP_C_FootStep_Cloth::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep_Cloth, CallFunc_GetMovementComponent_ReturnValue) == 0x000028, "Member 'ABP_CharacterPG_TP_C_FootStep_Cloth::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep_Cloth, CallFunc_GetPlayerController_ReturnValue) == 0x000030, "Member 'ABP_CharacterPG_TP_C_FootStep_Cloth::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep_Cloth, CallFunc_IsFalling_ReturnValue) == 0x000038, "Member 'ABP_CharacterPG_TP_C_FootStep_Cloth::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep_Cloth, CallFunc_K2_GetPawn_ReturnValue) == 0x000040, "Member 'ABP_CharacterPG_TP_C_FootStep_Cloth::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep_Cloth, CallFunc_Not_PreBool_ReturnValue) == 0x000048, "Member 'ABP_CharacterPG_TP_C_FootStep_Cloth::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep_Cloth, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'ABP_CharacterPG_TP_C_FootStep_Cloth::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep_Cloth, CallFunc_BooleanAND_ReturnValue) == 0x00004A, "Member 'ABP_CharacterPG_TP_C_FootStep_Cloth::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep_Cloth, CallFunc_IsValid_ReturnValue_1) == 0x00004B, "Member 'ABP_CharacterPG_TP_C_FootStep_Cloth::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep_Cloth, Temp_bool_Variable_1) == 0x00004C, "Member 'ABP_CharacterPG_TP_C_FootStep_Cloth::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep_Cloth, CallFunc_BooleanAND_ReturnValue_1) == 0x00004D, "Member 'ABP_CharacterPG_TP_C_FootStep_Cloth::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep_Cloth, K2Node_Select_Default) == 0x000050, "Member 'ABP_CharacterPG_TP_C_FootStep_Cloth::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep_Cloth, K2Node_Select_Default_1) == 0x000058, "Member 'ABP_CharacterPG_TP_C_FootStep_Cloth::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep_Cloth, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'ABP_CharacterPG_TP_C_FootStep_Cloth::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep_Cloth, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000078, "Member 'ABP_CharacterPG_TP_C_FootStep_Cloth::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep_Cloth, CallFunc_GetPlayerController_ReturnValue_1) == 0x000080, "Member 'ABP_CharacterPG_TP_C_FootStep_Cloth::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep_Cloth, CallFunc_IsDedicatedServer_ReturnValue) == 0x000088, "Member 'ABP_CharacterPG_TP_C_FootStep_Cloth::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep_Cloth, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000090, "Member 'ABP_CharacterPG_TP_C_FootStep_Cloth::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep_Cloth, CallFunc_Not_PreBool_ReturnValue_1) == 0x000098, "Member 'ABP_CharacterPG_TP_C_FootStep_Cloth::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep_Cloth, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000A0, "Member 'ABP_CharacterPG_TP_C_FootStep_Cloth::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep_Cloth, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000B8, "Member 'ABP_CharacterPG_TP_C_FootStep_Cloth::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep_Cloth, CallFunc_VSize_ReturnValue) == 0x0000D0, "Member 'ABP_CharacterPG_TP_C_FootStep_Cloth::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep_Cloth, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'ABP_CharacterPG_TP_C_FootStep_Cloth::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_FootStep_Cloth, CallFunc_SpawnSoundAttached_VolumeMultiplier_ImplicitCast) == 0x0000DC, "Member 'ABP_CharacterPG_TP_C_FootStep_Cloth::CallFunc_SpawnSoundAttached_VolumeMultiplier_ImplicitCast' has a wrong offset!");

// Function ABP_CharacterPG_TP.ABP_CharacterPG_TP_C.GunLocomotion
// 0x0020 (0x0020 - 0x0000)
struct ABP_CharacterPG_TP_C_GunLocomotion final
{
public:
	struct FPoseLink                              BaseFinal;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param_GunLocomotion;                               // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_CharacterPG_TP_C_GunLocomotion) == 0x000008, "Wrong alignment on ABP_CharacterPG_TP_C_GunLocomotion");
static_assert(sizeof(ABP_CharacterPG_TP_C_GunLocomotion) == 0x000020, "Wrong size on ABP_CharacterPG_TP_C_GunLocomotion");
static_assert(offsetof(ABP_CharacterPG_TP_C_GunLocomotion, BaseFinal) == 0x000000, "Member 'ABP_CharacterPG_TP_C_GunLocomotion::BaseFinal' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_GunLocomotion, Param_GunLocomotion) == 0x000010, "Member 'ABP_CharacterPG_TP_C_GunLocomotion::Param_GunLocomotion' has a wrong offset!");

// Function ABP_CharacterPG_TP.ABP_CharacterPG_TP_C.JumpEvent
// 0x0348 (0x0348 - 0x0000)
struct ABP_CharacterPG_TP_C_JumpEvent final
{
public:
	bool                                          IsStart;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E76[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_4;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_5;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_6;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_7;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_8;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_9;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_10;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_11;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_12;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_13;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_14;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_15;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E77[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_16;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_17;                           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_18;                           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_19;                           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_20;                           // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_21;                           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_22;                           // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_23;                           // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_24;                           // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_25;                           // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_26;                           // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_27;                           // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_28;                           // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_29;                           // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_30;                           // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_31;                           // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_32;                           // 0x0110(0x0010)(ConstParm, ReferenceParm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable_1;                              // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E78[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E79[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E7A[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E7B[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E7C[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E7D[0x7];                                     // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0238(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue;               // 0x0322(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E7E[0x5];                                     // 0x0323(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default;                             // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default_1;                           // 0x0330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default_2;                           // 0x0338(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0340(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_CharacterPG_TP_C_JumpEvent) == 0x000008, "Wrong alignment on ABP_CharacterPG_TP_C_JumpEvent");
static_assert(sizeof(ABP_CharacterPG_TP_C_JumpEvent) == 0x000348, "Wrong size on ABP_CharacterPG_TP_C_JumpEvent");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, IsStart) == 0x000000, "Member 'ABP_CharacterPG_TP_C_JumpEvent::IsStart' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable) == 0x000008, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_1) == 0x000010, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_2) == 0x000018, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_3) == 0x000020, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_4) == 0x000028, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_5) == 0x000030, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_6) == 0x000038, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_7) == 0x000040, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_8) == 0x000048, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_9) == 0x000050, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_10) == 0x000058, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_11) == 0x000060, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_12) == 0x000068, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_13) == 0x000070, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_14) == 0x000078, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_15) == 0x000080, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_bool_Variable) == 0x000088, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_byte_Variable) == 0x000089, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_16) == 0x000090, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_17) == 0x000098, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_18) == 0x0000A0, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_19) == 0x0000A8, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_20) == 0x0000B0, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_21) == 0x0000B8, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_22) == 0x0000C0, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_23) == 0x0000C8, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_24) == 0x0000D0, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_25) == 0x0000D8, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_26) == 0x0000E0, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_27) == 0x0000E8, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_28) == 0x0000F0, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_29) == 0x0000F8, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_30) == 0x000100, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_30' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_31) == 0x000108, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_31' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_object_Variable_32) == 0x000110, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_object_Variable_32' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, CallFunc_GetPlayerController_ReturnValue) == 0x000120, "Member 'ABP_CharacterPG_TP_C_JumpEvent::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, Temp_byte_Variable_1) == 0x000128, "Member 'ABP_CharacterPG_TP_C_JumpEvent::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, CallFunc_K2_GetPawn_ReturnValue) == 0x000130, "Member 'ABP_CharacterPG_TP_C_JumpEvent::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, CallFunc_IsValid_ReturnValue) == 0x000138, "Member 'ABP_CharacterPG_TP_C_JumpEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000140, "Member 'ABP_CharacterPG_TP_C_JumpEvent::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, CallFunc_GetPlayerController_ReturnValue_1) == 0x000158, "Member 'ABP_CharacterPG_TP_C_JumpEvent::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, CallFunc_IsDedicatedServer_ReturnValue) == 0x000160, "Member 'ABP_CharacterPG_TP_C_JumpEvent::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000168, "Member 'ABP_CharacterPG_TP_C_JumpEvent::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, CallFunc_Not_PreBool_ReturnValue) == 0x000170, "Member 'ABP_CharacterPG_TP_C_JumpEvent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000178, "Member 'ABP_CharacterPG_TP_C_JumpEvent::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000190, "Member 'ABP_CharacterPG_TP_C_JumpEvent::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, CallFunc_VSize_ReturnValue) == 0x0001A8, "Member 'ABP_CharacterPG_TP_C_JumpEvent::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, CallFunc_GetActorUpVector_ReturnValue) == 0x0001B0, "Member 'ABP_CharacterPG_TP_C_JumpEvent::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0001C8, "Member 'ABP_CharacterPG_TP_C_JumpEvent::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001D0, "Member 'ABP_CharacterPG_TP_C_JumpEvent::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0001E8, "Member 'ABP_CharacterPG_TP_C_JumpEvent::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000200, "Member 'ABP_CharacterPG_TP_C_JumpEvent::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, CallFunc_Add_VectorVector_ReturnValue) == 0x000218, "Member 'ABP_CharacterPG_TP_C_JumpEvent::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, CallFunc_IsValid_ReturnValue_1) == 0x000230, "Member 'ABP_CharacterPG_TP_C_JumpEvent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, CallFunc_LineTraceSingle_OutHit) == 0x000238, "Member 'ABP_CharacterPG_TP_C_JumpEvent::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, CallFunc_LineTraceSingle_ReturnValue) == 0x000320, "Member 'ABP_CharacterPG_TP_C_JumpEvent::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, CallFunc_BooleanAND_ReturnValue) == 0x000321, "Member 'ABP_CharacterPG_TP_C_JumpEvent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, CallFunc_GetSurfaceType_ReturnValue) == 0x000322, "Member 'ABP_CharacterPG_TP_C_JumpEvent::CallFunc_GetSurfaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, K2Node_Select_Default) == 0x000328, "Member 'ABP_CharacterPG_TP_C_JumpEvent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, K2Node_Select_Default_1) == 0x000330, "Member 'ABP_CharacterPG_TP_C_JumpEvent::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, K2Node_Select_Default_2) == 0x000338, "Member 'ABP_CharacterPG_TP_C_JumpEvent::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_JumpEvent, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000340, "Member 'ABP_CharacterPG_TP_C_JumpEvent::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");

// Function ABP_CharacterPG_TP.ABP_CharacterPG_TP_C.OnSetCurrentGun_Event
// 0x0008 (0x0008 - 0x0000)
struct ABP_CharacterPG_TP_C_OnSetCurrentGun_Event final
{
public:
	class AItem_Gun_General*                      OldCurrentGun;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_CharacterPG_TP_C_OnSetCurrentGun_Event) == 0x000008, "Wrong alignment on ABP_CharacterPG_TP_C_OnSetCurrentGun_Event");
static_assert(sizeof(ABP_CharacterPG_TP_C_OnSetCurrentGun_Event) == 0x000008, "Wrong size on ABP_CharacterPG_TP_C_OnSetCurrentGun_Event");
static_assert(offsetof(ABP_CharacterPG_TP_C_OnSetCurrentGun_Event, OldCurrentGun) == 0x000000, "Member 'ABP_CharacterPG_TP_C_OnSetCurrentGun_Event::OldCurrentGun' has a wrong offset!");

// Function ABP_CharacterPG_TP.ABP_CharacterPG_TP_C.PoseBlending
// 0x0030 (0x0030 - 0x0000)
struct ABP_CharacterPG_TP_C_PoseBlending final
{
public:
	struct FPoseLink                              BaseLocomotion;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              BasePose;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param_PoseBlending;                                // 0x0020(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_CharacterPG_TP_C_PoseBlending) == 0x000008, "Wrong alignment on ABP_CharacterPG_TP_C_PoseBlending");
static_assert(sizeof(ABP_CharacterPG_TP_C_PoseBlending) == 0x000030, "Wrong size on ABP_CharacterPG_TP_C_PoseBlending");
static_assert(offsetof(ABP_CharacterPG_TP_C_PoseBlending, BaseLocomotion) == 0x000000, "Member 'ABP_CharacterPG_TP_C_PoseBlending::BaseLocomotion' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_PoseBlending, BasePose) == 0x000010, "Member 'ABP_CharacterPG_TP_C_PoseBlending::BasePose' has a wrong offset!");
static_assert(offsetof(ABP_CharacterPG_TP_C_PoseBlending, Param_PoseBlending) == 0x000020, "Member 'ABP_CharacterPG_TP_C_PoseBlending::Param_PoseBlending' has a wrong offset!");

}

