#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Task_Multiplayer_RequestServer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Actions_structs.hpp"
#include "Actions_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Task_Multiplayer_RequestServer.Task_Multiplayer_RequestServer_C
// 0x0060 (0x0108 - 0x00A8)
class UTask_Multiplayer_RequestServer_C final : public UAction
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FString                                 Name_Task_Multiplayer_RequestServer_C;             // 0x00B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FString                                 Map;                                               // 0x00C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FString                                 Password;                                          // 0x00D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         MaxPlayers;                                        // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_34B8[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PG_PlayerController_Menu_C*         PlayerController;                                  // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnFinished;                                        // 0x00F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UPlayFabJsonObject*                     CreatedServer;                                     // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void CheckForErrors(TArray<class UPlayFabJsonObject*>& Array, bool* HasError);
	void ConstructRequest(class UPlayFabJsonObject** Value_);
	void ExecuteUbergraph_Task_Multiplayer_RequestServer(int32 EntryPoint);
	void OnConnectionFinished_Event(bool IsSuccessful);
	void OnFinished__DelegateSignature(bool IsSuccessful);
	void OnPlayFabResponse_1640A79F41DF44E967384B9B9BAD3EE6(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void ReceiveActivate();
	void ReceiveFinished(const EActionState Reason);
	void RequestServer_Failure(const struct FPlayFabError& Error, class UObject* CustomData);
	void RequestServer_Success(const struct FClientExecuteCloudScriptResult& Result, class UObject* CustomData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Task_Multiplayer_RequestServer_C">();
	}
	static class UTask_Multiplayer_RequestServer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTask_Multiplayer_RequestServer_C>();
	}
};
static_assert(alignof(UTask_Multiplayer_RequestServer_C) == 0x000008, "Wrong alignment on UTask_Multiplayer_RequestServer_C");
static_assert(sizeof(UTask_Multiplayer_RequestServer_C) == 0x000108, "Wrong size on UTask_Multiplayer_RequestServer_C");
static_assert(offsetof(UTask_Multiplayer_RequestServer_C, UberGraphFrame) == 0x0000A8, "Member 'UTask_Multiplayer_RequestServer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTask_Multiplayer_RequestServer_C, Name_Task_Multiplayer_RequestServer_C) == 0x0000B0, "Member 'UTask_Multiplayer_RequestServer_C::Name_Task_Multiplayer_RequestServer_C' has a wrong offset!");
static_assert(offsetof(UTask_Multiplayer_RequestServer_C, Map) == 0x0000C0, "Member 'UTask_Multiplayer_RequestServer_C::Map' has a wrong offset!");
static_assert(offsetof(UTask_Multiplayer_RequestServer_C, Password) == 0x0000D0, "Member 'UTask_Multiplayer_RequestServer_C::Password' has a wrong offset!");
static_assert(offsetof(UTask_Multiplayer_RequestServer_C, MaxPlayers) == 0x0000E0, "Member 'UTask_Multiplayer_RequestServer_C::MaxPlayers' has a wrong offset!");
static_assert(offsetof(UTask_Multiplayer_RequestServer_C, PlayerController) == 0x0000E8, "Member 'UTask_Multiplayer_RequestServer_C::PlayerController' has a wrong offset!");
static_assert(offsetof(UTask_Multiplayer_RequestServer_C, OnFinished) == 0x0000F0, "Member 'UTask_Multiplayer_RequestServer_C::OnFinished' has a wrong offset!");
static_assert(offsetof(UTask_Multiplayer_RequestServer_C, CreatedServer) == 0x000100, "Member 'UTask_Multiplayer_RequestServer_C::CreatedServer' has a wrong offset!");

}

