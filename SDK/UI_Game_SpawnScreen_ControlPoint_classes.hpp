#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Game_SpawnScreen_ControlPoint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "POLYGON_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Game_SpawnScreen_ControlPoint.UI_Game_SpawnScreen_ControlPoint_C
// 0x0030 (0x02B0 - 0x0280)
class UUI_Game_SpawnScreen_ControlPoint_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       IsCapture;                                         // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 ControlPointImage;                                 // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AControlPoint*                          ControlPointReference;                             // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class ABP_PG_PlayerState_Game_C*              PlayerState;                                       // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UUI_Game_SpawnScreen_C*                 SpawnScreen;                                       // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_UI_Game_SpawnScreen_ControlPoint(int32 EntryPoint);
	void FindAngle(const struct FVector2D& In, double* Degrees);
	void FindCoord(double Distance, double Degrees, struct FVector2D* NewVector);
	void GetTargetReference(class AActor** Reference);
	void OnCapturedTeam_Event(class AControlPoint* ControlPoint);
	void OnIsCapture_Event(class AControlPoint* ControlPoint);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnSetTeam_Event();
	void SetAsSpawnTarget(bool IsSpawnTarget);
	void SetName();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Game_SpawnScreen_ControlPoint_C">();
	}
	static class UUI_Game_SpawnScreen_ControlPoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Game_SpawnScreen_ControlPoint_C>();
	}
};
static_assert(alignof(UUI_Game_SpawnScreen_ControlPoint_C) == 0x000008, "Wrong alignment on UUI_Game_SpawnScreen_ControlPoint_C");
static_assert(sizeof(UUI_Game_SpawnScreen_ControlPoint_C) == 0x0002B0, "Wrong size on UUI_Game_SpawnScreen_ControlPoint_C");
static_assert(offsetof(UUI_Game_SpawnScreen_ControlPoint_C, UberGraphFrame) == 0x000280, "Member 'UUI_Game_SpawnScreen_ControlPoint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Game_SpawnScreen_ControlPoint_C, IsCapture) == 0x000288, "Member 'UUI_Game_SpawnScreen_ControlPoint_C::IsCapture' has a wrong offset!");
static_assert(offsetof(UUI_Game_SpawnScreen_ControlPoint_C, ControlPointImage) == 0x000290, "Member 'UUI_Game_SpawnScreen_ControlPoint_C::ControlPointImage' has a wrong offset!");
static_assert(offsetof(UUI_Game_SpawnScreen_ControlPoint_C, ControlPointReference) == 0x000298, "Member 'UUI_Game_SpawnScreen_ControlPoint_C::ControlPointReference' has a wrong offset!");
static_assert(offsetof(UUI_Game_SpawnScreen_ControlPoint_C, PlayerState) == 0x0002A0, "Member 'UUI_Game_SpawnScreen_ControlPoint_C::PlayerState' has a wrong offset!");
static_assert(offsetof(UUI_Game_SpawnScreen_ControlPoint_C, SpawnScreen) == 0x0002A8, "Member 'UUI_Game_SpawnScreen_ControlPoint_C::SpawnScreen' has a wrong offset!");

}

