#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Button_Line

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Button_Line.UI_Button_Line_C
// 0x00C0 (0x0340 - 0x0280)
class UUI_Button_Line_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       PulseAnimation;                                    // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border;                                            // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button;                                            // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Selected;                                    // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Pulse;                                     // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Name;                                    // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Name_UI_Button_Line_C;                             // 0x02B8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	FMulticastInlineDelegateProperty_             OnPressed;                                         // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         FontSize;                                          // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsSelected;                                        // 0x02E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_38D7[0x3];                                     // 0x02E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   GeneralColorID;                                    // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FName                                   SelectColorID;                                     // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FName                                   DisableColorID;                                    // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FName                                   HoveredColorID;                                    // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FLinearColor                           SelectColor;                                       // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DisableColor;                                      // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextTransformPolicy                          TextTransformPolicy;                               // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_38D8[0x3];                                     // 0x0329(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           HoveredBackgroundColor;                            // 0x032C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void BndEvt__Button_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Button_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Button_K2Node_ComponentBoundEvent_3_OnButtonPressedEvent__DelegateSignature();
	void ExecuteUbergraph_UI_Button_Line(int32 EntryPoint);
	void HidePulse();
	void OnPressed__DelegateSignature(class UUI_Button_Line_C* Param_Button);
	void PreConstruct(bool IsDesignTime);
	void Pressed();
	void SetButtonColor();
	void SetSelectButton(bool Selected);
	void ShowPulse();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Button_Line_C">();
	}
	static class UUI_Button_Line_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Button_Line_C>();
	}
};
static_assert(alignof(UUI_Button_Line_C) == 0x000008, "Wrong alignment on UUI_Button_Line_C");
static_assert(sizeof(UUI_Button_Line_C) == 0x000340, "Wrong size on UUI_Button_Line_C");
static_assert(offsetof(UUI_Button_Line_C, UberGraphFrame) == 0x000280, "Member 'UUI_Button_Line_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Button_Line_C, PulseAnimation) == 0x000288, "Member 'UUI_Button_Line_C::PulseAnimation' has a wrong offset!");
static_assert(offsetof(UUI_Button_Line_C, Border) == 0x000290, "Member 'UUI_Button_Line_C::Border' has a wrong offset!");
static_assert(offsetof(UUI_Button_Line_C, Button) == 0x000298, "Member 'UUI_Button_Line_C::Button' has a wrong offset!");
static_assert(offsetof(UUI_Button_Line_C, Image_Selected) == 0x0002A0, "Member 'UUI_Button_Line_C::Image_Selected' has a wrong offset!");
static_assert(offsetof(UUI_Button_Line_C, Overlay_Pulse) == 0x0002A8, "Member 'UUI_Button_Line_C::Overlay_Pulse' has a wrong offset!");
static_assert(offsetof(UUI_Button_Line_C, TextBlock_Name) == 0x0002B0, "Member 'UUI_Button_Line_C::TextBlock_Name' has a wrong offset!");
static_assert(offsetof(UUI_Button_Line_C, Name_UI_Button_Line_C) == 0x0002B8, "Member 'UUI_Button_Line_C::Name_UI_Button_Line_C' has a wrong offset!");
static_assert(offsetof(UUI_Button_Line_C, OnPressed) == 0x0002D0, "Member 'UUI_Button_Line_C::OnPressed' has a wrong offset!");
static_assert(offsetof(UUI_Button_Line_C, FontSize) == 0x0002E0, "Member 'UUI_Button_Line_C::FontSize' has a wrong offset!");
static_assert(offsetof(UUI_Button_Line_C, IsSelected) == 0x0002E4, "Member 'UUI_Button_Line_C::IsSelected' has a wrong offset!");
static_assert(offsetof(UUI_Button_Line_C, GeneralColorID) == 0x0002E8, "Member 'UUI_Button_Line_C::GeneralColorID' has a wrong offset!");
static_assert(offsetof(UUI_Button_Line_C, SelectColorID) == 0x0002F0, "Member 'UUI_Button_Line_C::SelectColorID' has a wrong offset!");
static_assert(offsetof(UUI_Button_Line_C, DisableColorID) == 0x0002F8, "Member 'UUI_Button_Line_C::DisableColorID' has a wrong offset!");
static_assert(offsetof(UUI_Button_Line_C, HoveredColorID) == 0x000300, "Member 'UUI_Button_Line_C::HoveredColorID' has a wrong offset!");
static_assert(offsetof(UUI_Button_Line_C, SelectColor) == 0x000308, "Member 'UUI_Button_Line_C::SelectColor' has a wrong offset!");
static_assert(offsetof(UUI_Button_Line_C, DisableColor) == 0x000318, "Member 'UUI_Button_Line_C::DisableColor' has a wrong offset!");
static_assert(offsetof(UUI_Button_Line_C, TextTransformPolicy) == 0x000328, "Member 'UUI_Button_Line_C::TextTransformPolicy' has a wrong offset!");
static_assert(offsetof(UUI_Button_Line_C, HoveredBackgroundColor) == 0x00032C, "Member 'UUI_Button_Line_C::HoveredBackgroundColor' has a wrong offset!");

}

