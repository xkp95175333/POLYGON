#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_GameScreen

#include "Basic.hpp"

#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_GameScreen.UI_GameScreen_C
// 0x0040 (0x02C0 - 0x0280)
class UUI_GameScreen_C final : public UUserWidget
{
public:
	class UUI_Compass_C*                          UI_Compass;                                        // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Crosshair_C*                        UI_Crosshair;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Game_Hotkeys_C*                     UI_Game_Hotkeys;                                   // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Game_Notifications_C*               UI_Game_Notifications;                             // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Game_Squad_C*                       UI_Game_Squad;                                     // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Indicators_C*                       UI_Indicators;                                     // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Game_Minimap_C*                     UI_Minimap;                                        // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Weapons_C*                          UI_Weapons;                                        // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_GameScreen_C">();
	}
	static class UUI_GameScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_GameScreen_C>();
	}
};
static_assert(alignof(UUI_GameScreen_C) == 0x000008, "Wrong alignment on UUI_GameScreen_C");
static_assert(sizeof(UUI_GameScreen_C) == 0x0002C0, "Wrong size on UUI_GameScreen_C");
static_assert(offsetof(UUI_GameScreen_C, UI_Compass) == 0x000280, "Member 'UUI_GameScreen_C::UI_Compass' has a wrong offset!");
static_assert(offsetof(UUI_GameScreen_C, UI_Crosshair) == 0x000288, "Member 'UUI_GameScreen_C::UI_Crosshair' has a wrong offset!");
static_assert(offsetof(UUI_GameScreen_C, UI_Game_Hotkeys) == 0x000290, "Member 'UUI_GameScreen_C::UI_Game_Hotkeys' has a wrong offset!");
static_assert(offsetof(UUI_GameScreen_C, UI_Game_Notifications) == 0x000298, "Member 'UUI_GameScreen_C::UI_Game_Notifications' has a wrong offset!");
static_assert(offsetof(UUI_GameScreen_C, UI_Game_Squad) == 0x0002A0, "Member 'UUI_GameScreen_C::UI_Game_Squad' has a wrong offset!");
static_assert(offsetof(UUI_GameScreen_C, UI_Indicators) == 0x0002A8, "Member 'UUI_GameScreen_C::UI_Indicators' has a wrong offset!");
static_assert(offsetof(UUI_GameScreen_C, UI_Minimap) == 0x0002B0, "Member 'UUI_GameScreen_C::UI_Minimap' has a wrong offset!");
static_assert(offsetof(UUI_GameScreen_C, UI_Weapons) == 0x0002B8, "Member 'UUI_GameScreen_C::UI_Weapons' has a wrong offset!");

}

