#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Item_Accessory_Flashlight_01

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "POLYGON_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Item_Accessory_Flashlight_01.BP_Item_Accessory_Flashlight_01_C
// 0x0018 (0x0380 - 0x0368)
class ABP_Item_Accessory_Flashlight_01_C final : public AItem_Module_Flashlight
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0368(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               ParticleSystem;                                    // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Item_Accessory_Flashlight_01(int32 EntryPoint);
	void InpActEvt_Flashlight_K2Node_InputActionEvent_0(const struct FKey& Key);
	void OnChangeEnableState(const bool bPlaySound);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Item_Accessory_Flashlight_01_C">();
	}
	static class ABP_Item_Accessory_Flashlight_01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Item_Accessory_Flashlight_01_C>();
	}
};
static_assert(alignof(ABP_Item_Accessory_Flashlight_01_C) == 0x000008, "Wrong alignment on ABP_Item_Accessory_Flashlight_01_C");
static_assert(sizeof(ABP_Item_Accessory_Flashlight_01_C) == 0x000380, "Wrong size on ABP_Item_Accessory_Flashlight_01_C");
static_assert(offsetof(ABP_Item_Accessory_Flashlight_01_C, UberGraphFrame) == 0x000368, "Member 'ABP_Item_Accessory_Flashlight_01_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Item_Accessory_Flashlight_01_C, ParticleSystem) == 0x000370, "Member 'ABP_Item_Accessory_Flashlight_01_C::ParticleSystem' has a wrong offset!");
static_assert(offsetof(ABP_Item_Accessory_Flashlight_01_C, SpotLight) == 0x000378, "Member 'ABP_Item_Accessory_Flashlight_01_C::SpotLight' has a wrong offset!");

}

