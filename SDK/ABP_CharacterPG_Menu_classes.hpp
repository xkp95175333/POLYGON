#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_CharacterPG_Menu

#include "Basic.hpp"

#include "ABP_CharacterPG_Menu_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_CharacterPG_Menu.ABP_CharacterPG_Menu_C
// 0x1680 (0x19D0 - 0x0350)
class UABP_CharacterPG_Menu_C final : public UAnimInstance
{
public:
	uint8                                         Pad_3F60[0x8];                                     // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_CharacterPG_Menu::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0358(0x0020)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0378(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0380(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0388(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x03A8(0x0048)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_7;                        // 0x03F0(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_3;             // 0x0518(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x0538(0x00E0)()
	uint8                                         Pad_3F61[0x8];                                     // 0x0618(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_1;                         // 0x0620(0x0280)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3;             // 0x08A0(0x0020)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK;                           // 0x08C0(0x0280)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_1;                          // 0x0B40(0x00F0)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator_1;                 // 0x0C30(0x0040)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_6;                        // 0x0C70(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_5;                        // 0x0D98(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_4;                        // 0x0EC0(0x0128)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x0FE8(0x0048)()
	struct FAnimNode_SequenceEvaluator            AnimGraphNode_SequenceEvaluator;                   // 0x1030(0x0040)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x1070(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x1090(0x00E0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x1170(0x0128)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone;                            // 0x1298(0x00F0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x1388(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x13A8(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x13C8(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x14D0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x14F8(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x1520(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x1540(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x1560(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x1580(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x16A8(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x17D0(0x0128)()
	class UAnimSequence*                          GunIdlePose;                                       // 0x18F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_PG_PlayerController_Menu_C*         PlayerController;                                  // 0x1900(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F62[0x8];                                     // 0x1908(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             GunLeftHandOffset;                                 // 0x1910(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGripExists;                                      // 0x1970(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F63[0x7];                                     // 0x1971(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          GripHandPose;                                      // 0x1978(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                IK_LeftHandPosition;                               // 0x1980(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               IK_LeftHandRotation;                               // 0x1998(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class ABP_PG_PlayerState_Menu_C*              PlayerState;                                       // 0x19B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AItem_Gun_General*                      Current_Gun;                                       // 0x19B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_PG_Menu_Character_C*                Character;                                         // 0x19C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintInitializeAnimation();
	void CacheGunModulesValues();
	void CacheGunValues();
	void ExecuteUbergraph_ABP_CharacterPG_Menu(int32 EntryPoint);
	void OnSetGunModules_Event();
	void OnSetPlayerState_Event();
	void OnSetPrimaryGun_Event(class AItem_Gun_General* OldGun);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_CharacterPG_Menu_C">();
	}
	static class UABP_CharacterPG_Menu_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_CharacterPG_Menu_C>();
	}
};
static_assert(alignof(UABP_CharacterPG_Menu_C) == 0x000010, "Wrong alignment on UABP_CharacterPG_Menu_C");
static_assert(sizeof(UABP_CharacterPG_Menu_C) == 0x0019D0, "Wrong size on UABP_CharacterPG_Menu_C");
static_assert(offsetof(UABP_CharacterPG_Menu_C, UberGraphFrame) == 0x000350, "Member 'UABP_CharacterPG_Menu_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, __AnimBlueprintMutables) == 0x000358, "Member 'UABP_CharacterPG_Menu_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimBlueprintExtension_PropertyAccess) == 0x000378, "Member 'UABP_CharacterPG_Menu_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimBlueprintExtension_Base) == 0x000380, "Member 'UABP_CharacterPG_Menu_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimGraphNode_Root) == 0x000388, "Member 'UABP_CharacterPG_Menu_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimGraphNode_SequencePlayer) == 0x0003A8, "Member 'UABP_CharacterPG_Menu_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimGraphNode_ModifyBone_7) == 0x0003F0, "Member 'UABP_CharacterPG_Menu_C::AnimGraphNode_ModifyBone_7' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimGraphNode_LocalToComponentSpace_3) == 0x000518, "Member 'UABP_CharacterPG_Menu_C::AnimGraphNode_LocalToComponentSpace_3' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimGraphNode_LayeredBoneBlend_1) == 0x000538, "Member 'UABP_CharacterPG_Menu_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimGraphNode_TwoBoneIK_1) == 0x000620, "Member 'UABP_CharacterPG_Menu_C::AnimGraphNode_TwoBoneIK_1' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimGraphNode_ComponentToLocalSpace_3) == 0x0008A0, "Member 'UABP_CharacterPG_Menu_C::AnimGraphNode_ComponentToLocalSpace_3' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimGraphNode_TwoBoneIK) == 0x0008C0, "Member 'UABP_CharacterPG_Menu_C::AnimGraphNode_TwoBoneIK' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimGraphNode_CopyBone_1) == 0x000B40, "Member 'UABP_CharacterPG_Menu_C::AnimGraphNode_CopyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimGraphNode_SequenceEvaluator_1) == 0x000C30, "Member 'UABP_CharacterPG_Menu_C::AnimGraphNode_SequenceEvaluator_1' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimGraphNode_ModifyBone_6) == 0x000C70, "Member 'UABP_CharacterPG_Menu_C::AnimGraphNode_ModifyBone_6' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimGraphNode_ModifyBone_5) == 0x000D98, "Member 'UABP_CharacterPG_Menu_C::AnimGraphNode_ModifyBone_5' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimGraphNode_ModifyBone_4) == 0x000EC0, "Member 'UABP_CharacterPG_Menu_C::AnimGraphNode_ModifyBone_4' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimGraphNode_BlendListByBool) == 0x000FE8, "Member 'UABP_CharacterPG_Menu_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimGraphNode_SequenceEvaluator) == 0x001030, "Member 'UABP_CharacterPG_Menu_C::AnimGraphNode_SequenceEvaluator' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimGraphNode_LocalToComponentSpace_2) == 0x001070, "Member 'UABP_CharacterPG_Menu_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimGraphNode_LayeredBoneBlend) == 0x001090, "Member 'UABP_CharacterPG_Menu_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimGraphNode_ModifyBone_3) == 0x001170, "Member 'UABP_CharacterPG_Menu_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimGraphNode_CopyBone) == 0x001298, "Member 'UABP_CharacterPG_Menu_C::AnimGraphNode_CopyBone' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x001388, "Member 'UABP_CharacterPG_Menu_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x0013A8, "Member 'UABP_CharacterPG_Menu_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimGraphNode_SaveCachedPose) == 0x0013C8, "Member 'UABP_CharacterPG_Menu_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimGraphNode_UseCachedPose_1) == 0x0014D0, "Member 'UABP_CharacterPG_Menu_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimGraphNode_UseCachedPose) == 0x0014F8, "Member 'UABP_CharacterPG_Menu_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimGraphNode_LocalToComponentSpace_1) == 0x001520, "Member 'UABP_CharacterPG_Menu_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimGraphNode_ComponentToLocalSpace) == 0x001540, "Member 'UABP_CharacterPG_Menu_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimGraphNode_LocalToComponentSpace) == 0x001560, "Member 'UABP_CharacterPG_Menu_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimGraphNode_ModifyBone_2) == 0x001580, "Member 'UABP_CharacterPG_Menu_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimGraphNode_ModifyBone_1) == 0x0016A8, "Member 'UABP_CharacterPG_Menu_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, AnimGraphNode_ModifyBone) == 0x0017D0, "Member 'UABP_CharacterPG_Menu_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, GunIdlePose) == 0x0018F8, "Member 'UABP_CharacterPG_Menu_C::GunIdlePose' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, PlayerController) == 0x001900, "Member 'UABP_CharacterPG_Menu_C::PlayerController' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, GunLeftHandOffset) == 0x001910, "Member 'UABP_CharacterPG_Menu_C::GunLeftHandOffset' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, IsGripExists) == 0x001970, "Member 'UABP_CharacterPG_Menu_C::IsGripExists' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, GripHandPose) == 0x001978, "Member 'UABP_CharacterPG_Menu_C::GripHandPose' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, IK_LeftHandPosition) == 0x001980, "Member 'UABP_CharacterPG_Menu_C::IK_LeftHandPosition' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, IK_LeftHandRotation) == 0x001998, "Member 'UABP_CharacterPG_Menu_C::IK_LeftHandRotation' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, PlayerState) == 0x0019B0, "Member 'UABP_CharacterPG_Menu_C::PlayerState' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, Current_Gun) == 0x0019B8, "Member 'UABP_CharacterPG_Menu_C::Current_Gun' has a wrong offset!");
static_assert(offsetof(UABP_CharacterPG_Menu_C, Character) == 0x0019C0, "Member 'UABP_CharacterPG_Menu_C::Character' has a wrong offset!");

}

