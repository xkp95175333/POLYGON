#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Crosshair

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Crosshair.UI_Crosshair_C
// 0x0068 (0x02E8 - 0x0280)
class UUI_Crosshair_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HeadshotAnimation;                                 // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       KillAnimation;                                     // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HitAnimation;                                      // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border_OnApplyDamage;                              // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_Main;                                  // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Bottom;                                    // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Center;                                    // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Left;                                      // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Right;                                     // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Top;                                       // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ABP_PG_Game_Character_C*                Character;                                         // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AItem_Gun_General*                      Current_Gun;                                       // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_UI_Crosshair(int32 EntryPoint);
	void OnApplyGunDamage_Event(bool bHeadshot);
	void OnPossessedPawnChanged_Event_0(class APawn* OldPawn, class APawn* NewPawn);
	void OnSetCurrentGun_Event(class AItem_Gun_General* OldCurrentGun);
	void OnSetPlayerState_Event();
	void SetCrosshairPosition(const struct FVector2D& InPosition);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Crosshair_C">();
	}
	static class UUI_Crosshair_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Crosshair_C>();
	}
};
static_assert(alignof(UUI_Crosshair_C) == 0x000008, "Wrong alignment on UUI_Crosshair_C");
static_assert(sizeof(UUI_Crosshair_C) == 0x0002E8, "Wrong size on UUI_Crosshair_C");
static_assert(offsetof(UUI_Crosshair_C, UberGraphFrame) == 0x000280, "Member 'UUI_Crosshair_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Crosshair_C, HeadshotAnimation) == 0x000288, "Member 'UUI_Crosshair_C::HeadshotAnimation' has a wrong offset!");
static_assert(offsetof(UUI_Crosshair_C, KillAnimation) == 0x000290, "Member 'UUI_Crosshair_C::KillAnimation' has a wrong offset!");
static_assert(offsetof(UUI_Crosshair_C, HitAnimation) == 0x000298, "Member 'UUI_Crosshair_C::HitAnimation' has a wrong offset!");
static_assert(offsetof(UUI_Crosshair_C, Border_OnApplyDamage) == 0x0002A0, "Member 'UUI_Crosshair_C::Border_OnApplyDamage' has a wrong offset!");
static_assert(offsetof(UUI_Crosshair_C, CanvasPanel_Main) == 0x0002A8, "Member 'UUI_Crosshair_C::CanvasPanel_Main' has a wrong offset!");
static_assert(offsetof(UUI_Crosshair_C, Overlay_Bottom) == 0x0002B0, "Member 'UUI_Crosshair_C::Overlay_Bottom' has a wrong offset!");
static_assert(offsetof(UUI_Crosshair_C, Overlay_Center) == 0x0002B8, "Member 'UUI_Crosshair_C::Overlay_Center' has a wrong offset!");
static_assert(offsetof(UUI_Crosshair_C, Overlay_Left) == 0x0002C0, "Member 'UUI_Crosshair_C::Overlay_Left' has a wrong offset!");
static_assert(offsetof(UUI_Crosshair_C, Overlay_Right) == 0x0002C8, "Member 'UUI_Crosshair_C::Overlay_Right' has a wrong offset!");
static_assert(offsetof(UUI_Crosshair_C, Overlay_Top) == 0x0002D0, "Member 'UUI_Crosshair_C::Overlay_Top' has a wrong offset!");
static_assert(offsetof(UUI_Crosshair_C, Character) == 0x0002D8, "Member 'UUI_Crosshair_C::Character' has a wrong offset!");
static_assert(offsetof(UUI_Crosshair_C, Current_Gun) == 0x0002E0, "Member 'UUI_Crosshair_C::Current_Gun' has a wrong offset!");

}

