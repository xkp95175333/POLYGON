#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry

#include "Basic.hpp"

#include "POLYGON_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry.UI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C
// 0x0148 (0x03C8 - 0x0280)
class UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       CanBeUnlockPulse;                                  // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BorderPulse;                                       // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border;                                            // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_IsPossibleUnlock;                           // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button;                                            // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Icon;                                        // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_UnlockedGlow;                                // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_CanBeUnlock;                               // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_RequiredCredits;                           // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_RequiredCrowns;                            // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_RequiredLevel;                             // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_RequiredXp;                                // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_Name;                                    // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Name;                                      // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Name;                                    // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_RequiredCredits;                         // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_RequiredCrowns;                          // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_RequiredLevel;                           // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_RequiredXp;                              // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_State;                              // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_TreeContainer_C* UI_Menu_Soldier_Weapon_Gun_Gunsmith_Progress_TreeContainer; // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ModuleClass;                                       // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FGunModuleInfo                         ModuleInfo;                                        // 0x0338(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C*> Parents;                                           // 0x0378(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C*> Children;                                          // 0x0388(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          IsUnlocked;                                        // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3739[0x3];                                     // 0x0399(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Delta_Time;                                        // 0x039C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHolded;                                          // 0x03A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_373A[0x7];                                     // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnPressed;                                         // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_Tooltip_C* Tooltip;                                           // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          CanBeUnlock;                                       // 0x03C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__UI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_Button_K2Node_ComponentBoundEvent_1_OnButtonReleasedEvent__DelegateSignature();
	void BndEvt__UI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_Button_K2Node_ComponentBoundEvent_2_OnButtonPressedEvent__DelegateSignature();
	void ConstructRequestForUnlockModule(class UPlayFabJsonObject** Request);
	void DoUnlock();
	void ExecuteUbergraph_UI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry(int32 EntryPoint);
	void FindModuleInfo(struct FGunModuleInfo* FoundModuleInfo);
	class UWidget* Get_Button_ToolTipWidget();
	void GetFarLockedParent(class UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C** NotUnlockedModule);
	void GrabModuleInfo();
	void Init();
	void LoadIcon(TSoftObjectPtr<class UTexture2D> Texture);
	void OnLoaded_1115240B4926E96254772D971C3CF3F3(class UObject* Loaded);
	void OnPlayFabResponse_7F12E61E49464A2CB831D39EDC9077BA(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void OnPlayFabResponse_C1CE415B458E63DBEFF2B6BAE8E04185(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void OnPressed__DelegateSignature(bool IsPressed);
	void ParseGunData();
	void PreConstruct(bool IsDesignTime);
	void PurchaseItemFailure(const struct FPlayFabError& Error, class UObject* CustomData);
	void PurchaseItemSuccess(const struct FClientExecuteCloudScriptResult& Result, class UObject* CustomData);
	void SetCanBeUnlock();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Unlock();
	void UnlockGunModule_Failure(const struct FPlayFabError& Error, class UObject* CustomData);
	void UnlockGunModule_Success(const struct FClientExecuteCloudScriptResult& Result, class UObject* CustomData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C">();
	}
	static class UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C>();
	}
};
static_assert(alignof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C) == 0x000008, "Wrong alignment on UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C");
static_assert(sizeof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C) == 0x0003C8, "Wrong size on UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, UberGraphFrame) == 0x000280, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, CanBeUnlockPulse) == 0x000288, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::CanBeUnlockPulse' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, BorderPulse) == 0x000290, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::BorderPulse' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, Border) == 0x000298, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::Border' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, Border_IsPossibleUnlock) == 0x0002A0, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::Border_IsPossibleUnlock' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, Button) == 0x0002A8, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::Button' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, Image_Icon) == 0x0002B0, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::Image_Icon' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, Image_UnlockedGlow) == 0x0002B8, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::Image_UnlockedGlow' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, Overlay_CanBeUnlock) == 0x0002C0, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::Overlay_CanBeUnlock' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, Overlay_RequiredCredits) == 0x0002C8, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::Overlay_RequiredCredits' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, Overlay_RequiredCrowns) == 0x0002D0, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::Overlay_RequiredCrowns' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, Overlay_RequiredLevel) == 0x0002D8, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::Overlay_RequiredLevel' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, Overlay_RequiredXp) == 0x0002E0, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::Overlay_RequiredXp' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, ScrollBox_Name) == 0x0002E8, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::ScrollBox_Name' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, SizeBox_Name) == 0x0002F0, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::SizeBox_Name' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, TextBlock_Name) == 0x0002F8, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::TextBlock_Name' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, TextBlock_RequiredCredits) == 0x000300, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::TextBlock_RequiredCredits' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, TextBlock_RequiredCrowns) == 0x000308, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::TextBlock_RequiredCrowns' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, TextBlock_RequiredLevel) == 0x000310, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::TextBlock_RequiredLevel' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, TextBlock_RequiredXp) == 0x000318, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::TextBlock_RequiredXp' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, WidgetSwitcher_State) == 0x000320, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::WidgetSwitcher_State' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, UI_Menu_Soldier_Weapon_Gun_Gunsmith_Progress_TreeContainer) == 0x000328, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::UI_Menu_Soldier_Weapon_Gun_Gunsmith_Progress_TreeContainer' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, ModuleClass) == 0x000330, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::ModuleClass' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, ModuleInfo) == 0x000338, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::ModuleInfo' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, Parents) == 0x000378, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::Parents' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, Children) == 0x000388, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::Children' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, IsUnlocked) == 0x000398, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::IsUnlocked' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, Delta_Time) == 0x00039C, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::Delta_Time' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, IsHolded) == 0x0003A0, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::IsHolded' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, OnPressed) == 0x0003A8, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::OnPressed' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, Tooltip) == 0x0003B8, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::Tooltip' has a wrong offset!");
static_assert(offsetof(UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C, CanBeUnlock) == 0x0003C0, "Member 'UUI_Menu_Solder_Weapon_Gun_Gunsmith_Progress_Entry_C::CanBeUnlock' has a wrong offset!");

}

