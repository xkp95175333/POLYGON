#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Task_Multiplayer_ConnectToServer

#include "Basic.hpp"

#include "Task_Multiplayer_ConnectToServer_classes.hpp"
#include "Task_Multiplayer_ConnectToServer_parameters.hpp"


namespace SDK
{

// Function Task_Multiplayer_ConnectToServer.Task_Multiplayer_ConnectToServer_C.CustomEvent_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FClientWriteEventResponse        Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          CustomData                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UTask_Multiplayer_ConnectToServer_C::CustomEvent_0(const struct FClientWriteEventResponse& Result, class UObject* CustomData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Multiplayer_ConnectToServer_C", "CustomEvent_0");

	Params::Task_Multiplayer_ConnectToServer_C_CustomEvent_0 Parms{};

	Parms.Result = std::move(Result);
	Parms.CustomData = CustomData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Task_Multiplayer_ConnectToServer.Task_Multiplayer_ConnectToServer_C.CustomEvent_1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPlayFabError                    Error                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          CustomData                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UTask_Multiplayer_ConnectToServer_C::CustomEvent_1(const struct FPlayFabError& Error, class UObject* CustomData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Multiplayer_ConnectToServer_C", "CustomEvent_1");

	Params::Task_Multiplayer_ConnectToServer_C_CustomEvent_1 Parms{};

	Parms.Error = std::move(Error);
	Parms.CustomData = CustomData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Task_Multiplayer_ConnectToServer.Task_Multiplayer_ConnectToServer_C.ExecuteUbergraph_Task_Multiplayer_ConnectToServer
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTask_Multiplayer_ConnectToServer_C::ExecuteUbergraph_Task_Multiplayer_ConnectToServer(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Multiplayer_ConnectToServer_C", "ExecuteUbergraph_Task_Multiplayer_ConnectToServer");

	Params::Task_Multiplayer_ConnectToServer_C_ExecuteUbergraph_Task_Multiplayer_ConnectToServer Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Task_Multiplayer_ConnectToServer.Task_Multiplayer_ConnectToServer_C.OnCanceled_Event
// (BlueprintCallable, BlueprintEvent)

void UTask_Multiplayer_ConnectToServer_C::OnCanceled_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Multiplayer_ConnectToServer_C", "OnCanceled_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Task_Multiplayer_ConnectToServer.Task_Multiplayer_ConnectToServer_C.OnFinished__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSuccessful                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTask_Multiplayer_ConnectToServer_C::OnFinished__DelegateSignature(bool IsSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Multiplayer_ConnectToServer_C", "OnFinished__DelegateSignature");

	Params::Task_Multiplayer_ConnectToServer_C_OnFinished__DelegateSignature Parms{};

	Parms.IsSuccessful = IsSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Task_Multiplayer_ConnectToServer.Task_Multiplayer_ConnectToServer_C.OnPasswordEntered_Event
// (BlueprintCallable, BlueprintEvent)

void UTask_Multiplayer_ConnectToServer_C::OnPasswordEntered_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Multiplayer_ConnectToServer_C", "OnPasswordEntered_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Task_Multiplayer_ConnectToServer.Task_Multiplayer_ConnectToServer_C.OnPlayFabResponse_3F9ED0AB4BF39E9BF514A8BC8A2291FA
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPlayFabBaseModel                Response                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          CustomData                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Successful                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTask_Multiplayer_ConnectToServer_C::OnPlayFabResponse_3F9ED0AB4BF39E9BF514A8BC8A2291FA(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Multiplayer_ConnectToServer_C", "OnPlayFabResponse_3F9ED0AB4BF39E9BF514A8BC8A2291FA");

	Params::Task_Multiplayer_ConnectToServer_C_OnPlayFabResponse_3F9ED0AB4BF39E9BF514A8BC8A2291FA Parms{};

	Parms.Response = std::move(Response);
	Parms.CustomData = CustomData;
	Parms.Successful = Successful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Task_Multiplayer_ConnectToServer.Task_Multiplayer_ConnectToServer_C.OnReserveSlotFinished_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSuccessful                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   ErrorCode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTask_Multiplayer_ConnectToServer_C::OnReserveSlotFinished_Event(bool IsSuccessful, uint8 ErrorCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Multiplayer_ConnectToServer_C", "OnReserveSlotFinished_Event");

	Params::Task_Multiplayer_ConnectToServer_C_OnReserveSlotFinished_Event Parms{};

	Parms.IsSuccessful = IsSuccessful;
	Parms.ErrorCode = ErrorCode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Task_Multiplayer_ConnectToServer.Task_Multiplayer_ConnectToServer_C.ReceiveActivate
// (Event, Protected, BlueprintEvent)

void UTask_Multiplayer_ConnectToServer_C::ReceiveActivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Multiplayer_ConnectToServer_C", "ReceiveActivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Task_Multiplayer_ConnectToServer.Task_Multiplayer_ConnectToServer_C.ReceiveFinished
// (Event, Protected, BlueprintEvent)
// Parameters:
// EActionState                            Reason                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTask_Multiplayer_ConnectToServer_C::ReceiveFinished(const EActionState Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Multiplayer_ConnectToServer_C", "ReceiveFinished");

	Params::Task_Multiplayer_ConnectToServer_C_ReceiveFinished Parms{};

	Parms.Reason = Reason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Task_Multiplayer_ConnectToServer.Task_Multiplayer_ConnectToServer_C.WritePlayerEvent_Failure
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPlayFabError                    Error                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          CustomData                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UTask_Multiplayer_ConnectToServer_C::WritePlayerEvent_Failure(const struct FPlayFabError& Error, class UObject* CustomData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Multiplayer_ConnectToServer_C", "WritePlayerEvent_Failure");

	Params::Task_Multiplayer_ConnectToServer_C_WritePlayerEvent_Failure Parms{};

	Parms.Error = std::move(Error);
	Parms.CustomData = CustomData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Task_Multiplayer_ConnectToServer.Task_Multiplayer_ConnectToServer_C.WritePlayerEvent_Success
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FClientWriteEventResponse        Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          CustomData                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UTask_Multiplayer_ConnectToServer_C::WritePlayerEvent_Success(const struct FClientWriteEventResponse& Result, class UObject* CustomData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Task_Multiplayer_ConnectToServer_C", "WritePlayerEvent_Success");

	Params::Task_Multiplayer_ConnectToServer_C_WritePlayerEvent_Success Parms{};

	Parms.Result = std::move(Result);
	Parms.CustomData = CustomData;

	UObject::ProcessEvent(Func, &Parms);
}

}

