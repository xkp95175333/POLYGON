#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ControlPointMarker

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "POLYGON_structs.hpp"


namespace SDK::Params
{

// Function UI_ControlPointMarker.UI_ControlPointMarker_C.AttachMarkerToControlPoint
// 0x0008 (0x0008 - 0x0000)
struct UI_ControlPointMarker_C_AttachMarkerToControlPoint final
{
public:
	class AControlPoint*                          Param_ControlPointReference;                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ControlPointMarker_C_AttachMarkerToControlPoint) == 0x000008, "Wrong alignment on UI_ControlPointMarker_C_AttachMarkerToControlPoint");
static_assert(sizeof(UI_ControlPointMarker_C_AttachMarkerToControlPoint) == 0x000008, "Wrong size on UI_ControlPointMarker_C_AttachMarkerToControlPoint");
static_assert(offsetof(UI_ControlPointMarker_C_AttachMarkerToControlPoint, Param_ControlPointReference) == 0x000000, "Member 'UI_ControlPointMarker_C_AttachMarkerToControlPoint::Param_ControlPointReference' has a wrong offset!");

// Function UI_ControlPointMarker.UI_ControlPointMarker_C.ExecuteUbergraph_UI_ControlPointMarker
// 0x00E8 (0x00E8 - 0x0000)
struct UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC7[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC8[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AControlPoint* ControlPoint)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC9[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AControlPoint*                          K2Node_CustomEvent_ControlPointReference;          // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AControlPoint*                          K2Node_CustomEvent_ControlPoint_1;                 // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AControlPoint*                          K2Node_CustomEvent_ControlPoint;                   // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APG_PlayerController_Base*              K2Node_DynamicCast_AsPG_Player_Controller_Base;    // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ECA[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x009C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ECB[0x1];                                     // 0x00AF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AControlPoint* ControlPoint)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x00B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ECC[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PG_PlayerState_Game_C*              K2Node_DynamicCast_AsBP_PG_Player_State_Game;      // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker) == 0x000008, "Wrong alignment on UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker");
static_assert(sizeof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker) == 0x0000E8, "Wrong size on UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker");
static_assert(offsetof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker, EntryPoint) == 0x000000, "Member 'UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker, Temp_bool_Variable) == 0x000004, "Member 'UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker, Temp_struct_Variable) == 0x000008, "Member 'UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker, Temp_struct_Variable_1) == 0x000018, "Member 'UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker, K2Node_CreateDelegate_OutputDelegate_1) == 0x00003C, "Member 'UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker, K2Node_Event_IsDesignTime) == 0x00004C, "Member 'UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker, K2Node_CustomEvent_ControlPointReference) == 0x000050, "Member 'UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker::K2Node_CustomEvent_ControlPointReference' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker, K2Node_CustomEvent_ControlPoint_1) == 0x000058, "Member 'UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker::K2Node_CustomEvent_ControlPoint_1' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker, K2Node_CustomEvent_ControlPoint) == 0x000060, "Member 'UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker::K2Node_CustomEvent_ControlPoint' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker, CallFunc_GetPlayerController_ReturnValue) == 0x000068, "Member 'UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker, K2Node_DynamicCast_AsPG_Player_Controller_Base) == 0x000070, "Member 'UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker::K2Node_DynamicCast_AsPG_Player_Controller_Base' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker, CallFunc_PlayAnimation_ReturnValue) == 0x000080, "Member 'UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000088, "Member 'UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000089, "Member 'UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00008A, "Member 'UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker, CallFunc_BooleanOR_ReturnValue) == 0x00008B, "Member 'UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker, K2Node_Select_Default) == 0x00008C, "Member 'UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker, K2Node_CreateDelegate_OutputDelegate_2) == 0x00009C, "Member 'UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0000AC, "Member 'UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0000AD, "Member 'UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker, CallFunc_BooleanOR_ReturnValue_1) == 0x0000AE, "Member 'UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000B0, "Member 'UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker, CallFunc_GetPlayerController_ReturnValue_1) == 0x0000C0, "Member 'UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker, CallFunc_GetPlayerController_ReturnValue_2) == 0x0000C8, "Member 'UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker, CallFunc_IsValid_ReturnValue_1) == 0x0000D0, "Member 'UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker, K2Node_DynamicCast_AsBP_PG_Player_State_Game) == 0x0000D8, "Member 'UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker::K2Node_DynamicCast_AsBP_PG_Player_State_Game' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker, K2Node_DynamicCast_bSuccess_1) == 0x0000E0, "Member 'UI_ControlPointMarker_C_ExecuteUbergraph_UI_ControlPointMarker::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function UI_ControlPointMarker.UI_ControlPointMarker_C.OnCapturedTeam_Event
// 0x0008 (0x0008 - 0x0000)
struct UI_ControlPointMarker_C_OnCapturedTeam_Event final
{
public:
	class AControlPoint*                          ControlPoint;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ControlPointMarker_C_OnCapturedTeam_Event) == 0x000008, "Wrong alignment on UI_ControlPointMarker_C_OnCapturedTeam_Event");
static_assert(sizeof(UI_ControlPointMarker_C_OnCapturedTeam_Event) == 0x000008, "Wrong size on UI_ControlPointMarker_C_OnCapturedTeam_Event");
static_assert(offsetof(UI_ControlPointMarker_C_OnCapturedTeam_Event, ControlPoint) == 0x000000, "Member 'UI_ControlPointMarker_C_OnCapturedTeam_Event::ControlPoint' has a wrong offset!");

// Function UI_ControlPointMarker.UI_ControlPointMarker_C.OnIsCapture_Event
// 0x0008 (0x0008 - 0x0000)
struct UI_ControlPointMarker_C_OnIsCapture_Event final
{
public:
	class AControlPoint*                          ControlPoint;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ControlPointMarker_C_OnIsCapture_Event) == 0x000008, "Wrong alignment on UI_ControlPointMarker_C_OnIsCapture_Event");
static_assert(sizeof(UI_ControlPointMarker_C_OnIsCapture_Event) == 0x000008, "Wrong size on UI_ControlPointMarker_C_OnIsCapture_Event");
static_assert(offsetof(UI_ControlPointMarker_C_OnIsCapture_Event, ControlPoint) == 0x000000, "Member 'UI_ControlPointMarker_C_OnIsCapture_Event::ControlPoint' has a wrong offset!");

// Function UI_ControlPointMarker.UI_ControlPointMarker_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_ControlPointMarker_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ControlPointMarker_C_PreConstruct) == 0x000001, "Wrong alignment on UI_ControlPointMarker_C_PreConstruct");
static_assert(sizeof(UI_ControlPointMarker_C_PreConstruct) == 0x000001, "Wrong size on UI_ControlPointMarker_C_PreConstruct");
static_assert(offsetof(UI_ControlPointMarker_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_ControlPointMarker_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_ControlPointMarker.UI_ControlPointMarker_C.SelectAsSpawnPointDelegate__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct UI_ControlPointMarker_C_SelectAsSpawnPointDelegate__DelegateSignature final
{
public:
	EControlPoint                                 Point;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ControlPointMarker_C_SelectAsSpawnPointDelegate__DelegateSignature) == 0x000001, "Wrong alignment on UI_ControlPointMarker_C_SelectAsSpawnPointDelegate__DelegateSignature");
static_assert(sizeof(UI_ControlPointMarker_C_SelectAsSpawnPointDelegate__DelegateSignature) == 0x000001, "Wrong size on UI_ControlPointMarker_C_SelectAsSpawnPointDelegate__DelegateSignature");
static_assert(offsetof(UI_ControlPointMarker_C_SelectAsSpawnPointDelegate__DelegateSignature, Point) == 0x000000, "Member 'UI_ControlPointMarker_C_SelectAsSpawnPointDelegate__DelegateSignature::Point' has a wrong offset!");

// Function UI_ControlPointMarker.UI_ControlPointMarker_C.SetName
// 0x0001 (0x0001 - 0x0000)
struct UI_ControlPointMarker_C_SetName final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ControlPointMarker_C_SetName) == 0x000001, "Wrong alignment on UI_ControlPointMarker_C_SetName");
static_assert(sizeof(UI_ControlPointMarker_C_SetName) == 0x000001, "Wrong size on UI_ControlPointMarker_C_SetName");
static_assert(offsetof(UI_ControlPointMarker_C_SetName, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'UI_ControlPointMarker_C_SetName::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function UI_ControlPointMarker.UI_ControlPointMarker_C.SetSize
// 0x0010 (0x0010 - 0x0000)
struct UI_ControlPointMarker_C_SetSize final
{
public:
	double                                        NewSize;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ControlPointMarker_C_SetSize) == 0x000008, "Wrong alignment on UI_ControlPointMarker_C_SetSize");
static_assert(sizeof(UI_ControlPointMarker_C_SetSize) == 0x000010, "Wrong size on UI_ControlPointMarker_C_SetSize");
static_assert(offsetof(UI_ControlPointMarker_C_SetSize, NewSize) == 0x000000, "Member 'UI_ControlPointMarker_C_SetSize::NewSize' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_SetSize, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000008, "Member 'UI_ControlPointMarker_C_SetSize::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_ControlPointMarker_C_SetSize, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x00000C, "Member 'UI_ControlPointMarker_C_SetSize::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

}

