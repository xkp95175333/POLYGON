#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PingQoS

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct PingQoS.PingQoSInfo
// 0x0040 (0x0040 - 0x0000)
struct FPingQoSInfo final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 IP;                                                // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseIP;                                            // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_20D2[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Port;                                              // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Region;                                            // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Ping;                                              // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_20D3[0x4];                                     // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FPingQoSInfo) == 0x000008, "Wrong alignment on FPingQoSInfo");
static_assert(sizeof(FPingQoSInfo) == 0x000040, "Wrong size on FPingQoSInfo");
static_assert(offsetof(FPingQoSInfo, URL) == 0x000000, "Member 'FPingQoSInfo::URL' has a wrong offset!");
static_assert(offsetof(FPingQoSInfo, IP) == 0x000010, "Member 'FPingQoSInfo::IP' has a wrong offset!");
static_assert(offsetof(FPingQoSInfo, bUseIP) == 0x000020, "Member 'FPingQoSInfo::bUseIP' has a wrong offset!");
static_assert(offsetof(FPingQoSInfo, Port) == 0x000024, "Member 'FPingQoSInfo::Port' has a wrong offset!");
static_assert(offsetof(FPingQoSInfo, Region) == 0x000028, "Member 'FPingQoSInfo::Region' has a wrong offset!");
static_assert(offsetof(FPingQoSInfo, Ping) == 0x000038, "Member 'FPingQoSInfo::Ping' has a wrong offset!");

}

