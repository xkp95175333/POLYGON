#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_General

#include "Basic.hpp"

#include "BPFL_General_classes.hpp"
#include "BPFL_General_parameters.hpp"


namespace SDK
{

// Function BPFL_General.BPFL_General_C.Convert Corrency Code To Sign
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           CurrencyCode                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             Sign                                                   (Parm, OutParm)

void UBPFL_General_C::Convert_Corrency_Code_To_Sign(const class FString& CurrencyCode, class UObject* __WorldContext, class FText* Sign)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_General_C", "Convert Corrency Code To Sign");

	Params::BPFL_General_C_Convert_Corrency_Code_To_Sign Parms{};

	Parms.CurrencyCode = std::move(CurrencyCode);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Sign != nullptr)
		*Sign = std::move(Parms.Sign);
}


// Function BPFL_General.BPFL_General_C.GetActorRelativeLocation
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           ParentActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           ChildActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UBPFL_General_C::GetActorRelativeLocation(class AActor* ParentActor, class AActor* ChildActor, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_General_C", "GetActorRelativeLocation");

	Params::BPFL_General_C_GetActorRelativeLocation Parms{};

	Parms.ParentActor = ParentActor;
	Parms.ChildActor = ChildActor;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPFL_General.BPFL_General_C.GetDefaultModuleClassByType
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EGunModuleType                          ModuleType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UClass*                           DefaultModuleClass                                     (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBPFL_General_C::GetDefaultModuleClassByType(EGunModuleType ModuleType, class UObject* __WorldContext, class UClass** DefaultModuleClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_General_C", "GetDefaultModuleClassByType");

	Params::BPFL_General_C_GetDefaultModuleClassByType Parms{};

	Parms.ModuleType = ModuleType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (DefaultModuleClass != nullptr)
		*DefaultModuleClass = Parms.DefaultModuleClass;
}


// Function BPFL_General.BPFL_General_C.GetGameInstance
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UBP_PG_GameInstance_C*            MyGameIntance                                          (Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void UBPFL_General_C::GetGameInstance(class UObject* __WorldContext, class UBP_PG_GameInstance_C** MyGameIntance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_General_C", "GetGameInstance");

	Params::BPFL_General_C_GetGameInstance Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (MyGameIntance != nullptr)
		*MyGameIntance = Parms.MyGameIntance;
}


// Function BPFL_General.BPFL_General_C.GetGameModeBP_Game
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ABP_PG_GameMode_Game_C*           MyGameMode                                             (Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void UBPFL_General_C::GetGameModeBP_Game(class UObject* __WorldContext, class ABP_PG_GameMode_Game_C** MyGameMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_General_C", "GetGameModeBP_Game");

	Params::BPFL_General_C_GetGameModeBP_Game Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (MyGameMode != nullptr)
		*MyGameMode = Parms.MyGameMode;
}


// Function BPFL_General.BPFL_General_C.GetGameStateBP
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ABP_PG_GameState_Game_C*          MyGameState                                            (Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void UBPFL_General_C::GetGameStateBP(class UObject* __WorldContext, class ABP_PG_GameState_Game_C** MyGameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_General_C", "GetGameStateBP");

	Params::BPFL_General_C_GetGameStateBP Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (MyGameState != nullptr)
		*MyGameState = Parms.MyGameState;
}


// Function BPFL_General.BPFL_General_C.GetRareColor
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EItemRareType                           Rare                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPFL_General_C::GetRareColor(EItemRareType Rare, class UObject* __WorldContext, struct FLinearColor* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPFL_General_C", "GetRareColor");

	Params::BPFL_General_C_GetRareColor Parms{};

	Parms.Rare = Rare;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}

}

