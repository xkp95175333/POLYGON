#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_GunCharacteristics

#include "Basic.hpp"

#include "ST_ItemInfo_structs.hpp"
#include "UMG_classes.hpp"
#include "POLYGON_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_GunCharacteristics.UI_GunCharacteristics_C
// 0x00B0 (0x0330 - 0x0280)
class UUI_GunCharacteristics_C final : public UUserWidget
{
public:
	class UHorizontalBox*                         HorizontalBox_CompareGunName;                      // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_CompareGunName;                          // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_CurrentGunName;                          // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_GunCharacteristics_Module_C*        UI_GunCharacteristic_Module_Accessory;             // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_GunCharacteristics_Module_C*        UI_GunCharacteristic_Module_Barrel;                // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_GunCharacteristics_Module_C*        UI_GunCharacteristic_Module_Magazine;              // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_GunCharacteristics_Module_C*        UI_GunCharacteristic_Module_Optic;                 // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_GunCharacteristics_Module_C*        UI_GunCharacteristic_Module_Underbarrel;           // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ItemCharacteristic_Parameter_C*     UI_GunParameter_AccuracyHip;                       // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ItemCharacteristic_Parameter_C*     UI_GunParameter_Damage;                            // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ItemCharacteristic_Parameter_C*     UI_GunParameter_MagazineCapacity;                  // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ItemCharacteristic_Parameter_C*     UI_GunParameter_Mobility;                          // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ItemCharacteristic_Parameter_C*     UI_GunParameter_Range;                             // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ItemCharacteristic_Parameter_C*     UI_GunParameter_RateOfFire;                        // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ItemCharacteristic_Parameter_C*     UI_GunParameter_Recoil;                            // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ItemCharacteristic_Parameter_C*     UI_GunParameter_RecoilControl;                     // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_Modules;                               // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCurveFloat*                            CurveItemParameterMultiplier;                      // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FST_ItemInfo                           CompareGun;                                        // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FST_ItemInfo                           CurrentGun;                                        // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Get_Module_by_Type(EGunModuleType Type, class UUI_GunCharacteristics_Module_C** Module);
	void ParseCharacteristics(const struct FST_ItemInfo& Param_CompareGun, const struct FST_ItemInfo& Param_CurrentGun);
	void ParseGunModules();
	void Reset();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_GunCharacteristics_C">();
	}
	static class UUI_GunCharacteristics_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_GunCharacteristics_C>();
	}
};
static_assert(alignof(UUI_GunCharacteristics_C) == 0x000008, "Wrong alignment on UUI_GunCharacteristics_C");
static_assert(sizeof(UUI_GunCharacteristics_C) == 0x000330, "Wrong size on UUI_GunCharacteristics_C");
static_assert(offsetof(UUI_GunCharacteristics_C, HorizontalBox_CompareGunName) == 0x000280, "Member 'UUI_GunCharacteristics_C::HorizontalBox_CompareGunName' has a wrong offset!");
static_assert(offsetof(UUI_GunCharacteristics_C, TextBlock_CompareGunName) == 0x000288, "Member 'UUI_GunCharacteristics_C::TextBlock_CompareGunName' has a wrong offset!");
static_assert(offsetof(UUI_GunCharacteristics_C, TextBlock_CurrentGunName) == 0x000290, "Member 'UUI_GunCharacteristics_C::TextBlock_CurrentGunName' has a wrong offset!");
static_assert(offsetof(UUI_GunCharacteristics_C, UI_GunCharacteristic_Module_Accessory) == 0x000298, "Member 'UUI_GunCharacteristics_C::UI_GunCharacteristic_Module_Accessory' has a wrong offset!");
static_assert(offsetof(UUI_GunCharacteristics_C, UI_GunCharacteristic_Module_Barrel) == 0x0002A0, "Member 'UUI_GunCharacteristics_C::UI_GunCharacteristic_Module_Barrel' has a wrong offset!");
static_assert(offsetof(UUI_GunCharacteristics_C, UI_GunCharacteristic_Module_Magazine) == 0x0002A8, "Member 'UUI_GunCharacteristics_C::UI_GunCharacteristic_Module_Magazine' has a wrong offset!");
static_assert(offsetof(UUI_GunCharacteristics_C, UI_GunCharacteristic_Module_Optic) == 0x0002B0, "Member 'UUI_GunCharacteristics_C::UI_GunCharacteristic_Module_Optic' has a wrong offset!");
static_assert(offsetof(UUI_GunCharacteristics_C, UI_GunCharacteristic_Module_Underbarrel) == 0x0002B8, "Member 'UUI_GunCharacteristics_C::UI_GunCharacteristic_Module_Underbarrel' has a wrong offset!");
static_assert(offsetof(UUI_GunCharacteristics_C, UI_GunParameter_AccuracyHip) == 0x0002C0, "Member 'UUI_GunCharacteristics_C::UI_GunParameter_AccuracyHip' has a wrong offset!");
static_assert(offsetof(UUI_GunCharacteristics_C, UI_GunParameter_Damage) == 0x0002C8, "Member 'UUI_GunCharacteristics_C::UI_GunParameter_Damage' has a wrong offset!");
static_assert(offsetof(UUI_GunCharacteristics_C, UI_GunParameter_MagazineCapacity) == 0x0002D0, "Member 'UUI_GunCharacteristics_C::UI_GunParameter_MagazineCapacity' has a wrong offset!");
static_assert(offsetof(UUI_GunCharacteristics_C, UI_GunParameter_Mobility) == 0x0002D8, "Member 'UUI_GunCharacteristics_C::UI_GunParameter_Mobility' has a wrong offset!");
static_assert(offsetof(UUI_GunCharacteristics_C, UI_GunParameter_Range) == 0x0002E0, "Member 'UUI_GunCharacteristics_C::UI_GunParameter_Range' has a wrong offset!");
static_assert(offsetof(UUI_GunCharacteristics_C, UI_GunParameter_RateOfFire) == 0x0002E8, "Member 'UUI_GunCharacteristics_C::UI_GunParameter_RateOfFire' has a wrong offset!");
static_assert(offsetof(UUI_GunCharacteristics_C, UI_GunParameter_Recoil) == 0x0002F0, "Member 'UUI_GunCharacteristics_C::UI_GunParameter_Recoil' has a wrong offset!");
static_assert(offsetof(UUI_GunCharacteristics_C, UI_GunParameter_RecoilControl) == 0x0002F8, "Member 'UUI_GunCharacteristics_C::UI_GunParameter_RecoilControl' has a wrong offset!");
static_assert(offsetof(UUI_GunCharacteristics_C, VerticalBox_Modules) == 0x000300, "Member 'UUI_GunCharacteristics_C::VerticalBox_Modules' has a wrong offset!");
static_assert(offsetof(UUI_GunCharacteristics_C, CurveItemParameterMultiplier) == 0x000308, "Member 'UUI_GunCharacteristics_C::CurveItemParameterMultiplier' has a wrong offset!");
static_assert(offsetof(UUI_GunCharacteristics_C, CompareGun) == 0x000310, "Member 'UUI_GunCharacteristics_C::CompareGun' has a wrong offset!");
static_assert(offsetof(UUI_GunCharacteristics_C, CurrentGun) == 0x000320, "Member 'UUI_GunCharacteristics_C::CurrentGun' has a wrong offset!");

}

