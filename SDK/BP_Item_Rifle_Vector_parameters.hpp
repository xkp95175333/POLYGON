#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Item_Rifle_Vector

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_Item_Rifle_Vector.BP_Item_Rifle_Vector_C.ExecuteUbergraph_BP_Item_Rifle_Vector
// 0x0018 (0x0018 - 0x0000)
struct BP_Item_Rifle_Vector_C_ExecuteUbergraph_BP_Item_Rifle_Vector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329A[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Item_Rifle_Vector_C_ExecuteUbergraph_BP_Item_Rifle_Vector) == 0x000004, "Wrong alignment on BP_Item_Rifle_Vector_C_ExecuteUbergraph_BP_Item_Rifle_Vector");
static_assert(sizeof(BP_Item_Rifle_Vector_C_ExecuteUbergraph_BP_Item_Rifle_Vector) == 0x000018, "Wrong size on BP_Item_Rifle_Vector_C_ExecuteUbergraph_BP_Item_Rifle_Vector");
static_assert(offsetof(BP_Item_Rifle_Vector_C_ExecuteUbergraph_BP_Item_Rifle_Vector, EntryPoint) == 0x000000, "Member 'BP_Item_Rifle_Vector_C_ExecuteUbergraph_BP_Item_Rifle_Vector::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Item_Rifle_Vector_C_ExecuteUbergraph_BP_Item_Rifle_Vector, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BP_Item_Rifle_Vector_C_ExecuteUbergraph_BP_Item_Rifle_Vector::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Rifle_Vector_C_ExecuteUbergraph_BP_Item_Rifle_Vector, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'BP_Item_Rifle_Vector_C_ExecuteUbergraph_BP_Item_Rifle_Vector::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Rifle_Vector_C_ExecuteUbergraph_BP_Item_Rifle_Vector, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_Item_Rifle_Vector_C_ExecuteUbergraph_BP_Item_Rifle_Vector::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function BP_Item_Rifle_Vector.BP_Item_Rifle_Vector_C.SetSight
// 0x0030 (0x0030 - 0x0000)
struct BP_Item_Rifle_Vector_C_SetSight final
{
public:
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329C[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AItem_Module_General*                   CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329D[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329E[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Item_Rifle_Vector_C_SetSight) == 0x000008, "Wrong alignment on BP_Item_Rifle_Vector_C_SetSight");
static_assert(sizeof(BP_Item_Rifle_Vector_C_SetSight) == 0x000030, "Wrong size on BP_Item_Rifle_Vector_C_SetSight");
static_assert(offsetof(BP_Item_Rifle_Vector_C_SetSight, Temp_bool_True_if_break_was_hit_Variable) == 0x000000, "Member 'BP_Item_Rifle_Vector_C_SetSight::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Item_Rifle_Vector_C_SetSight, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_Item_Rifle_Vector_C_SetSight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Item_Rifle_Vector_C_SetSight, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_Item_Rifle_Vector_C_SetSight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Rifle_Vector_C_SetSight, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_Item_Rifle_Vector_C_SetSight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Item_Rifle_Vector_C_SetSight, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_Item_Rifle_Vector_C_SetSight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Rifle_Vector_C_SetSight, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'BP_Item_Rifle_Vector_C_SetSight::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Rifle_Vector_C_SetSight, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_Item_Rifle_Vector_C_SetSight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Rifle_Vector_C_SetSight, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_Item_Rifle_Vector_C_SetSight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Item_Rifle_Vector_C_SetSight, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_Item_Rifle_Vector_C_SetSight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Rifle_Vector_C_SetSight, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_Item_Rifle_Vector_C_SetSight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Item_Rifle_Vector_C_SetSight, CallFunc_BooleanAND_ReturnValue) == 0x00002C, "Member 'BP_Item_Rifle_Vector_C_SetSight::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

