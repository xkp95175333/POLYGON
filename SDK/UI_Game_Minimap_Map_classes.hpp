#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Game_Minimap_Map

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "POLYGON_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Game_Minimap_Map.UI_Game_Minimap_Map_C
// 0x0120 (0x03A0 - 0x0280)
class UUI_Game_Minimap_Map_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Map;                                               // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               MapOverlay;                                        // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Mat;                                               // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Draw;                                              // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3DF6[0x7];                                     // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Zoom;                                              // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UObject*                                UI_PlayerIcon;                                     // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FMapInfo                               MapInfo;                                           // 0x02B8(0x00E8)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void AddOtherIcon(class AActor* Owner);
	void AddOtherPlayerIcon(class APawn* PlayerCharacter);
	void Construct();
	void ConvertCharacterPositionToMap(double* X, double* Y);
	void ExecuteUbergraph_UI_Game_Minimap_Map(int32 EntryPoint);
	void OnLoaded_136039F0430841AA8E176F891F8DB5F6(class UObject* Loaded);
	void SetMapPosition();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Game_Minimap_Map_C">();
	}
	static class UUI_Game_Minimap_Map_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Game_Minimap_Map_C>();
	}
};
static_assert(alignof(UUI_Game_Minimap_Map_C) == 0x000008, "Wrong alignment on UUI_Game_Minimap_Map_C");
static_assert(sizeof(UUI_Game_Minimap_Map_C) == 0x0003A0, "Wrong size on UUI_Game_Minimap_Map_C");
static_assert(offsetof(UUI_Game_Minimap_Map_C, UberGraphFrame) == 0x000280, "Member 'UUI_Game_Minimap_Map_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Game_Minimap_Map_C, Map) == 0x000288, "Member 'UUI_Game_Minimap_Map_C::Map' has a wrong offset!");
static_assert(offsetof(UUI_Game_Minimap_Map_C, MapOverlay) == 0x000290, "Member 'UUI_Game_Minimap_Map_C::MapOverlay' has a wrong offset!");
static_assert(offsetof(UUI_Game_Minimap_Map_C, Mat) == 0x000298, "Member 'UUI_Game_Minimap_Map_C::Mat' has a wrong offset!");
static_assert(offsetof(UUI_Game_Minimap_Map_C, Draw) == 0x0002A0, "Member 'UUI_Game_Minimap_Map_C::Draw' has a wrong offset!");
static_assert(offsetof(UUI_Game_Minimap_Map_C, Zoom) == 0x0002A8, "Member 'UUI_Game_Minimap_Map_C::Zoom' has a wrong offset!");
static_assert(offsetof(UUI_Game_Minimap_Map_C, UI_PlayerIcon) == 0x0002B0, "Member 'UUI_Game_Minimap_Map_C::UI_PlayerIcon' has a wrong offset!");
static_assert(offsetof(UUI_Game_Minimap_Map_C, MapInfo) == 0x0002B8, "Member 'UUI_Game_Minimap_Map_C::MapInfo' has a wrong offset!");

}

