#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Game_Minimap_TeamBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Game_Minimap_TeamBase.UI_Game_Minimap_TeamBase_C
// 0x0020 (0x02A0 - 0x0280)
class UUI_Game_Minimap_TeamBase_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USizeBox*                               SizeBox;                                           // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ATeamBase*                              TeamBaseReference;                                 // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        MapSize;                                           // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CalculatePosition();
	void Construct();
	void ExecuteUbergraph_UI_Game_Minimap_TeamBase(int32 EntryPoint);
	void FindAngle(const struct FVector2D& A, double* Degrees);
	void FindCoord(double Distance, double Degrees, struct FVector2D* NewVector);
	void OnSetTeam_Event();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Game_Minimap_TeamBase_C">();
	}
	static class UUI_Game_Minimap_TeamBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Game_Minimap_TeamBase_C>();
	}
};
static_assert(alignof(UUI_Game_Minimap_TeamBase_C) == 0x000008, "Wrong alignment on UUI_Game_Minimap_TeamBase_C");
static_assert(sizeof(UUI_Game_Minimap_TeamBase_C) == 0x0002A0, "Wrong size on UUI_Game_Minimap_TeamBase_C");
static_assert(offsetof(UUI_Game_Minimap_TeamBase_C, UberGraphFrame) == 0x000280, "Member 'UUI_Game_Minimap_TeamBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Game_Minimap_TeamBase_C, SizeBox) == 0x000288, "Member 'UUI_Game_Minimap_TeamBase_C::SizeBox' has a wrong offset!");
static_assert(offsetof(UUI_Game_Minimap_TeamBase_C, TeamBaseReference) == 0x000290, "Member 'UUI_Game_Minimap_TeamBase_C::TeamBaseReference' has a wrong offset!");
static_assert(offsetof(UUI_Game_Minimap_TeamBase_C, MapSize) == 0x000298, "Member 'UUI_Game_Minimap_TeamBase_C::MapSize' has a wrong offset!");

}

