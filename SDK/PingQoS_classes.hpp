#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PingQoS

#include "Basic.hpp"

#include "PingQoS_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class PingQoS.PingQoSSubsystem
// 0x0030 (0x0060 - 0x0030)
class UPingQoSSubsystem final : public UEngineSubsystem
{
public:
	FMulticastInlineDelegateProperty_             OnPingCompleted;                                   // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_20D4[0x8];                                     // 0x0040(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPingQoSInfo>                   Infos;                                             // 0x0048(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_20D5[0x8];                                     // 0x0058(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Init(const TArray<struct FPingQoSInfo>& SetInfo);
	void Recv(TArray<struct FPingQoSInfo>* ResultInfos);
	bool Update();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PingQoSSubsystem">();
	}
	static class UPingQoSSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPingQoSSubsystem>();
	}
};
static_assert(alignof(UPingQoSSubsystem) == 0x000008, "Wrong alignment on UPingQoSSubsystem");
static_assert(sizeof(UPingQoSSubsystem) == 0x000060, "Wrong size on UPingQoSSubsystem");
static_assert(offsetof(UPingQoSSubsystem, OnPingCompleted) == 0x000030, "Member 'UPingQoSSubsystem::OnPingCompleted' has a wrong offset!");
static_assert(offsetof(UPingQoSSubsystem, Infos) == 0x000048, "Member 'UPingQoSSubsystem::Infos' has a wrong offset!");

}

