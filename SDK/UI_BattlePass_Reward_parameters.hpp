#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_BattlePass_Reward

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "POLYGON_structs.hpp"


namespace SDK::Params
{

// Function UI_BattlePass_Reward.UI_BattlePass_Reward_C.ExecuteUbergraph_UI_BattlePass_Reward
// 0x0310 (0x0310 - 0x0000)
struct UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3306[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3307[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_2;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3308[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_1;                 // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3309[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattlePassReward                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0080(0x00C0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_330A[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetContent_ReturnValue;                   // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 K2Node_DynamicCast_AsImage;                        // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_330B[0x6];                                     // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0168(0x0018)()
	double                                        K2Node_Select_Default;                             // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PG_PlayerController_Menu_C*         K2Node_DynamicCast_AsBP_PG_Player_Controller_Menu; // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_330C[0x3];                                     // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x01A4(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_330D[0x4];                                     // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x01E0(0x0078)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0258(0x0078)(ConstParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x02E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_330E[0x5];                                     // 0x02E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_2;       // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x02F8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward) == 0x000008, "Wrong alignment on UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward");
static_assert(sizeof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward) == 0x000310, "Wrong size on UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, EntryPoint) == 0x000000, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, Temp_real_Variable) == 0x000018, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, Temp_real_Variable_1) == 0x000020, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, Temp_bool_Variable) == 0x000028, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, Temp_real_Variable_2) == 0x000030, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, Temp_real_Variable_3) == 0x000038, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, K2Node_CustomEvent_Loaded_1) == 0x000040, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, Temp_object_Variable) == 0x000048, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, K2Node_DynamicCast_AsTexture_2D) == 0x000050, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, K2Node_CustomEvent_Loaded) == 0x000060, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, Temp_object_Variable_1) == 0x000068, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, K2Node_DynamicCast_AsTexture_2D_1) == 0x000070, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::K2Node_DynamicCast_AsTexture_2D_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, K2Node_Event_IsDesignTime) == 0x000079, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, CallFunc_GetDataTableRowFromName_OutRow) == 0x000080, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000140, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, CallFunc_GetContent_ReturnValue) == 0x000148, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::CallFunc_GetContent_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, K2Node_DynamicCast_AsImage) == 0x000150, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::K2Node_DynamicCast_AsImage' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, K2Node_DynamicCast_bSuccess_2) == 0x000158, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, Temp_bool_Variable_1) == 0x000159, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, CallFunc_PlayAnimation_ReturnValue) == 0x000160, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, CallFunc_Conv_IntToText_ReturnValue) == 0x000168, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, K2Node_Select_Default) == 0x000180, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, K2Node_Select_Default_1) == 0x000188, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, CallFunc_GetPlayerController_ReturnValue) == 0x000190, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, K2Node_DynamicCast_AsBP_PG_Player_Controller_Menu) == 0x000198, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::K2Node_DynamicCast_AsBP_PG_Player_Controller_Menu' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, K2Node_DynamicCast_bSuccess_3) == 0x0001A0, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, K2Node_Event_MyGeometry) == 0x0001A4, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, K2Node_Event_MouseEvent_1) == 0x0001E0, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, K2Node_Event_MouseEvent) == 0x000258, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, CallFunc_PlayAnimationReverse_ReturnValue) == 0x0002D0, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, CallFunc_PlayAnimationForward_ReturnValue) == 0x0002D8, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, CallFunc_Not_PreBool_ReturnValue) == 0x0002E0, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, CallFunc_Not_PreBool_ReturnValue_1) == 0x0002E1, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0002E2, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x0002E8, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, CallFunc_PlayAnimationForward_ReturnValue_2) == 0x0002F0, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::CallFunc_PlayAnimationForward_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, K2Node_CreateDelegate_OutputDelegate_1) == 0x0002F8, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x000308, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x00030C, "Member 'UI_BattlePass_Reward_C_ExecuteUbergraph_UI_BattlePass_Reward::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");

// Function UI_BattlePass_Reward.UI_BattlePass_Reward_C.OnLoaded_E66304D4422C547ABC6111AC5A695EFA
// 0x0008 (0x0008 - 0x0000)
struct UI_BattlePass_Reward_C_OnLoaded_E66304D4422C547ABC6111AC5A695EFA final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_Reward_C_OnLoaded_E66304D4422C547ABC6111AC5A695EFA) == 0x000008, "Wrong alignment on UI_BattlePass_Reward_C_OnLoaded_E66304D4422C547ABC6111AC5A695EFA");
static_assert(sizeof(UI_BattlePass_Reward_C_OnLoaded_E66304D4422C547ABC6111AC5A695EFA) == 0x000008, "Wrong size on UI_BattlePass_Reward_C_OnLoaded_E66304D4422C547ABC6111AC5A695EFA");
static_assert(offsetof(UI_BattlePass_Reward_C_OnLoaded_E66304D4422C547ABC6111AC5A695EFA, Loaded) == 0x000000, "Member 'UI_BattlePass_Reward_C_OnLoaded_E66304D4422C547ABC6111AC5A695EFA::Loaded' has a wrong offset!");

// Function UI_BattlePass_Reward.UI_BattlePass_Reward_C.OnLoaded_EADB5D764CEA7912CFE75BA847730F20
// 0x0008 (0x0008 - 0x0000)
struct UI_BattlePass_Reward_C_OnLoaded_EADB5D764CEA7912CFE75BA847730F20 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_Reward_C_OnLoaded_EADB5D764CEA7912CFE75BA847730F20) == 0x000008, "Wrong alignment on UI_BattlePass_Reward_C_OnLoaded_EADB5D764CEA7912CFE75BA847730F20");
static_assert(sizeof(UI_BattlePass_Reward_C_OnLoaded_EADB5D764CEA7912CFE75BA847730F20) == 0x000008, "Wrong size on UI_BattlePass_Reward_C_OnLoaded_EADB5D764CEA7912CFE75BA847730F20");
static_assert(offsetof(UI_BattlePass_Reward_C_OnLoaded_EADB5D764CEA7912CFE75BA847730F20, Loaded) == 0x000000, "Member 'UI_BattlePass_Reward_C_OnLoaded_EADB5D764CEA7912CFE75BA847730F20::Loaded' has a wrong offset!");

// Function UI_BattlePass_Reward.UI_BattlePass_Reward_C.OnMouseButtonDown
// 0x0228 (0x0228 - 0x0000)
struct UI_BattlePass_Reward_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_330F[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0170(0x00B8)()
};
static_assert(alignof(UI_BattlePass_Reward_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on UI_BattlePass_Reward_C_OnMouseButtonDown");
static_assert(sizeof(UI_BattlePass_Reward_C_OnMouseButtonDown) == 0x000228, "Wrong size on UI_BattlePass_Reward_C_OnMouseButtonDown");
static_assert(offsetof(UI_BattlePass_Reward_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'UI_BattlePass_Reward_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'UI_BattlePass_Reward_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_OnMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'UI_BattlePass_Reward_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_OnMouseButtonDown, CallFunc_Not_PreBool_ReturnValue) == 0x000168, "Member 'UI_BattlePass_Reward_C_OnMouseButtonDown::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000170, "Member 'UI_BattlePass_Reward_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function UI_BattlePass_Reward.UI_BattlePass_Reward_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct UI_BattlePass_Reward_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_BattlePass_Reward_C_OnMouseEnter) == 0x000008, "Wrong alignment on UI_BattlePass_Reward_C_OnMouseEnter");
static_assert(sizeof(UI_BattlePass_Reward_C_OnMouseEnter) == 0x0000B0, "Wrong size on UI_BattlePass_Reward_C_OnMouseEnter");
static_assert(offsetof(UI_BattlePass_Reward_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'UI_BattlePass_Reward_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'UI_BattlePass_Reward_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function UI_BattlePass_Reward.UI_BattlePass_Reward_C.OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct UI_BattlePass_Reward_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_BattlePass_Reward_C_OnMouseLeave) == 0x000008, "Wrong alignment on UI_BattlePass_Reward_C_OnMouseLeave");
static_assert(sizeof(UI_BattlePass_Reward_C_OnMouseLeave) == 0x000078, "Wrong size on UI_BattlePass_Reward_C_OnMouseLeave");
static_assert(offsetof(UI_BattlePass_Reward_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'UI_BattlePass_Reward_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function UI_BattlePass_Reward.UI_BattlePass_Reward_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_BattlePass_Reward_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_Reward_C_PreConstruct) == 0x000001, "Wrong alignment on UI_BattlePass_Reward_C_PreConstruct");
static_assert(sizeof(UI_BattlePass_Reward_C_PreConstruct) == 0x000001, "Wrong size on UI_BattlePass_Reward_C_PreConstruct");
static_assert(offsetof(UI_BattlePass_Reward_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_BattlePass_Reward_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_BattlePass_Reward.UI_BattlePass_Reward_C.Set Is Selected
// 0x0020 (0x0020 - 0x0000)
struct UI_BattlePass_Reward_C_Set_Is_Selected final
{
public:
	bool                                          Selected;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3310[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_Reward_C_Set_Is_Selected) == 0x000008, "Wrong alignment on UI_BattlePass_Reward_C_Set_Is_Selected");
static_assert(sizeof(UI_BattlePass_Reward_C_Set_Is_Selected) == 0x000020, "Wrong size on UI_BattlePass_Reward_C_Set_Is_Selected");
static_assert(offsetof(UI_BattlePass_Reward_C_Set_Is_Selected, Selected) == 0x000000, "Member 'UI_BattlePass_Reward_C_Set_Is_Selected::Selected' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_Set_Is_Selected, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'UI_BattlePass_Reward_C_Set_Is_Selected::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_Set_Is_Selected, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'UI_BattlePass_Reward_C_Set_Is_Selected::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_Set_Is_Selected, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'UI_BattlePass_Reward_C_Set_Is_Selected::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_Set_Is_Selected, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000018, "Member 'UI_BattlePass_Reward_C_Set_Is_Selected::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");

// Function UI_BattlePass_Reward.UI_BattlePass_Reward_C.SetIsReceived
// 0x0005 (0x0005 - 0x0000)
struct UI_BattlePass_Reward_C_SetIsReceived final
{
public:
	bool                                          Param_IsReseived;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_BattlePass_Reward_C_SetIsReceived) == 0x000001, "Wrong alignment on UI_BattlePass_Reward_C_SetIsReceived");
static_assert(sizeof(UI_BattlePass_Reward_C_SetIsReceived) == 0x000005, "Wrong size on UI_BattlePass_Reward_C_SetIsReceived");
static_assert(offsetof(UI_BattlePass_Reward_C_SetIsReceived, Param_IsReseived) == 0x000000, "Member 'UI_BattlePass_Reward_C_SetIsReceived::Param_IsReseived' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_SetIsReceived, Temp_bool_Variable) == 0x000001, "Member 'UI_BattlePass_Reward_C_SetIsReceived::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_SetIsReceived, Temp_byte_Variable) == 0x000002, "Member 'UI_BattlePass_Reward_C_SetIsReceived::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_SetIsReceived, Temp_byte_Variable_1) == 0x000003, "Member 'UI_BattlePass_Reward_C_SetIsReceived::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_BattlePass_Reward_C_SetIsReceived, K2Node_Select_Default) == 0x000004, "Member 'UI_BattlePass_Reward_C_SetIsReceived::K2Node_Select_Default' has a wrong offset!");

}

