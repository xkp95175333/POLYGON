#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayFab

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "CoreUObject_classes.hpp"
#include "PlayFab_structs.hpp"


namespace SDK
{

// Class PlayFab.PlayFabAdminAPI
// 0x07F0 (0x0820 - 0x0030)
class UPlayFabAdminAPI final : public UOnlineBlueprintCallProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnPlayFabResponse;                                 // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_2231[0x778];                                   // 0x0040(0x0778)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayFabAuthenticationContext*          CallAuthenticationContext;                         // 0x07B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayFabJsonObject*                     RequestJsonObj;                                    // 0x07C0(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayFabJsonObject*                     ResponseJsonObj;                                   // 0x07C8(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2232[0x50];                                    // 0x07D0(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UPlayFabAdminAPI* AbortTaskInstance(const struct FAdminAbortTaskInstanceRequest& Request, TDelegate<void(const struct FAdminEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* AddLocalizedNews(const struct FAdminAddLocalizedNewsRequest& Request, TDelegate<void(const struct FAdminAddLocalizedNewsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* AddNews(const struct FAdminAddNewsRequest& Request, TDelegate<void(const struct FAdminAddNewsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* AddPlayerTag(const struct FAdminAddPlayerTagRequest& Request, TDelegate<void(const struct FAdminAddPlayerTagResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* AddUserVirtualCurrency(const struct FAdminAddUserVirtualCurrencyRequest& Request, TDelegate<void(const struct FAdminModifyUserVirtualCurrencyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* AddVirtualCurrencyTypes(const struct FAdminAddVirtualCurrencyTypesRequest& Request, TDelegate<void(const struct FAdminBlankResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* BanUsers(const struct FAdminBanUsersRequest& Request, TDelegate<void(const struct FAdminBanUsersResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* CheckLimitedEditionItemAvailability(const struct FAdminCheckLimitedEditionItemAvailabilityRequest& Request, TDelegate<void(const struct FAdminCheckLimitedEditionItemAvailabilityResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* CreateActionsOnPlayersInSegmentTask(const struct FAdminCreateActionsOnPlayerSegmentTaskRequest& Request, TDelegate<void(const struct FAdminCreateTaskResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* CreateCloudScriptTask(const struct FAdminCreateCloudScriptTaskRequest& Request, TDelegate<void(const struct FAdminCreateTaskResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* CreateInsightsScheduledScalingTask(const struct FAdminCreateInsightsScheduledScalingTaskRequest& Request, TDelegate<void(const struct FAdminCreateTaskResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* CreateOpenIdConnection(const struct FAdminCreateOpenIdConnectionRequest& Request, TDelegate<void(const struct FAdminEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* CreatePlayerSharedSecret(const struct FAdminCreatePlayerSharedSecretRequest& Request, TDelegate<void(const struct FAdminCreatePlayerSharedSecretResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* CreatePlayerStatisticDefinition(const struct FAdminCreatePlayerStatisticDefinitionRequest& Request, TDelegate<void(const struct FAdminCreatePlayerStatisticDefinitionResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* CreateSegment(const struct FAdminCreateSegmentRequest& Request, TDelegate<void(const struct FAdminCreateSegmentResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* DeleteContent(const struct FAdminDeleteContentRequest& Request, TDelegate<void(const struct FAdminBlankResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* DeleteMasterPlayerAccount(const struct FAdminDeleteMasterPlayerAccountRequest& Request, TDelegate<void(const struct FAdminDeleteMasterPlayerAccountResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* DeleteMembershipSubscription(const struct FAdminDeleteMembershipSubscriptionRequest& Request, TDelegate<void(const struct FAdminDeleteMembershipSubscriptionResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* DeleteOpenIdConnection(const struct FAdminDeleteOpenIdConnectionRequest& Request, TDelegate<void(const struct FAdminEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* DeletePlayer(const struct FAdminDeletePlayerRequest& Request, TDelegate<void(const struct FAdminDeletePlayerResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* DeletePlayerSharedSecret(const struct FAdminDeletePlayerSharedSecretRequest& Request, TDelegate<void(const struct FAdminDeletePlayerSharedSecretResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* DeleteSegment(const struct FAdminDeleteSegmentRequest& Request, TDelegate<void(const struct FAdminDeleteSegmentsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* DeleteStore(const struct FAdminDeleteStoreRequest& Request, TDelegate<void(const struct FAdminDeleteStoreResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* DeleteTask(const struct FAdminDeleteTaskRequest& Request, TDelegate<void(const struct FAdminEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* DeleteTitle(const struct FAdminDeleteTitleRequest& Request, TDelegate<void(const struct FAdminDeleteTitleResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* DeleteTitleDataOverride(const struct FAdminDeleteTitleDataOverrideRequest& Request, TDelegate<void(const struct FAdminDeleteTitleDataOverrideResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* ExportMasterPlayerData(const struct FAdminExportMasterPlayerDataRequest& Request, TDelegate<void(const struct FAdminExportMasterPlayerDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* ExportPlayersInSegment(const struct FAdminExportPlayersInSegmentRequest& Request, TDelegate<void(const struct FAdminExportPlayersInSegmentResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetActionsOnPlayersInSegmentTaskInstance(const struct FAdminGetTaskInstanceRequest& Request, TDelegate<void(const struct FAdminGetActionsOnPlayersInSegmentTaskInstanceResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetAllSegments(const struct FAdminGetAllSegmentsRequest& Request, TDelegate<void(const struct FAdminGetAllSegmentsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetCatalogItems(const struct FAdminGetCatalogItemsRequest& Request, TDelegate<void(const struct FAdminGetCatalogItemsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetCloudScriptRevision(const struct FAdminGetCloudScriptRevisionRequest& Request, TDelegate<void(const struct FAdminGetCloudScriptRevisionResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetCloudScriptTaskInstance(const struct FAdminGetTaskInstanceRequest& Request, TDelegate<void(const struct FAdminGetCloudScriptTaskInstanceResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetCloudScriptVersions(const struct FAdminGetCloudScriptVersionsRequest& Request, TDelegate<void(const struct FAdminGetCloudScriptVersionsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetContentList(const struct FAdminGetContentListRequest& Request, TDelegate<void(const struct FAdminGetContentListResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetContentUploadUrl(const struct FAdminGetContentUploadUrlRequest& Request, TDelegate<void(const struct FAdminGetContentUploadUrlResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetDataReport(const struct FAdminGetDataReportRequest& Request, TDelegate<void(const struct FAdminGetDataReportResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetMatchmakerGameInfo(const struct FAdminGetMatchmakerGameInfoRequest& Request, TDelegate<void(const struct FAdminGetMatchmakerGameInfoResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetMatchmakerGameModes(const struct FAdminGetMatchmakerGameModesRequest& Request, TDelegate<void(const struct FAdminGetMatchmakerGameModesResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetPlayedTitleList(const struct FAdminGetPlayedTitleListRequest& Request, TDelegate<void(const struct FAdminGetPlayedTitleListResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetPlayerIdFromAuthToken(const struct FAdminGetPlayerIdFromAuthTokenRequest& Request, TDelegate<void(const struct FAdminGetPlayerIdFromAuthTokenResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetPlayerProfile(const struct FAdminGetPlayerProfileRequest& Request, TDelegate<void(const struct FAdminGetPlayerProfileResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetPlayerSegments(const struct FAdminGetPlayersSegmentsRequest& Request, TDelegate<void(const struct FAdminGetPlayerSegmentsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetPlayerSharedSecrets(const struct FAdminGetPlayerSharedSecretsRequest& Request, TDelegate<void(const struct FAdminGetPlayerSharedSecretsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetPlayersInSegment(const struct FAdminGetPlayersInSegmentRequest& Request, TDelegate<void(const struct FAdminGetPlayersInSegmentResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetPlayerStatisticDefinitions(const struct FAdminGetPlayerStatisticDefinitionsRequest& Request, TDelegate<void(const struct FAdminGetPlayerStatisticDefinitionsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetPlayerStatisticVersions(const struct FAdminGetPlayerStatisticVersionsRequest& Request, TDelegate<void(const struct FAdminGetPlayerStatisticVersionsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetPlayerTags(const struct FAdminGetPlayerTagsRequest& Request, TDelegate<void(const struct FAdminGetPlayerTagsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetPolicy(const struct FAdminGetPolicyRequest& Request, TDelegate<void(const struct FAdminGetPolicyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetPublisherData(const struct FAdminGetPublisherDataRequest& Request, TDelegate<void(const struct FAdminGetPublisherDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetRandomResultTables(const struct FAdminGetRandomResultTablesRequest& Request, TDelegate<void(const struct FAdminGetRandomResultTablesResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetSegmentExport(const struct FAdminGetPlayersInSegmentExportRequest& Request, TDelegate<void(const struct FAdminGetPlayersInSegmentExportResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetSegments(const struct FAdminGetSegmentsRequest& Request, TDelegate<void(const struct FAdminGetSegmentsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetStoreItems(const struct FAdminGetStoreItemsRequest& Request, TDelegate<void(const struct FAdminGetStoreItemsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetTaskInstances(const struct FAdminGetTaskInstancesRequest& Request, TDelegate<void(const struct FAdminGetTaskInstancesResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetTasks(const struct FAdminGetTasksRequest& Request, TDelegate<void(const struct FAdminGetTasksResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetTitleData(const struct FAdminGetTitleDataRequest& Request, TDelegate<void(const struct FAdminGetTitleDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetTitleInternalData(const struct FAdminGetTitleDataRequest& Request, TDelegate<void(const struct FAdminGetTitleDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetUserAccountInfo(const struct FAdminLookupUserAccountInfoRequest& Request, TDelegate<void(const struct FAdminLookupUserAccountInfoResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetUserBans(const struct FAdminGetUserBansRequest& Request, TDelegate<void(const struct FAdminGetUserBansResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetUserData(const struct FAdminGetUserDataRequest& Request, TDelegate<void(const struct FAdminGetUserDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetUserInternalData(const struct FAdminGetUserDataRequest& Request, TDelegate<void(const struct FAdminGetUserDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetUserInventory(const struct FAdminGetUserInventoryRequest& Request, TDelegate<void(const struct FAdminGetUserInventoryResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetUserPublisherData(const struct FAdminGetUserDataRequest& Request, TDelegate<void(const struct FAdminGetUserDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetUserPublisherInternalData(const struct FAdminGetUserDataRequest& Request, TDelegate<void(const struct FAdminGetUserDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetUserPublisherReadOnlyData(const struct FAdminGetUserDataRequest& Request, TDelegate<void(const struct FAdminGetUserDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GetUserReadOnlyData(const struct FAdminGetUserDataRequest& Request, TDelegate<void(const struct FAdminGetUserDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* GrantItemsToUsers(const struct FAdminGrantItemsToUsersRequest& Request, TDelegate<void(const struct FAdminGrantItemsToUsersResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* IncrementLimitedEditionItemAvailability(const struct FAdminIncrementLimitedEditionItemAvailabilityRequest& Request, TDelegate<void(const struct FAdminIncrementLimitedEditionItemAvailabilityResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* IncrementPlayerStatisticVersion(const struct FAdminIncrementPlayerStatisticVersionRequest& Request, TDelegate<void(const struct FAdminIncrementPlayerStatisticVersionResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* ListOpenIdConnection(const struct FAdminListOpenIdConnectionRequest& Request, TDelegate<void(const struct FAdminListOpenIdConnectionResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* ListVirtualCurrencyTypes(const struct FAdminListVirtualCurrencyTypesRequest& Request, TDelegate<void(const struct FAdminListVirtualCurrencyTypesResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* ModifyServerBuild(const struct FAdminModifyServerBuildRequest& Request, TDelegate<void(const struct FAdminModifyServerBuildResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* RefundPurchase(const struct FAdminRefundPurchaseRequest& Request, TDelegate<void(const struct FAdminRefundPurchaseResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* RemovePlayerTag(const struct FAdminRemovePlayerTagRequest& Request, TDelegate<void(const struct FAdminRemovePlayerTagResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* RemoveVirtualCurrencyTypes(const struct FAdminRemoveVirtualCurrencyTypesRequest& Request, TDelegate<void(const struct FAdminBlankResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* ResetCharacterStatistics(const struct FAdminResetCharacterStatisticsRequest& Request, TDelegate<void(const struct FAdminResetCharacterStatisticsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* ResetPassword(const struct FAdminResetPasswordRequest& Request, TDelegate<void(const struct FAdminResetPasswordResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* ResetUserStatistics(const struct FAdminResetUserStatisticsRequest& Request, TDelegate<void(const struct FAdminResetUserStatisticsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* ResolvePurchaseDispute(const struct FAdminResolvePurchaseDisputeRequest& Request, TDelegate<void(const struct FAdminResolvePurchaseDisputeResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* RevokeAllBansForUser(const struct FAdminRevokeAllBansForUserRequest& Request, TDelegate<void(const struct FAdminRevokeAllBansForUserResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* RevokeBans(const struct FAdminRevokeBansRequest& Request, TDelegate<void(const struct FAdminRevokeBansResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* RevokeInventoryItem(const struct FAdminRevokeInventoryItemRequest& Request, TDelegate<void(const struct FAdminRevokeInventoryResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* RevokeInventoryItems(const struct FAdminRevokeInventoryItemsRequest& Request, TDelegate<void(const struct FAdminRevokeInventoryItemsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* RunTask(const struct FAdminRunTaskRequest& Request, TDelegate<void(const struct FAdminRunTaskResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* SendAccountRecoveryEmail(const struct FAdminSendAccountRecoveryEmailRequest& Request, TDelegate<void(const struct FAdminSendAccountRecoveryEmailResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* SetCatalogItems(const struct FAdminUpdateCatalogItemsRequest& Request, TDelegate<void(const struct FAdminUpdateCatalogItemsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* SetMembershipOverride(const struct FAdminSetMembershipOverrideRequest& Request, TDelegate<void(const struct FAdminSetMembershipOverrideResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* SetPlayerSecret(const struct FAdminSetPlayerSecretRequest& Request, TDelegate<void(const struct FAdminSetPlayerSecretResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* SetPublishedRevision(const struct FAdminSetPublishedRevisionRequest& Request, TDelegate<void(const struct FAdminSetPublishedRevisionResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* SetPublisherData(const struct FAdminSetPublisherDataRequest& Request, TDelegate<void(const struct FAdminSetPublisherDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* SetStoreItems(const struct FAdminUpdateStoreItemsRequest& Request, TDelegate<void(const struct FAdminUpdateStoreItemsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* SetTitleData(const struct FAdminSetTitleDataRequest& Request, TDelegate<void(const struct FAdminSetTitleDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* SetTitleDataAndOverrides(const struct FAdminSetTitleDataAndOverridesRequest& Request, TDelegate<void(const struct FAdminSetTitleDataAndOverridesResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* SetTitleInternalData(const struct FAdminSetTitleDataRequest& Request, TDelegate<void(const struct FAdminSetTitleDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* SetupPushNotification(const struct FAdminSetupPushNotificationRequest& Request, TDelegate<void(const struct FAdminSetupPushNotificationResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* SubtractUserVirtualCurrency(const struct FAdminSubtractUserVirtualCurrencyRequest& Request, TDelegate<void(const struct FAdminModifyUserVirtualCurrencyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* UpdateBans(const struct FAdminUpdateBansRequest& Request, TDelegate<void(const struct FAdminUpdateBansResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* UpdateCatalogItems(const struct FAdminUpdateCatalogItemsRequest& Request, TDelegate<void(const struct FAdminUpdateCatalogItemsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* UpdateCloudScript(const struct FAdminUpdateCloudScriptRequest& Request, TDelegate<void(const struct FAdminUpdateCloudScriptResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* UpdateOpenIdConnection(const struct FAdminUpdateOpenIdConnectionRequest& Request, TDelegate<void(const struct FAdminEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* UpdatePlayerSharedSecret(const struct FAdminUpdatePlayerSharedSecretRequest& Request, TDelegate<void(const struct FAdminUpdatePlayerSharedSecretResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* UpdatePlayerStatisticDefinition(const struct FAdminUpdatePlayerStatisticDefinitionRequest& Request, TDelegate<void(const struct FAdminUpdatePlayerStatisticDefinitionResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* UpdatePolicy(const struct FAdminUpdatePolicyRequest& Request, TDelegate<void(const struct FAdminUpdatePolicyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* UpdateRandomResultTables(const struct FAdminUpdateRandomResultTablesRequest& Request, TDelegate<void(const struct FAdminUpdateRandomResultTablesResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* UpdateSegment(const struct FAdminUpdateSegmentRequest& Request, TDelegate<void(const struct FAdminUpdateSegmentResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* UpdateStoreItems(const struct FAdminUpdateStoreItemsRequest& Request, TDelegate<void(const struct FAdminUpdateStoreItemsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* UpdateTask(const struct FAdminUpdateTaskRequest& Request, TDelegate<void(const struct FAdminEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* UpdateUserData(const struct FAdminUpdateUserDataRequest& Request, TDelegate<void(const struct FAdminUpdateUserDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* UpdateUserInternalData(const struct FAdminUpdateUserInternalDataRequest& Request, TDelegate<void(const struct FAdminUpdateUserDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* UpdateUserPublisherData(const struct FAdminUpdateUserDataRequest& Request, TDelegate<void(const struct FAdminUpdateUserDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* UpdateUserPublisherInternalData(const struct FAdminUpdateUserInternalDataRequest& Request, TDelegate<void(const struct FAdminUpdateUserDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* UpdateUserPublisherReadOnlyData(const struct FAdminUpdateUserDataRequest& Request, TDelegate<void(const struct FAdminUpdateUserDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* UpdateUserReadOnlyData(const struct FAdminUpdateUserDataRequest& Request, TDelegate<void(const struct FAdminUpdateUserDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAdminAPI* UpdateUserTitleDisplayName(const struct FAdminUpdateUserTitleDisplayNameRequest& Request, TDelegate<void(const struct FAdminUpdateUserTitleDisplayNameResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);

	void DelegateOnFailurePlayFabError__DelegateSignature(const struct FPlayFabError& Error, class UObject* CustomData);
	void DelegateOnSuccessAbortTaskInstance__DelegateSignature(const struct FAdminEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessAddLocalizedNews__DelegateSignature(const struct FAdminAddLocalizedNewsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessAddNews__DelegateSignature(const struct FAdminAddNewsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessAddPlayerTag__DelegateSignature(const struct FAdminAddPlayerTagResult& Result, class UObject* CustomData);
	void DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature(const struct FAdminModifyUserVirtualCurrencyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessAddVirtualCurrencyTypes__DelegateSignature(const struct FAdminBlankResult& Result, class UObject* CustomData);
	void DelegateOnSuccessBanUsers__DelegateSignature(const struct FAdminBanUsersResult& Result, class UObject* CustomData);
	void DelegateOnSuccessCheckLimitedEditionItemAvailability__DelegateSignature(const struct FAdminCheckLimitedEditionItemAvailabilityResult& Result, class UObject* CustomData);
	void DelegateOnSuccessCreateActionsOnPlayersInSegmentTask__DelegateSignature(const struct FAdminCreateTaskResult& Result, class UObject* CustomData);
	void DelegateOnSuccessCreateCloudScriptTask__DelegateSignature(const struct FAdminCreateTaskResult& Result, class UObject* CustomData);
	void DelegateOnSuccessCreateInsightsScheduledScalingTask__DelegateSignature(const struct FAdminCreateTaskResult& Result, class UObject* CustomData);
	void DelegateOnSuccessCreateOpenIdConnection__DelegateSignature(const struct FAdminEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessCreatePlayerSharedSecret__DelegateSignature(const struct FAdminCreatePlayerSharedSecretResult& Result, class UObject* CustomData);
	void DelegateOnSuccessCreatePlayerStatisticDefinition__DelegateSignature(const struct FAdminCreatePlayerStatisticDefinitionResult& Result, class UObject* CustomData);
	void DelegateOnSuccessCreateSegment__DelegateSignature(const struct FAdminCreateSegmentResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessDeleteContent__DelegateSignature(const struct FAdminBlankResult& Result, class UObject* CustomData);
	void DelegateOnSuccessDeleteMasterPlayerAccount__DelegateSignature(const struct FAdminDeleteMasterPlayerAccountResult& Result, class UObject* CustomData);
	void DelegateOnSuccessDeleteMembershipSubscription__DelegateSignature(const struct FAdminDeleteMembershipSubscriptionResult& Result, class UObject* CustomData);
	void DelegateOnSuccessDeleteOpenIdConnection__DelegateSignature(const struct FAdminEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessDeletePlayer__DelegateSignature(const struct FAdminDeletePlayerResult& Result, class UObject* CustomData);
	void DelegateOnSuccessDeletePlayerSharedSecret__DelegateSignature(const struct FAdminDeletePlayerSharedSecretResult& Result, class UObject* CustomData);
	void DelegateOnSuccessDeleteSegment__DelegateSignature(const struct FAdminDeleteSegmentsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessDeleteStore__DelegateSignature(const struct FAdminDeleteStoreResult& Result, class UObject* CustomData);
	void DelegateOnSuccessDeleteTask__DelegateSignature(const struct FAdminEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessDeleteTitle__DelegateSignature(const struct FAdminDeleteTitleResult& Result, class UObject* CustomData);
	void DelegateOnSuccessDeleteTitleDataOverride__DelegateSignature(const struct FAdminDeleteTitleDataOverrideResult& Result, class UObject* CustomData);
	void DelegateOnSuccessExportMasterPlayerData__DelegateSignature(const struct FAdminExportMasterPlayerDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessExportPlayersInSegment__DelegateSignature(const struct FAdminExportPlayersInSegmentResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetActionsOnPlayersInSegmentTaskInstance__DelegateSignature(const struct FAdminGetActionsOnPlayersInSegmentTaskInstanceResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetAllSegments__DelegateSignature(const struct FAdminGetAllSegmentsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetCatalogItems__DelegateSignature(const struct FAdminGetCatalogItemsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetCloudScriptRevision__DelegateSignature(const struct FAdminGetCloudScriptRevisionResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetCloudScriptTaskInstance__DelegateSignature(const struct FAdminGetCloudScriptTaskInstanceResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetCloudScriptVersions__DelegateSignature(const struct FAdminGetCloudScriptVersionsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetContentList__DelegateSignature(const struct FAdminGetContentListResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetContentUploadUrl__DelegateSignature(const struct FAdminGetContentUploadUrlResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetDataReport__DelegateSignature(const struct FAdminGetDataReportResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetMatchmakerGameInfo__DelegateSignature(const struct FAdminGetMatchmakerGameInfoResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetMatchmakerGameModes__DelegateSignature(const struct FAdminGetMatchmakerGameModesResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayedTitleList__DelegateSignature(const struct FAdminGetPlayedTitleListResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayerIdFromAuthToken__DelegateSignature(const struct FAdminGetPlayerIdFromAuthTokenResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayerProfile__DelegateSignature(const struct FAdminGetPlayerProfileResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayerSegments__DelegateSignature(const struct FAdminGetPlayerSegmentsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayerSharedSecrets__DelegateSignature(const struct FAdminGetPlayerSharedSecretsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayersInSegment__DelegateSignature(const struct FAdminGetPlayersInSegmentResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayerStatisticDefinitions__DelegateSignature(const struct FAdminGetPlayerStatisticDefinitionsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature(const struct FAdminGetPlayerStatisticVersionsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayerTags__DelegateSignature(const struct FAdminGetPlayerTagsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPolicy__DelegateSignature(const struct FAdminGetPolicyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPublisherData__DelegateSignature(const struct FAdminGetPublisherDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetRandomResultTables__DelegateSignature(const struct FAdminGetRandomResultTablesResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetSegmentExport__DelegateSignature(const struct FAdminGetPlayersInSegmentExportResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetSegments__DelegateSignature(const struct FAdminGetSegmentsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetStoreItems__DelegateSignature(const struct FAdminGetStoreItemsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetTaskInstances__DelegateSignature(const struct FAdminGetTaskInstancesResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetTasks__DelegateSignature(const struct FAdminGetTasksResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetTitleData__DelegateSignature(const struct FAdminGetTitleDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetTitleInternalData__DelegateSignature(const struct FAdminGetTitleDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetUserAccountInfo__DelegateSignature(const struct FAdminLookupUserAccountInfoResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetUserBans__DelegateSignature(const struct FAdminGetUserBansResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetUserData__DelegateSignature(const struct FAdminGetUserDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetUserInternalData__DelegateSignature(const struct FAdminGetUserDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetUserInventory__DelegateSignature(const struct FAdminGetUserInventoryResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetUserPublisherData__DelegateSignature(const struct FAdminGetUserDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetUserPublisherInternalData__DelegateSignature(const struct FAdminGetUserDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature(const struct FAdminGetUserDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetUserReadOnlyData__DelegateSignature(const struct FAdminGetUserDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGrantItemsToUsers__DelegateSignature(const struct FAdminGrantItemsToUsersResult& Result, class UObject* CustomData);
	void DelegateOnSuccessIncrementLimitedEditionItemAvailability__DelegateSignature(const struct FAdminIncrementLimitedEditionItemAvailabilityResult& Result, class UObject* CustomData);
	void DelegateOnSuccessIncrementPlayerStatisticVersion__DelegateSignature(const struct FAdminIncrementPlayerStatisticVersionResult& Result, class UObject* CustomData);
	void DelegateOnSuccessListOpenIdConnection__DelegateSignature(const struct FAdminListOpenIdConnectionResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessListVirtualCurrencyTypes__DelegateSignature(const struct FAdminListVirtualCurrencyTypesResult& Result, class UObject* CustomData);
	void DelegateOnSuccessModifyServerBuild__DelegateSignature(const struct FAdminModifyServerBuildResult& Result, class UObject* CustomData);
	void DelegateOnSuccessRefundPurchase__DelegateSignature(const struct FAdminRefundPurchaseResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessRemovePlayerTag__DelegateSignature(const struct FAdminRemovePlayerTagResult& Result, class UObject* CustomData);
	void DelegateOnSuccessRemoveVirtualCurrencyTypes__DelegateSignature(const struct FAdminBlankResult& Result, class UObject* CustomData);
	void DelegateOnSuccessResetCharacterStatistics__DelegateSignature(const struct FAdminResetCharacterStatisticsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessResetPassword__DelegateSignature(const struct FAdminResetPasswordResult& Result, class UObject* CustomData);
	void DelegateOnSuccessResetUserStatistics__DelegateSignature(const struct FAdminResetUserStatisticsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessResolvePurchaseDispute__DelegateSignature(const struct FAdminResolvePurchaseDisputeResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessRevokeAllBansForUser__DelegateSignature(const struct FAdminRevokeAllBansForUserResult& Result, class UObject* CustomData);
	void DelegateOnSuccessRevokeBans__DelegateSignature(const struct FAdminRevokeBansResult& Result, class UObject* CustomData);
	void DelegateOnSuccessRevokeInventoryItem__DelegateSignature(const struct FAdminRevokeInventoryResult& Result, class UObject* CustomData);
	void DelegateOnSuccessRevokeInventoryItems__DelegateSignature(const struct FAdminRevokeInventoryItemsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessRunTask__DelegateSignature(const struct FAdminRunTaskResult& Result, class UObject* CustomData);
	void DelegateOnSuccessSendAccountRecoveryEmail__DelegateSignature(const struct FAdminSendAccountRecoveryEmailResult& Result, class UObject* CustomData);
	void DelegateOnSuccessSetCatalogItems__DelegateSignature(const struct FAdminUpdateCatalogItemsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessSetMembershipOverride__DelegateSignature(const struct FAdminSetMembershipOverrideResult& Result, class UObject* CustomData);
	void DelegateOnSuccessSetPlayerSecret__DelegateSignature(const struct FAdminSetPlayerSecretResult& Result, class UObject* CustomData);
	void DelegateOnSuccessSetPublishedRevision__DelegateSignature(const struct FAdminSetPublishedRevisionResult& Result, class UObject* CustomData);
	void DelegateOnSuccessSetPublisherData__DelegateSignature(const struct FAdminSetPublisherDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessSetStoreItems__DelegateSignature(const struct FAdminUpdateStoreItemsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessSetTitleData__DelegateSignature(const struct FAdminSetTitleDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessSetTitleDataAndOverrides__DelegateSignature(const struct FAdminSetTitleDataAndOverridesResult& Result, class UObject* CustomData);
	void DelegateOnSuccessSetTitleInternalData__DelegateSignature(const struct FAdminSetTitleDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessSetupPushNotification__DelegateSignature(const struct FAdminSetupPushNotificationResult& Result, class UObject* CustomData);
	void DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature(const struct FAdminModifyUserVirtualCurrencyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateBans__DelegateSignature(const struct FAdminUpdateBansResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateCatalogItems__DelegateSignature(const struct FAdminUpdateCatalogItemsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateCloudScript__DelegateSignature(const struct FAdminUpdateCloudScriptResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateOpenIdConnection__DelegateSignature(const struct FAdminEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdatePlayerSharedSecret__DelegateSignature(const struct FAdminUpdatePlayerSharedSecretResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdatePlayerStatisticDefinition__DelegateSignature(const struct FAdminUpdatePlayerStatisticDefinitionResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdatePolicy__DelegateSignature(const struct FAdminUpdatePolicyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateRandomResultTables__DelegateSignature(const struct FAdminUpdateRandomResultTablesResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateSegment__DelegateSignature(const struct FAdminUpdateSegmentResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateStoreItems__DelegateSignature(const struct FAdminUpdateStoreItemsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateTask__DelegateSignature(const struct FAdminEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateUserData__DelegateSignature(const struct FAdminUpdateUserDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateUserInternalData__DelegateSignature(const struct FAdminUpdateUserDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateUserPublisherData__DelegateSignature(const struct FAdminUpdateUserDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateUserPublisherInternalData__DelegateSignature(const struct FAdminUpdateUserDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateUserPublisherReadOnlyData__DelegateSignature(const struct FAdminUpdateUserDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateUserReadOnlyData__DelegateSignature(const struct FAdminUpdateUserDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateUserTitleDisplayName__DelegateSignature(const struct FAdminUpdateUserTitleDisplayNameResult& Result, class UObject* CustomData);
	void HelperAbortTaskInstance(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperAddLocalizedNews(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperAddNews(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperAddPlayerTag(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperAddUserVirtualCurrency(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperAddVirtualCurrencyTypes(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperBanUsers(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperCheckLimitedEditionItemAvailability(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperCreateActionsOnPlayersInSegmentTask(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperCreateCloudScriptTask(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperCreateInsightsScheduledScalingTask(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperCreateOpenIdConnection(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperCreatePlayerSharedSecret(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperCreatePlayerStatisticDefinition(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperCreateSegment(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeleteContent(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeleteMasterPlayerAccount(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeleteMembershipSubscription(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeleteOpenIdConnection(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeletePlayer(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeletePlayerSharedSecret(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeleteSegment(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeleteStore(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeleteTask(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeleteTitle(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeleteTitleDataOverride(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperExportMasterPlayerData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperExportPlayersInSegment(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetActionsOnPlayersInSegmentTaskInstance(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetAllSegments(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetCatalogItems(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetCloudScriptRevision(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetCloudScriptTaskInstance(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetCloudScriptVersions(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetContentList(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetContentUploadUrl(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetDataReport(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetMatchmakerGameInfo(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetMatchmakerGameModes(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayedTitleList(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayerIdFromAuthToken(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayerProfile(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayerSegments(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayerSharedSecrets(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayersInSegment(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayerStatisticDefinitions(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayerStatisticVersions(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayerTags(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPolicy(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPublisherData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetRandomResultTables(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetSegmentExport(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetSegments(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetStoreItems(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetTaskInstances(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetTasks(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetTitleData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetTitleInternalData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetUserAccountInfo(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetUserBans(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetUserData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetUserInternalData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetUserInventory(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetUserPublisherData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetUserPublisherInternalData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetUserPublisherReadOnlyData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetUserReadOnlyData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGrantItemsToUsers(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperIncrementLimitedEditionItemAvailability(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperIncrementPlayerStatisticVersion(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperListOpenIdConnection(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperListVirtualCurrencyTypes(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperModifyServerBuild(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRefundPurchase(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRemovePlayerTag(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRemoveVirtualCurrencyTypes(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperResetCharacterStatistics(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperResetPassword(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperResetUserStatistics(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperResolvePurchaseDispute(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRevokeAllBansForUser(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRevokeBans(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRevokeInventoryItem(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRevokeInventoryItems(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRunTask(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSendAccountRecoveryEmail(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSetCatalogItems(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSetMembershipOverride(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSetPlayerSecret(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSetPublishedRevision(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSetPublisherData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSetStoreItems(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSetTitleData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSetTitleDataAndOverrides(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSetTitleInternalData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSetupPushNotification(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSubtractUserVirtualCurrency(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateBans(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateCatalogItems(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateCloudScript(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateOpenIdConnection(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdatePlayerSharedSecret(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdatePlayerStatisticDefinition(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdatePolicy(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateRandomResultTables(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateSegment(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateStoreItems(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateTask(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateUserData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateUserInternalData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateUserPublisherData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateUserPublisherInternalData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateUserPublisherReadOnlyData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateUserReadOnlyData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateUserTitleDisplayName(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabAdminAPI">();
	}
	static class UPlayFabAdminAPI* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabAdminAPI>();
	}
};
static_assert(alignof(UPlayFabAdminAPI) == 0x000008, "Wrong alignment on UPlayFabAdminAPI");
static_assert(sizeof(UPlayFabAdminAPI) == 0x000820, "Wrong size on UPlayFabAdminAPI");
static_assert(offsetof(UPlayFabAdminAPI, OnPlayFabResponse) == 0x000030, "Member 'UPlayFabAdminAPI::OnPlayFabResponse' has a wrong offset!");
static_assert(offsetof(UPlayFabAdminAPI, CallAuthenticationContext) == 0x0007B8, "Member 'UPlayFabAdminAPI::CallAuthenticationContext' has a wrong offset!");
static_assert(offsetof(UPlayFabAdminAPI, RequestJsonObj) == 0x0007C0, "Member 'UPlayFabAdminAPI::RequestJsonObj' has a wrong offset!");
static_assert(offsetof(UPlayFabAdminAPI, ResponseJsonObj) == 0x0007C8, "Member 'UPlayFabAdminAPI::ResponseJsonObj' has a wrong offset!");

// Class PlayFab.PlayFabAdminModelDecoder
// 0x0000 (0x0028 - 0x0028)
class UPlayFabAdminModelDecoder final : public UBlueprintFunctionLibrary
{
public:
	static struct FAdminAddLocalizedNewsResult DecodeAddLocalizedNewsResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminAddNewsResult DecodeAddNewsResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminAddPlayerTagResult DecodeAddPlayerTagResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminBanUsersResult DecodeBanUsersResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminBlankResult DecodeBlankResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminCheckLimitedEditionItemAvailabilityResult DecodeCheckLimitedEditionItemAvailabilityResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminCreatePlayerSharedSecretResult DecodeCreatePlayerSharedSecretResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminCreatePlayerStatisticDefinitionResult DecodeCreatePlayerStatisticDefinitionResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminCreateSegmentResponse DecodeCreateSegmentResponseResponse(class UPlayFabJsonObject* Response);
	static struct FAdminCreateTaskResult DecodeCreateTaskResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminDeleteMasterPlayerAccountResult DecodeDeleteMasterPlayerAccountResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminDeleteMembershipSubscriptionResult DecodeDeleteMembershipSubscriptionResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminDeletePlayerResult DecodeDeletePlayerResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminDeletePlayerSharedSecretResult DecodeDeletePlayerSharedSecretResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminDeleteSegmentsResponse DecodeDeleteSegmentsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FAdminDeleteStoreResult DecodeDeleteStoreResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminDeleteTitleDataOverrideResult DecodeDeleteTitleDataOverrideResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminDeleteTitleResult DecodeDeleteTitleResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminEmptyResponse DecodeEmptyResponseResponse(class UPlayFabJsonObject* Response);
	static struct FAdminExportMasterPlayerDataResult DecodeExportMasterPlayerDataResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminExportPlayersInSegmentResult DecodeExportPlayersInSegmentResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetActionsOnPlayersInSegmentTaskInstanceResult DecodeGetActionsOnPlayersInSegmentTaskInstanceResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetAllSegmentsResult DecodeGetAllSegmentsResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetCatalogItemsResult DecodeGetCatalogItemsResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetCloudScriptRevisionResult DecodeGetCloudScriptRevisionResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetCloudScriptTaskInstanceResult DecodeGetCloudScriptTaskInstanceResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetCloudScriptVersionsResult DecodeGetCloudScriptVersionsResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetContentListResult DecodeGetContentListResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetContentUploadUrlResult DecodeGetContentUploadUrlResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetDataReportResult DecodeGetDataReportResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetMatchmakerGameInfoResult DecodeGetMatchmakerGameInfoResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetMatchmakerGameModesResult DecodeGetMatchmakerGameModesResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetPlayedTitleListResult DecodeGetPlayedTitleListResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetPlayerIdFromAuthTokenResult DecodeGetPlayerIdFromAuthTokenResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetPlayerProfileResult DecodeGetPlayerProfileResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetPlayerSegmentsResult DecodeGetPlayerSegmentsResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetPlayerSharedSecretsResult DecodeGetPlayerSharedSecretsResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetPlayersInSegmentExportResponse DecodeGetPlayersInSegmentExportResponseResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetPlayersInSegmentResult DecodeGetPlayersInSegmentResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetPlayerStatisticDefinitionsResult DecodeGetPlayerStatisticDefinitionsResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetPlayerStatisticVersionsResult DecodeGetPlayerStatisticVersionsResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetPlayerTagsResult DecodeGetPlayerTagsResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetPolicyResponse DecodeGetPolicyResponseResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetPublisherDataResult DecodeGetPublisherDataResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetRandomResultTablesResult DecodeGetRandomResultTablesResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetSegmentsResponse DecodeGetSegmentsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetStoreItemsResult DecodeGetStoreItemsResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetTaskInstancesResult DecodeGetTaskInstancesResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetTasksResult DecodeGetTasksResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetTitleDataResult DecodeGetTitleDataResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetUserBansResult DecodeGetUserBansResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetUserDataResult DecodeGetUserDataResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGetUserInventoryResult DecodeGetUserInventoryResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminGrantItemsToUsersResult DecodeGrantItemsToUsersResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminIncrementLimitedEditionItemAvailabilityResult DecodeIncrementLimitedEditionItemAvailabilityResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminIncrementPlayerStatisticVersionResult DecodeIncrementPlayerStatisticVersionResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminListOpenIdConnectionResponse DecodeListOpenIdConnectionResponseResponse(class UPlayFabJsonObject* Response);
	static struct FAdminListVirtualCurrencyTypesResult DecodeListVirtualCurrencyTypesResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminLookupUserAccountInfoResult DecodeLookupUserAccountInfoResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminModifyServerBuildResult DecodeModifyServerBuildResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminModifyUserVirtualCurrencyResult DecodeModifyUserVirtualCurrencyResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminRefundPurchaseResponse DecodeRefundPurchaseResponseResponse(class UPlayFabJsonObject* Response);
	static struct FAdminRemovePlayerTagResult DecodeRemovePlayerTagResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminResetCharacterStatisticsResult DecodeResetCharacterStatisticsResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminResetPasswordResult DecodeResetPasswordResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminResetUserStatisticsResult DecodeResetUserStatisticsResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminResolvePurchaseDisputeResponse DecodeResolvePurchaseDisputeResponseResponse(class UPlayFabJsonObject* Response);
	static struct FAdminRevokeAllBansForUserResult DecodeRevokeAllBansForUserResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminRevokeBansResult DecodeRevokeBansResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminRevokeInventoryItemsResult DecodeRevokeInventoryItemsResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminRevokeInventoryResult DecodeRevokeInventoryResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminRunTaskResult DecodeRunTaskResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminSendAccountRecoveryEmailResult DecodeSendAccountRecoveryEmailResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminSetMembershipOverrideResult DecodeSetMembershipOverrideResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminSetPlayerSecretResult DecodeSetPlayerSecretResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminSetPublishedRevisionResult DecodeSetPublishedRevisionResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminSetPublisherDataResult DecodeSetPublisherDataResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminSetTitleDataAndOverridesResult DecodeSetTitleDataAndOverridesResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminSetTitleDataResult DecodeSetTitleDataResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminSetupPushNotificationResult DecodeSetupPushNotificationResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminUpdateBansResult DecodeUpdateBansResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminUpdateCatalogItemsResult DecodeUpdateCatalogItemsResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminUpdateCloudScriptResult DecodeUpdateCloudScriptResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminUpdatePlayerSharedSecretResult DecodeUpdatePlayerSharedSecretResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminUpdatePlayerStatisticDefinitionResult DecodeUpdatePlayerStatisticDefinitionResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminUpdatePolicyResponse DecodeUpdatePolicyResponseResponse(class UPlayFabJsonObject* Response);
	static struct FAdminUpdateRandomResultTablesResult DecodeUpdateRandomResultTablesResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminUpdateSegmentResponse DecodeUpdateSegmentResponseResponse(class UPlayFabJsonObject* Response);
	static struct FAdminUpdateStoreItemsResult DecodeUpdateStoreItemsResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminUpdateUserDataResult DecodeUpdateUserDataResultResponse(class UPlayFabJsonObject* Response);
	static struct FAdminUpdateUserTitleDisplayNameResult DecodeUpdateUserTitleDisplayNameResultResponse(class UPlayFabJsonObject* Response);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabAdminModelDecoder">();
	}
	static class UPlayFabAdminModelDecoder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabAdminModelDecoder>();
	}
};
static_assert(alignof(UPlayFabAdminModelDecoder) == 0x000008, "Wrong alignment on UPlayFabAdminModelDecoder");
static_assert(sizeof(UPlayFabAdminModelDecoder) == 0x000028, "Wrong size on UPlayFabAdminModelDecoder");

// Class PlayFab.PlayFabAuthenticationAPI
// 0x0100 (0x0130 - 0x0030)
class UPlayFabAuthenticationAPI final : public UOnlineBlueprintCallProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnPlayFabResponse;                                 // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_22A6[0x88];                                    // 0x0040(0x0088)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayFabAuthenticationContext*          CallAuthenticationContext;                         // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayFabJsonObject*                     RequestJsonObj;                                    // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayFabJsonObject*                     ResponseJsonObj;                                   // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_22A7[0x50];                                    // 0x00E0(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UPlayFabAuthenticationAPI* AuthenticateGameServerWithCustomId(const struct FAuthenticationAuthenticateCustomIdRequest& Request, TDelegate<void(const struct FAuthenticationAuthenticateCustomIdResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAuthenticationAPI* Delete(const struct FAuthenticationDeleteRequest& Request, TDelegate<void(const struct FAuthenticationEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAuthenticationAPI* GetEntityToken(const struct FAuthenticationGetEntityTokenRequest& Request, TDelegate<void(const struct FAuthenticationGetEntityTokenResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabAuthenticationAPI* ValidateEntityToken(const struct FAuthenticationValidateEntityTokenRequest& Request, TDelegate<void(const struct FAuthenticationValidateEntityTokenResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);

	void DelegateOnFailurePlayFabError__DelegateSignature(const struct FPlayFabError& Error, class UObject* CustomData);
	void DelegateOnSuccessAuthenticateGameServerWithCustomId__DelegateSignature(const struct FAuthenticationAuthenticateCustomIdResult& Result, class UObject* CustomData);
	void DelegateOnSuccessDelete__DelegateSignature(const struct FAuthenticationEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetEntityToken__DelegateSignature(const struct FAuthenticationGetEntityTokenResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessValidateEntityToken__DelegateSignature(const struct FAuthenticationValidateEntityTokenResponse& Result, class UObject* CustomData);
	void HelperAuthenticateGameServerWithCustomId(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDelete(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetEntityToken(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperValidateEntityToken(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabAuthenticationAPI">();
	}
	static class UPlayFabAuthenticationAPI* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabAuthenticationAPI>();
	}
};
static_assert(alignof(UPlayFabAuthenticationAPI) == 0x000008, "Wrong alignment on UPlayFabAuthenticationAPI");
static_assert(sizeof(UPlayFabAuthenticationAPI) == 0x000130, "Wrong size on UPlayFabAuthenticationAPI");
static_assert(offsetof(UPlayFabAuthenticationAPI, OnPlayFabResponse) == 0x000030, "Member 'UPlayFabAuthenticationAPI::OnPlayFabResponse' has a wrong offset!");
static_assert(offsetof(UPlayFabAuthenticationAPI, CallAuthenticationContext) == 0x0000C8, "Member 'UPlayFabAuthenticationAPI::CallAuthenticationContext' has a wrong offset!");
static_assert(offsetof(UPlayFabAuthenticationAPI, RequestJsonObj) == 0x0000D0, "Member 'UPlayFabAuthenticationAPI::RequestJsonObj' has a wrong offset!");
static_assert(offsetof(UPlayFabAuthenticationAPI, ResponseJsonObj) == 0x0000D8, "Member 'UPlayFabAuthenticationAPI::ResponseJsonObj' has a wrong offset!");

// Class PlayFab.PlayFabAuthenticationModelDecoder
// 0x0000 (0x0028 - 0x0028)
class UPlayFabAuthenticationModelDecoder final : public UBlueprintFunctionLibrary
{
public:
	static struct FAuthenticationAuthenticateCustomIdResult DecodeAuthenticateCustomIdResultResponse(class UPlayFabJsonObject* Response);
	static struct FAuthenticationEmptyResponse DecodeEmptyResponseResponse(class UPlayFabJsonObject* Response);
	static struct FAuthenticationGetEntityTokenResponse DecodeGetEntityTokenResponseResponse(class UPlayFabJsonObject* Response);
	static struct FAuthenticationValidateEntityTokenResponse DecodeValidateEntityTokenResponseResponse(class UPlayFabJsonObject* Response);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabAuthenticationModelDecoder">();
	}
	static class UPlayFabAuthenticationModelDecoder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabAuthenticationModelDecoder>();
	}
};
static_assert(alignof(UPlayFabAuthenticationModelDecoder) == 0x000008, "Wrong alignment on UPlayFabAuthenticationModelDecoder");
static_assert(sizeof(UPlayFabAuthenticationModelDecoder) == 0x000028, "Wrong size on UPlayFabAuthenticationModelDecoder");

// Class PlayFab.PlayFabClientAPI
// 0x0B20 (0x0B50 - 0x0030)
class UPlayFabClientAPI final : public UOnlineBlueprintCallProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnPlayFabResponse;                                 // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_22AC[0xAA8];                                   // 0x0040(0x0AA8)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayFabAuthenticationContext*          CallAuthenticationContext;                         // 0x0AE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayFabJsonObject*                     RequestJsonObj;                                    // 0x0AF0(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayFabJsonObject*                     ResponseJsonObj;                                   // 0x0AF8(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_22AD[0x50];                                    // 0x0B00(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UPlayFabClientAPI* AcceptTrade(const struct FClientAcceptTradeRequest& Request, TDelegate<void(const struct FClientAcceptTradeResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* AddFriend(const struct FClientAddFriendRequest& Request, TDelegate<void(const struct FClientAddFriendResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* AddGenericID(const struct FClientAddGenericIDRequest& Request, TDelegate<void(const struct FClientAddGenericIDResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* AddOrUpdateContactEmail(const struct FClientAddOrUpdateContactEmailRequest& Request, TDelegate<void(const struct FClientAddOrUpdateContactEmailResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* AddSharedGroupMembers(const struct FClientAddSharedGroupMembersRequest& Request, TDelegate<void(const struct FClientAddSharedGroupMembersResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* AddUsernamePassword(const struct FClientAddUsernamePasswordRequest& Request, TDelegate<void(const struct FClientAddUsernamePasswordResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* AddUserVirtualCurrency(const struct FClientAddUserVirtualCurrencyRequest& Request, TDelegate<void(const struct FClientModifyUserVirtualCurrencyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* AndroidDevicePushNotificationRegistration(const struct FClientAndroidDevicePushNotificationRegistrationRequest& Request, TDelegate<void(const struct FClientAndroidDevicePushNotificationRegistrationResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* AttributeInstall(const struct FClientAttributeInstallRequest& Request, TDelegate<void(const struct FClientAttributeInstallResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* CancelTrade(const struct FClientCancelTradeRequest& Request, TDelegate<void(const struct FClientCancelTradeResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* ConfirmPurchase(const struct FClientConfirmPurchaseRequest& Request, TDelegate<void(const struct FClientConfirmPurchaseResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* ConsumeItem(const struct FClientConsumeItemRequest& Request, TDelegate<void(const struct FClientConsumeItemResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* ConsumeMicrosoftStoreEntitlements(const struct FClientConsumeMicrosoftStoreEntitlementsRequest& Request, TDelegate<void(const struct FClientConsumeMicrosoftStoreEntitlementsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* ConsumePS5Entitlements(const struct FClientConsumePS5EntitlementsRequest& Request, TDelegate<void(const struct FClientConsumePS5EntitlementsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* ConsumePSNEntitlements(const struct FClientConsumePSNEntitlementsRequest& Request, TDelegate<void(const struct FClientConsumePSNEntitlementsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* ConsumeXboxEntitlements(const struct FClientConsumeXboxEntitlementsRequest& Request, TDelegate<void(const struct FClientConsumeXboxEntitlementsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* CreateSharedGroup(const struct FClientCreateSharedGroupRequest& Request, TDelegate<void(const struct FClientCreateSharedGroupResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* ExecuteCloudScript(const struct FClientExecuteCloudScriptRequest& Request, TDelegate<void(const struct FClientExecuteCloudScriptResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetAccountInfo(const struct FClientGetAccountInfoRequest& Request, TDelegate<void(const struct FClientGetAccountInfoResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetAdPlacements(const struct FClientGetAdPlacementsRequest& Request, TDelegate<void(const struct FClientGetAdPlacementsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetAllUsersCharacters(const struct FClientListUsersCharactersRequest& Request, TDelegate<void(const struct FClientListUsersCharactersResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetCatalogItems(const struct FClientGetCatalogItemsRequest& Request, TDelegate<void(const struct FClientGetCatalogItemsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetCharacterData(const struct FClientGetCharacterDataRequest& Request, TDelegate<void(const struct FClientGetCharacterDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetCharacterInventory(const struct FClientGetCharacterInventoryRequest& Request, TDelegate<void(const struct FClientGetCharacterInventoryResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetCharacterLeaderboard(const struct FClientGetCharacterLeaderboardRequest& Request, TDelegate<void(const struct FClientGetCharacterLeaderboardResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetCharacterReadOnlyData(const struct FClientGetCharacterDataRequest& Request, TDelegate<void(const struct FClientGetCharacterDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetCharacterStatistics(const struct FClientGetCharacterStatisticsRequest& Request, TDelegate<void(const struct FClientGetCharacterStatisticsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetContentDownloadUrl(const struct FClientGetContentDownloadUrlRequest& Request, TDelegate<void(const struct FClientGetContentDownloadUrlResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetCurrentGames(const struct FClientCurrentGamesRequest& Request, TDelegate<void(const struct FClientCurrentGamesResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetFriendLeaderboard(const struct FClientGetFriendLeaderboardRequest& Request, TDelegate<void(const struct FClientGetLeaderboardResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetFriendLeaderboardAroundPlayer(const struct FClientGetFriendLeaderboardAroundPlayerRequest& Request, TDelegate<void(const struct FClientGetFriendLeaderboardAroundPlayerResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetFriendsList(const struct FClientGetFriendsListRequest& Request, TDelegate<void(const struct FClientGetFriendsListResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetGameServerRegions(const struct FClientGameServerRegionsRequest& Request, TDelegate<void(const struct FClientGameServerRegionsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetLeaderboard(const struct FClientGetLeaderboardRequest& Request, TDelegate<void(const struct FClientGetLeaderboardResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetLeaderboardAroundCharacter(const struct FClientGetLeaderboardAroundCharacterRequest& Request, TDelegate<void(const struct FClientGetLeaderboardAroundCharacterResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetLeaderboardAroundPlayer(const struct FClientGetLeaderboardAroundPlayerRequest& Request, TDelegate<void(const struct FClientGetLeaderboardAroundPlayerResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetLeaderboardForUserCharacters(const struct FClientGetLeaderboardForUsersCharactersRequest& Request, TDelegate<void(const struct FClientGetLeaderboardForUsersCharactersResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetPaymentToken(const struct FClientGetPaymentTokenRequest& Request, TDelegate<void(const struct FClientGetPaymentTokenResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetPhotonAuthenticationToken(const struct FClientGetPhotonAuthenticationTokenRequest& Request, TDelegate<void(const struct FClientGetPhotonAuthenticationTokenResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetPlayerCombinedInfo(const struct FClientGetPlayerCombinedInfoRequest& Request, TDelegate<void(const struct FClientGetPlayerCombinedInfoResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetPlayerProfile(const struct FClientGetPlayerProfileRequest& Request, TDelegate<void(const struct FClientGetPlayerProfileResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetPlayerSegments(const struct FClientGetPlayerSegmentsRequest& Request, TDelegate<void(const struct FClientGetPlayerSegmentsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetPlayerStatistics(const struct FClientGetPlayerStatisticsRequest& Request, TDelegate<void(const struct FClientGetPlayerStatisticsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetPlayerStatisticVersions(const struct FClientGetPlayerStatisticVersionsRequest& Request, TDelegate<void(const struct FClientGetPlayerStatisticVersionsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetPlayerTags(const struct FClientGetPlayerTagsRequest& Request, TDelegate<void(const struct FClientGetPlayerTagsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetPlayerTrades(const struct FClientGetPlayerTradesRequest& Request, TDelegate<void(const struct FClientGetPlayerTradesResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetPlayFabIDsFromFacebookIDs(const struct FClientGetPlayFabIDsFromFacebookIDsRequest& Request, TDelegate<void(const struct FClientGetPlayFabIDsFromFacebookIDsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetPlayFabIDsFromFacebookInstantGamesIds(const struct FClientGetPlayFabIDsFromFacebookInstantGamesIdsRequest& Request, TDelegate<void(const struct FClientGetPlayFabIDsFromFacebookInstantGamesIdsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetPlayFabIDsFromGameCenterIDs(const struct FClientGetPlayFabIDsFromGameCenterIDsRequest& Request, TDelegate<void(const struct FClientGetPlayFabIDsFromGameCenterIDsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetPlayFabIDsFromGenericIDs(const struct FClientGetPlayFabIDsFromGenericIDsRequest& Request, TDelegate<void(const struct FClientGetPlayFabIDsFromGenericIDsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetPlayFabIDsFromGoogleIDs(const struct FClientGetPlayFabIDsFromGoogleIDsRequest& Request, TDelegate<void(const struct FClientGetPlayFabIDsFromGoogleIDsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetPlayFabIDsFromGooglePlayGamesPlayerIDs(const struct FClientGetPlayFabIDsFromGooglePlayGamesPlayerIDsRequest& Request, TDelegate<void(const struct FClientGetPlayFabIDsFromGooglePlayGamesPlayerIDsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetPlayFabIDsFromKongregateIDs(const struct FClientGetPlayFabIDsFromKongregateIDsRequest& Request, TDelegate<void(const struct FClientGetPlayFabIDsFromKongregateIDsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetPlayFabIDsFromNintendoServiceAccountIds(const struct FClientGetPlayFabIDsFromNintendoServiceAccountIdsRequest& Request, TDelegate<void(const struct FClientGetPlayFabIDsFromNintendoServiceAccountIdsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetPlayFabIDsFromNintendoSwitchDeviceIds(const struct FClientGetPlayFabIDsFromNintendoSwitchDeviceIdsRequest& Request, TDelegate<void(const struct FClientGetPlayFabIDsFromNintendoSwitchDeviceIdsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetPlayFabIDsFromPSNAccountIDs(const struct FClientGetPlayFabIDsFromPSNAccountIDsRequest& Request, TDelegate<void(const struct FClientGetPlayFabIDsFromPSNAccountIDsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetPlayFabIDsFromSteamIDs(const struct FClientGetPlayFabIDsFromSteamIDsRequest& Request, TDelegate<void(const struct FClientGetPlayFabIDsFromSteamIDsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetPlayFabIDsFromTwitchIDs(const struct FClientGetPlayFabIDsFromTwitchIDsRequest& Request, TDelegate<void(const struct FClientGetPlayFabIDsFromTwitchIDsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetPlayFabIDsFromXboxLiveIDs(const struct FClientGetPlayFabIDsFromXboxLiveIDsRequest& Request, TDelegate<void(const struct FClientGetPlayFabIDsFromXboxLiveIDsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetPublisherData(const struct FClientGetPublisherDataRequest& Request, TDelegate<void(const struct FClientGetPublisherDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetPurchase(const struct FClientGetPurchaseRequest& Request, TDelegate<void(const struct FClientGetPurchaseResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetSharedGroupData(const struct FClientGetSharedGroupDataRequest& Request, TDelegate<void(const struct FClientGetSharedGroupDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetStoreItems(const struct FClientGetStoreItemsRequest& Request, TDelegate<void(const struct FClientGetStoreItemsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetTime(const struct FClientGetTimeRequest& Request, TDelegate<void(const struct FClientGetTimeResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetTitleData(const struct FClientGetTitleDataRequest& Request, TDelegate<void(const struct FClientGetTitleDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetTitleNews(const struct FClientGetTitleNewsRequest& Request, TDelegate<void(const struct FClientGetTitleNewsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetTitlePublicKey(const struct FClientGetTitlePublicKeyRequest& Request, TDelegate<void(const struct FClientGetTitlePublicKeyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetTradeStatus(const struct FClientGetTradeStatusRequest& Request, TDelegate<void(const struct FClientGetTradeStatusResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetUserData(const struct FClientGetUserDataRequest& Request, TDelegate<void(const struct FClientGetUserDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetUserInventory(const struct FClientGetUserInventoryRequest& Request, TDelegate<void(const struct FClientGetUserInventoryResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetUserPublisherData(const struct FClientGetUserDataRequest& Request, TDelegate<void(const struct FClientGetUserDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetUserPublisherReadOnlyData(const struct FClientGetUserDataRequest& Request, TDelegate<void(const struct FClientGetUserDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GetUserReadOnlyData(const struct FClientGetUserDataRequest& Request, TDelegate<void(const struct FClientGetUserDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* GrantCharacterToUser(const struct FClientGrantCharacterToUserRequest& Request, TDelegate<void(const struct FClientGrantCharacterToUserResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LinkAndroidDeviceID(const struct FClientLinkAndroidDeviceIDRequest& Request, TDelegate<void(const struct FClientLinkAndroidDeviceIDResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LinkApple(const struct FClientLinkAppleRequest& Request, TDelegate<void(const struct FClientEmptyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LinkCustomID(const struct FClientLinkCustomIDRequest& Request, TDelegate<void(const struct FClientLinkCustomIDResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LinkFacebookAccount(const struct FClientLinkFacebookAccountRequest& Request, TDelegate<void(const struct FClientLinkFacebookAccountResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LinkFacebookInstantGamesId(const struct FClientLinkFacebookInstantGamesIdRequest& Request, TDelegate<void(const struct FClientLinkFacebookInstantGamesIdResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LinkGameCenterAccount(const struct FClientLinkGameCenterAccountRequest& Request, TDelegate<void(const struct FClientLinkGameCenterAccountResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LinkGoogleAccount(const struct FClientLinkGoogleAccountRequest& Request, TDelegate<void(const struct FClientLinkGoogleAccountResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LinkGooglePlayGamesServicesAccount(const struct FClientLinkGooglePlayGamesServicesAccountRequest& Request, TDelegate<void(const struct FClientLinkGooglePlayGamesServicesAccountResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LinkIOSDeviceID(const struct FClientLinkIOSDeviceIDRequest& Request, TDelegate<void(const struct FClientLinkIOSDeviceIDResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LinkKongregate(const struct FClientLinkKongregateAccountRequest& Request, TDelegate<void(const struct FClientLinkKongregateAccountResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LinkNintendoServiceAccount(const struct FClientLinkNintendoServiceAccountRequest& Request, TDelegate<void(const struct FClientEmptyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LinkNintendoSwitchDeviceId(const struct FClientLinkNintendoSwitchDeviceIdRequest& Request, TDelegate<void(const struct FClientLinkNintendoSwitchDeviceIdResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LinkOpenIdConnect(const struct FClientLinkOpenIdConnectRequest& Request, TDelegate<void(const struct FClientEmptyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LinkPSNAccount(const struct FClientLinkPSNAccountRequest& Request, TDelegate<void(const struct FClientLinkPSNAccountResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LinkSteamAccount(const struct FClientLinkSteamAccountRequest& Request, TDelegate<void(const struct FClientLinkSteamAccountResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LinkTwitch(const struct FClientLinkTwitchAccountRequest& Request, TDelegate<void(const struct FClientLinkTwitchAccountResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LinkXboxAccount(const struct FClientLinkXboxAccountRequest& Request, TDelegate<void(const struct FClientLinkXboxAccountResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LoginWithAndroidDeviceID(const struct FClientLoginWithAndroidDeviceIDRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LoginWithApple(const struct FClientLoginWithAppleRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LoginWithCustomID(const struct FClientLoginWithCustomIDRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LoginWithEmailAddress(const struct FClientLoginWithEmailAddressRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LoginWithFacebook(const struct FClientLoginWithFacebookRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LoginWithFacebookInstantGamesId(const struct FClientLoginWithFacebookInstantGamesIdRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LoginWithGameCenter(const struct FClientLoginWithGameCenterRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LoginWithGoogleAccount(const struct FClientLoginWithGoogleAccountRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LoginWithGooglePlayGamesServices(const struct FClientLoginWithGooglePlayGamesServicesRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LoginWithIOSDeviceID(const struct FClientLoginWithIOSDeviceIDRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LoginWithKongregate(const struct FClientLoginWithKongregateRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LoginWithNintendoServiceAccount(const struct FClientLoginWithNintendoServiceAccountRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LoginWithNintendoSwitchDeviceId(const struct FClientLoginWithNintendoSwitchDeviceIdRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LoginWithOpenIdConnect(const struct FClientLoginWithOpenIdConnectRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LoginWithPlayFab(const struct FClientLoginWithPlayFabRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LoginWithPSN(const struct FClientLoginWithPSNRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LoginWithSteam(const struct FClientLoginWithSteamRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LoginWithTwitch(const struct FClientLoginWithTwitchRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* LoginWithXbox(const struct FClientLoginWithXboxRequest& Request, TDelegate<void(const struct FClientLoginResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* Matchmake(const struct FClientMatchmakeRequest& Request, TDelegate<void(const struct FClientMatchmakeResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* OpenTrade(const struct FClientOpenTradeRequest& Request, TDelegate<void(const struct FClientOpenTradeResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* PayForPurchase(const struct FClientPayForPurchaseRequest& Request, TDelegate<void(const struct FClientPayForPurchaseResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* PurchaseItem(const struct FClientPurchaseItemRequest& Request, TDelegate<void(const struct FClientPurchaseItemResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* RedeemCoupon(const struct FClientRedeemCouponRequest& Request, TDelegate<void(const struct FClientRedeemCouponResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* RefreshPSNAuthToken(const struct FClientRefreshPSNAuthTokenRequest& Request, TDelegate<void(const struct FClientEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* RegisterForIOSPushNotification(const struct FClientRegisterForIOSPushNotificationRequest& Request, TDelegate<void(const struct FClientRegisterForIOSPushNotificationResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* RegisterPlayFabUser(const struct FClientRegisterPlayFabUserRequest& Request, TDelegate<void(const struct FClientRegisterPlayFabUserResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* RemoveContactEmail(const struct FClientRemoveContactEmailRequest& Request, TDelegate<void(const struct FClientRemoveContactEmailResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* RemoveFriend(const struct FClientRemoveFriendRequest& Request, TDelegate<void(const struct FClientRemoveFriendResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* RemoveGenericID(const struct FClientRemoveGenericIDRequest& Request, TDelegate<void(const struct FClientRemoveGenericIDResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* RemoveSharedGroupMembers(const struct FClientRemoveSharedGroupMembersRequest& Request, TDelegate<void(const struct FClientRemoveSharedGroupMembersResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* ReportAdActivity(const struct FClientReportAdActivityRequest& Request, TDelegate<void(const struct FClientReportAdActivityResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* ReportDeviceInfo(const struct FClientDeviceInfoRequest& Request, TDelegate<void(const struct FClientEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* ReportPlayer(const struct FClientReportPlayerClientRequest& Request, TDelegate<void(const struct FClientReportPlayerClientResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* RestoreIOSPurchases(const struct FClientRestoreIOSPurchasesRequest& Request, TDelegate<void(const struct FClientRestoreIOSPurchasesResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* RewardAdActivity(const struct FClientRewardAdActivityRequest& Request, TDelegate<void(const struct FClientRewardAdActivityResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* SendAccountRecoveryEmail(const struct FClientSendAccountRecoveryEmailRequest& Request, TDelegate<void(const struct FClientSendAccountRecoveryEmailResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* SetFriendTags(const struct FClientSetFriendTagsRequest& Request, TDelegate<void(const struct FClientSetFriendTagsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* SetPlayerSecret(const struct FClientSetPlayerSecretRequest& Request, TDelegate<void(const struct FClientSetPlayerSecretResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* StartPurchase(const struct FClientStartPurchaseRequest& Request, TDelegate<void(const struct FClientStartPurchaseResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* SubtractUserVirtualCurrency(const struct FClientSubtractUserVirtualCurrencyRequest& Request, TDelegate<void(const struct FClientModifyUserVirtualCurrencyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* UnlinkAndroidDeviceID(const struct FClientUnlinkAndroidDeviceIDRequest& Request, TDelegate<void(const struct FClientUnlinkAndroidDeviceIDResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* UnlinkApple(const struct FClientUnlinkAppleRequest& Request, TDelegate<void(const struct FClientEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* UnlinkCustomID(const struct FClientUnlinkCustomIDRequest& Request, TDelegate<void(const struct FClientUnlinkCustomIDResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* UnlinkFacebookAccount(const struct FClientUnlinkFacebookAccountRequest& Request, TDelegate<void(const struct FClientUnlinkFacebookAccountResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* UnlinkFacebookInstantGamesId(const struct FClientUnlinkFacebookInstantGamesIdRequest& Request, TDelegate<void(const struct FClientUnlinkFacebookInstantGamesIdResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* UnlinkGameCenterAccount(const struct FClientUnlinkGameCenterAccountRequest& Request, TDelegate<void(const struct FClientUnlinkGameCenterAccountResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* UnlinkGoogleAccount(const struct FClientUnlinkGoogleAccountRequest& Request, TDelegate<void(const struct FClientUnlinkGoogleAccountResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* UnlinkGooglePlayGamesServicesAccount(const struct FClientUnlinkGooglePlayGamesServicesAccountRequest& Request, TDelegate<void(const struct FClientUnlinkGooglePlayGamesServicesAccountResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* UnlinkIOSDeviceID(const struct FClientUnlinkIOSDeviceIDRequest& Request, TDelegate<void(const struct FClientUnlinkIOSDeviceIDResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* UnlinkKongregate(const struct FClientUnlinkKongregateAccountRequest& Request, TDelegate<void(const struct FClientUnlinkKongregateAccountResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* UnlinkNintendoServiceAccount(const struct FClientUnlinkNintendoServiceAccountRequest& Request, TDelegate<void(const struct FClientEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* UnlinkNintendoSwitchDeviceId(const struct FClientUnlinkNintendoSwitchDeviceIdRequest& Request, TDelegate<void(const struct FClientUnlinkNintendoSwitchDeviceIdResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* UnlinkOpenIdConnect(const struct FClientUnlinkOpenIdConnectRequest& Request, TDelegate<void(const struct FClientEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* UnlinkPSNAccount(const struct FClientUnlinkPSNAccountRequest& Request, TDelegate<void(const struct FClientUnlinkPSNAccountResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* UnlinkSteamAccount(const struct FClientUnlinkSteamAccountRequest& Request, TDelegate<void(const struct FClientUnlinkSteamAccountResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* UnlinkTwitch(const struct FClientUnlinkTwitchAccountRequest& Request, TDelegate<void(const struct FClientUnlinkTwitchAccountResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* UnlinkXboxAccount(const struct FClientUnlinkXboxAccountRequest& Request, TDelegate<void(const struct FClientUnlinkXboxAccountResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* UnlockContainerInstance(const struct FClientUnlockContainerInstanceRequest& Request, TDelegate<void(const struct FClientUnlockContainerItemResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* UnlockContainerItem(const struct FClientUnlockContainerItemRequest& Request, TDelegate<void(const struct FClientUnlockContainerItemResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* UpdateAvatarUrl(const struct FClientUpdateAvatarUrlRequest& Request, TDelegate<void(const struct FClientEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* UpdateCharacterData(const struct FClientUpdateCharacterDataRequest& Request, TDelegate<void(const struct FClientUpdateCharacterDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* UpdateCharacterStatistics(const struct FClientUpdateCharacterStatisticsRequest& Request, TDelegate<void(const struct FClientUpdateCharacterStatisticsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* UpdatePlayerStatistics(const struct FClientUpdatePlayerStatisticsRequest& Request, TDelegate<void(const struct FClientUpdatePlayerStatisticsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* UpdateSharedGroupData(const struct FClientUpdateSharedGroupDataRequest& Request, TDelegate<void(const struct FClientUpdateSharedGroupDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* UpdateUserData(const struct FClientUpdateUserDataRequest& Request, TDelegate<void(const struct FClientUpdateUserDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* UpdateUserPublisherData(const struct FClientUpdateUserDataRequest& Request, TDelegate<void(const struct FClientUpdateUserDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* UpdateUserTitleDisplayName(const struct FClientUpdateUserTitleDisplayNameRequest& Request, TDelegate<void(const struct FClientUpdateUserTitleDisplayNameResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* ValidateAmazonIAPReceipt(const struct FClientValidateAmazonReceiptRequest& Request, TDelegate<void(const struct FClientValidateAmazonReceiptResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* ValidateGooglePlayPurchase(const struct FClientValidateGooglePlayPurchaseRequest& Request, TDelegate<void(const struct FClientValidateGooglePlayPurchaseResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* ValidateIOSReceipt(const struct FClientValidateIOSReceiptRequest& Request, TDelegate<void(const struct FClientValidateIOSReceiptResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* ValidateWindowsStoreReceipt(const struct FClientValidateWindowsReceiptRequest& Request, TDelegate<void(const struct FClientValidateWindowsReceiptResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* WriteCharacterEvent(const struct FClientWriteClientCharacterEventRequest& Request, TDelegate<void(const struct FClientWriteEventResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* WritePlayerEvent(const struct FClientWriteClientPlayerEventRequest& Request, TDelegate<void(const struct FClientWriteEventResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabClientAPI* WriteTitleEvent(const struct FClientWriteTitleEventRequest& Request, TDelegate<void(const struct FClientWriteEventResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);

	void DelegateOnFailurePlayFabError__DelegateSignature(const struct FPlayFabError& Error, class UObject* CustomData);
	void DelegateOnSuccessAcceptTrade__DelegateSignature(const struct FClientAcceptTradeResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessAddFriend__DelegateSignature(const struct FClientAddFriendResult& Result, class UObject* CustomData);
	void DelegateOnSuccessAddGenericID__DelegateSignature(const struct FClientAddGenericIDResult& Result, class UObject* CustomData);
	void DelegateOnSuccessAddOrUpdateContactEmail__DelegateSignature(const struct FClientAddOrUpdateContactEmailResult& Result, class UObject* CustomData);
	void DelegateOnSuccessAddSharedGroupMembers__DelegateSignature(const struct FClientAddSharedGroupMembersResult& Result, class UObject* CustomData);
	void DelegateOnSuccessAddUsernamePassword__DelegateSignature(const struct FClientAddUsernamePasswordResult& Result, class UObject* CustomData);
	void DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature(const struct FClientModifyUserVirtualCurrencyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessAndroidDevicePushNotificationRegistration__DelegateSignature(const struct FClientAndroidDevicePushNotificationRegistrationResult& Result, class UObject* CustomData);
	void DelegateOnSuccessAttributeInstall__DelegateSignature(const struct FClientAttributeInstallResult& Result, class UObject* CustomData);
	void DelegateOnSuccessCancelTrade__DelegateSignature(const struct FClientCancelTradeResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessConfirmPurchase__DelegateSignature(const struct FClientConfirmPurchaseResult& Result, class UObject* CustomData);
	void DelegateOnSuccessConsumeItem__DelegateSignature(const struct FClientConsumeItemResult& Result, class UObject* CustomData);
	void DelegateOnSuccessConsumeMicrosoftStoreEntitlements__DelegateSignature(const struct FClientConsumeMicrosoftStoreEntitlementsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessConsumePS5Entitlements__DelegateSignature(const struct FClientConsumePS5EntitlementsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessConsumePSNEntitlements__DelegateSignature(const struct FClientConsumePSNEntitlementsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessConsumeXboxEntitlements__DelegateSignature(const struct FClientConsumeXboxEntitlementsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessCreateSharedGroup__DelegateSignature(const struct FClientCreateSharedGroupResult& Result, class UObject* CustomData);
	void DelegateOnSuccessExecuteCloudScript__DelegateSignature(const struct FClientExecuteCloudScriptResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetAccountInfo__DelegateSignature(const struct FClientGetAccountInfoResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetAdPlacements__DelegateSignature(const struct FClientGetAdPlacementsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetAllUsersCharacters__DelegateSignature(const struct FClientListUsersCharactersResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetCatalogItems__DelegateSignature(const struct FClientGetCatalogItemsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetCharacterData__DelegateSignature(const struct FClientGetCharacterDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetCharacterInventory__DelegateSignature(const struct FClientGetCharacterInventoryResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetCharacterLeaderboard__DelegateSignature(const struct FClientGetCharacterLeaderboardResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetCharacterReadOnlyData__DelegateSignature(const struct FClientGetCharacterDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetCharacterStatistics__DelegateSignature(const struct FClientGetCharacterStatisticsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetContentDownloadUrl__DelegateSignature(const struct FClientGetContentDownloadUrlResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetCurrentGames__DelegateSignature(const struct FClientCurrentGamesResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetFriendLeaderboard__DelegateSignature(const struct FClientGetLeaderboardResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetFriendLeaderboardAroundPlayer__DelegateSignature(const struct FClientGetFriendLeaderboardAroundPlayerResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetFriendsList__DelegateSignature(const struct FClientGetFriendsListResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetGameServerRegions__DelegateSignature(const struct FClientGameServerRegionsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetLeaderboard__DelegateSignature(const struct FClientGetLeaderboardResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetLeaderboardAroundCharacter__DelegateSignature(const struct FClientGetLeaderboardAroundCharacterResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetLeaderboardAroundPlayer__DelegateSignature(const struct FClientGetLeaderboardAroundPlayerResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetLeaderboardForUserCharacters__DelegateSignature(const struct FClientGetLeaderboardForUsersCharactersResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPaymentToken__DelegateSignature(const struct FClientGetPaymentTokenResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPhotonAuthenticationToken__DelegateSignature(const struct FClientGetPhotonAuthenticationTokenResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayerCombinedInfo__DelegateSignature(const struct FClientGetPlayerCombinedInfoResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayerProfile__DelegateSignature(const struct FClientGetPlayerProfileResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayerSegments__DelegateSignature(const struct FClientGetPlayerSegmentsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayerStatistics__DelegateSignature(const struct FClientGetPlayerStatisticsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature(const struct FClientGetPlayerStatisticVersionsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayerTags__DelegateSignature(const struct FClientGetPlayerTagsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayerTrades__DelegateSignature(const struct FClientGetPlayerTradesResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayFabIDsFromFacebookIDs__DelegateSignature(const struct FClientGetPlayFabIDsFromFacebookIDsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayFabIDsFromFacebookInstantGamesIds__DelegateSignature(const struct FClientGetPlayFabIDsFromFacebookInstantGamesIdsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayFabIDsFromGameCenterIDs__DelegateSignature(const struct FClientGetPlayFabIDsFromGameCenterIDsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayFabIDsFromGenericIDs__DelegateSignature(const struct FClientGetPlayFabIDsFromGenericIDsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayFabIDsFromGoogleIDs__DelegateSignature(const struct FClientGetPlayFabIDsFromGoogleIDsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayFabIDsFromGooglePlayGamesPlayerIDs__DelegateSignature(const struct FClientGetPlayFabIDsFromGooglePlayGamesPlayerIDsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayFabIDsFromKongregateIDs__DelegateSignature(const struct FClientGetPlayFabIDsFromKongregateIDsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayFabIDsFromNintendoServiceAccountIds__DelegateSignature(const struct FClientGetPlayFabIDsFromNintendoServiceAccountIdsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayFabIDsFromNintendoSwitchDeviceIds__DelegateSignature(const struct FClientGetPlayFabIDsFromNintendoSwitchDeviceIdsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayFabIDsFromPSNAccountIDs__DelegateSignature(const struct FClientGetPlayFabIDsFromPSNAccountIDsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayFabIDsFromSteamIDs__DelegateSignature(const struct FClientGetPlayFabIDsFromSteamIDsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayFabIDsFromTwitchIDs__DelegateSignature(const struct FClientGetPlayFabIDsFromTwitchIDsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayFabIDsFromXboxLiveIDs__DelegateSignature(const struct FClientGetPlayFabIDsFromXboxLiveIDsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPublisherData__DelegateSignature(const struct FClientGetPublisherDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPurchase__DelegateSignature(const struct FClientGetPurchaseResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetSharedGroupData__DelegateSignature(const struct FClientGetSharedGroupDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetStoreItems__DelegateSignature(const struct FClientGetStoreItemsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetTime__DelegateSignature(const struct FClientGetTimeResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetTitleData__DelegateSignature(const struct FClientGetTitleDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetTitleNews__DelegateSignature(const struct FClientGetTitleNewsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetTitlePublicKey__DelegateSignature(const struct FClientGetTitlePublicKeyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetTradeStatus__DelegateSignature(const struct FClientGetTradeStatusResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetUserData__DelegateSignature(const struct FClientGetUserDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetUserInventory__DelegateSignature(const struct FClientGetUserInventoryResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetUserPublisherData__DelegateSignature(const struct FClientGetUserDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature(const struct FClientGetUserDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetUserReadOnlyData__DelegateSignature(const struct FClientGetUserDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGrantCharacterToUser__DelegateSignature(const struct FClientGrantCharacterToUserResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLinkAndroidDeviceID__DelegateSignature(const struct FClientLinkAndroidDeviceIDResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLinkApple__DelegateSignature(const struct FClientEmptyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLinkCustomID__DelegateSignature(const struct FClientLinkCustomIDResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLinkFacebookAccount__DelegateSignature(const struct FClientLinkFacebookAccountResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLinkFacebookInstantGamesId__DelegateSignature(const struct FClientLinkFacebookInstantGamesIdResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLinkGameCenterAccount__DelegateSignature(const struct FClientLinkGameCenterAccountResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLinkGoogleAccount__DelegateSignature(const struct FClientLinkGoogleAccountResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLinkGooglePlayGamesServicesAccount__DelegateSignature(const struct FClientLinkGooglePlayGamesServicesAccountResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLinkIOSDeviceID__DelegateSignature(const struct FClientLinkIOSDeviceIDResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLinkKongregate__DelegateSignature(const struct FClientLinkKongregateAccountResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLinkNintendoServiceAccount__DelegateSignature(const struct FClientEmptyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLinkNintendoSwitchDeviceId__DelegateSignature(const struct FClientLinkNintendoSwitchDeviceIdResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLinkOpenIdConnect__DelegateSignature(const struct FClientEmptyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLinkPSNAccount__DelegateSignature(const struct FClientLinkPSNAccountResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLinkSteamAccount__DelegateSignature(const struct FClientLinkSteamAccountResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLinkTwitch__DelegateSignature(const struct FClientLinkTwitchAccountResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLinkXboxAccount__DelegateSignature(const struct FClientLinkXboxAccountResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLoginWithAndroidDeviceID__DelegateSignature(const struct FClientLoginResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLoginWithApple__DelegateSignature(const struct FClientLoginResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLoginWithCustomID__DelegateSignature(const struct FClientLoginResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLoginWithEmailAddress__DelegateSignature(const struct FClientLoginResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLoginWithFacebook__DelegateSignature(const struct FClientLoginResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLoginWithFacebookInstantGamesId__DelegateSignature(const struct FClientLoginResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLoginWithGameCenter__DelegateSignature(const struct FClientLoginResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLoginWithGoogleAccount__DelegateSignature(const struct FClientLoginResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLoginWithGooglePlayGamesServices__DelegateSignature(const struct FClientLoginResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLoginWithIOSDeviceID__DelegateSignature(const struct FClientLoginResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLoginWithKongregate__DelegateSignature(const struct FClientLoginResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLoginWithNintendoServiceAccount__DelegateSignature(const struct FClientLoginResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLoginWithNintendoSwitchDeviceId__DelegateSignature(const struct FClientLoginResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLoginWithOpenIdConnect__DelegateSignature(const struct FClientLoginResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLoginWithPlayFab__DelegateSignature(const struct FClientLoginResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLoginWithPSN__DelegateSignature(const struct FClientLoginResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLoginWithSteam__DelegateSignature(const struct FClientLoginResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLoginWithTwitch__DelegateSignature(const struct FClientLoginResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLoginWithXbox__DelegateSignature(const struct FClientLoginResult& Result, class UObject* CustomData);
	void DelegateOnSuccessMatchmake__DelegateSignature(const struct FClientMatchmakeResult& Result, class UObject* CustomData);
	void DelegateOnSuccessOpenTrade__DelegateSignature(const struct FClientOpenTradeResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessPayForPurchase__DelegateSignature(const struct FClientPayForPurchaseResult& Result, class UObject* CustomData);
	void DelegateOnSuccessPurchaseItem__DelegateSignature(const struct FClientPurchaseItemResult& Result, class UObject* CustomData);
	void DelegateOnSuccessRedeemCoupon__DelegateSignature(const struct FClientRedeemCouponResult& Result, class UObject* CustomData);
	void DelegateOnSuccessRefreshPSNAuthToken__DelegateSignature(const struct FClientEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessRegisterForIOSPushNotification__DelegateSignature(const struct FClientRegisterForIOSPushNotificationResult& Result, class UObject* CustomData);
	void DelegateOnSuccessRegisterPlayFabUser__DelegateSignature(const struct FClientRegisterPlayFabUserResult& Result, class UObject* CustomData);
	void DelegateOnSuccessRemoveContactEmail__DelegateSignature(const struct FClientRemoveContactEmailResult& Result, class UObject* CustomData);
	void DelegateOnSuccessRemoveFriend__DelegateSignature(const struct FClientRemoveFriendResult& Result, class UObject* CustomData);
	void DelegateOnSuccessRemoveGenericID__DelegateSignature(const struct FClientRemoveGenericIDResult& Result, class UObject* CustomData);
	void DelegateOnSuccessRemoveSharedGroupMembers__DelegateSignature(const struct FClientRemoveSharedGroupMembersResult& Result, class UObject* CustomData);
	void DelegateOnSuccessReportAdActivity__DelegateSignature(const struct FClientReportAdActivityResult& Result, class UObject* CustomData);
	void DelegateOnSuccessReportDeviceInfo__DelegateSignature(const struct FClientEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessReportPlayer__DelegateSignature(const struct FClientReportPlayerClientResult& Result, class UObject* CustomData);
	void DelegateOnSuccessRestoreIOSPurchases__DelegateSignature(const struct FClientRestoreIOSPurchasesResult& Result, class UObject* CustomData);
	void DelegateOnSuccessRewardAdActivity__DelegateSignature(const struct FClientRewardAdActivityResult& Result, class UObject* CustomData);
	void DelegateOnSuccessSendAccountRecoveryEmail__DelegateSignature(const struct FClientSendAccountRecoveryEmailResult& Result, class UObject* CustomData);
	void DelegateOnSuccessSetFriendTags__DelegateSignature(const struct FClientSetFriendTagsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessSetPlayerSecret__DelegateSignature(const struct FClientSetPlayerSecretResult& Result, class UObject* CustomData);
	void DelegateOnSuccessStartPurchase__DelegateSignature(const struct FClientStartPurchaseResult& Result, class UObject* CustomData);
	void DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature(const struct FClientModifyUserVirtualCurrencyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUnlinkAndroidDeviceID__DelegateSignature(const struct FClientUnlinkAndroidDeviceIDResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUnlinkApple__DelegateSignature(const struct FClientEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessUnlinkCustomID__DelegateSignature(const struct FClientUnlinkCustomIDResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUnlinkFacebookAccount__DelegateSignature(const struct FClientUnlinkFacebookAccountResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUnlinkFacebookInstantGamesId__DelegateSignature(const struct FClientUnlinkFacebookInstantGamesIdResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUnlinkGameCenterAccount__DelegateSignature(const struct FClientUnlinkGameCenterAccountResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUnlinkGoogleAccount__DelegateSignature(const struct FClientUnlinkGoogleAccountResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUnlinkGooglePlayGamesServicesAccount__DelegateSignature(const struct FClientUnlinkGooglePlayGamesServicesAccountResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUnlinkIOSDeviceID__DelegateSignature(const struct FClientUnlinkIOSDeviceIDResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUnlinkKongregate__DelegateSignature(const struct FClientUnlinkKongregateAccountResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUnlinkNintendoServiceAccount__DelegateSignature(const struct FClientEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessUnlinkNintendoSwitchDeviceId__DelegateSignature(const struct FClientUnlinkNintendoSwitchDeviceIdResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUnlinkOpenIdConnect__DelegateSignature(const struct FClientEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessUnlinkPSNAccount__DelegateSignature(const struct FClientUnlinkPSNAccountResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUnlinkSteamAccount__DelegateSignature(const struct FClientUnlinkSteamAccountResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUnlinkTwitch__DelegateSignature(const struct FClientUnlinkTwitchAccountResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUnlinkXboxAccount__DelegateSignature(const struct FClientUnlinkXboxAccountResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUnlockContainerInstance__DelegateSignature(const struct FClientUnlockContainerItemResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUnlockContainerItem__DelegateSignature(const struct FClientUnlockContainerItemResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateAvatarUrl__DelegateSignature(const struct FClientEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateCharacterData__DelegateSignature(const struct FClientUpdateCharacterDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateCharacterStatistics__DelegateSignature(const struct FClientUpdateCharacterStatisticsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdatePlayerStatistics__DelegateSignature(const struct FClientUpdatePlayerStatisticsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateSharedGroupData__DelegateSignature(const struct FClientUpdateSharedGroupDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateUserData__DelegateSignature(const struct FClientUpdateUserDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateUserPublisherData__DelegateSignature(const struct FClientUpdateUserDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateUserTitleDisplayName__DelegateSignature(const struct FClientUpdateUserTitleDisplayNameResult& Result, class UObject* CustomData);
	void DelegateOnSuccessValidateAmazonIAPReceipt__DelegateSignature(const struct FClientValidateAmazonReceiptResult& Result, class UObject* CustomData);
	void DelegateOnSuccessValidateGooglePlayPurchase__DelegateSignature(const struct FClientValidateGooglePlayPurchaseResult& Result, class UObject* CustomData);
	void DelegateOnSuccessValidateIOSReceipt__DelegateSignature(const struct FClientValidateIOSReceiptResult& Result, class UObject* CustomData);
	void DelegateOnSuccessValidateWindowsStoreReceipt__DelegateSignature(const struct FClientValidateWindowsReceiptResult& Result, class UObject* CustomData);
	void DelegateOnSuccessWriteCharacterEvent__DelegateSignature(const struct FClientWriteEventResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessWritePlayerEvent__DelegateSignature(const struct FClientWriteEventResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessWriteTitleEvent__DelegateSignature(const struct FClientWriteEventResponse& Result, class UObject* CustomData);
	void HelperAcceptTrade(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperAddFriend(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperAddGenericID(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperAddOrUpdateContactEmail(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperAddSharedGroupMembers(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperAddUsernamePassword(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperAddUserVirtualCurrency(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperAndroidDevicePushNotificationRegistration(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperAttributeInstall(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperCancelTrade(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperConfirmPurchase(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperConsumeItem(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperConsumeMicrosoftStoreEntitlements(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperConsumePS5Entitlements(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperConsumePSNEntitlements(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperConsumeXboxEntitlements(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperCreateSharedGroup(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperExecuteCloudScript(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetAccountInfo(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetAdPlacements(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetAllUsersCharacters(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetCatalogItems(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetCharacterData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetCharacterInventory(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetCharacterLeaderboard(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetCharacterReadOnlyData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetCharacterStatistics(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetContentDownloadUrl(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetCurrentGames(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetFriendLeaderboard(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetFriendLeaderboardAroundPlayer(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetFriendsList(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetGameServerRegions(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetLeaderboard(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetLeaderboardAroundCharacter(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetLeaderboardAroundPlayer(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetLeaderboardForUserCharacters(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPaymentToken(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPhotonAuthenticationToken(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayerCombinedInfo(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayerProfile(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayerSegments(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayerStatistics(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayerStatisticVersions(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayerTags(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayerTrades(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayFabIDsFromFacebookIDs(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayFabIDsFromFacebookInstantGamesIds(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayFabIDsFromGameCenterIDs(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayFabIDsFromGenericIDs(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayFabIDsFromGoogleIDs(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayFabIDsFromGooglePlayGamesPlayerIDs(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayFabIDsFromKongregateIDs(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayFabIDsFromNintendoServiceAccountIds(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayFabIDsFromNintendoSwitchDeviceIds(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayFabIDsFromPSNAccountIDs(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayFabIDsFromSteamIDs(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayFabIDsFromTwitchIDs(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayFabIDsFromXboxLiveIDs(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPublisherData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPurchase(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetSharedGroupData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetStoreItems(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetTime(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetTitleData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetTitleNews(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetTitlePublicKey(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetTradeStatus(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetUserData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetUserInventory(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetUserPublisherData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetUserPublisherReadOnlyData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetUserReadOnlyData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGrantCharacterToUser(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLinkAndroidDeviceID(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLinkApple(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLinkCustomID(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLinkFacebookAccount(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLinkFacebookInstantGamesId(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLinkGameCenterAccount(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLinkGoogleAccount(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLinkGooglePlayGamesServicesAccount(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLinkIOSDeviceID(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLinkKongregate(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLinkNintendoServiceAccount(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLinkNintendoSwitchDeviceId(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLinkOpenIdConnect(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLinkPSNAccount(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLinkSteamAccount(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLinkTwitch(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLinkXboxAccount(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLoginWithAndroidDeviceID(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLoginWithApple(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLoginWithCustomID(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLoginWithEmailAddress(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLoginWithFacebook(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLoginWithFacebookInstantGamesId(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLoginWithGameCenter(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLoginWithGoogleAccount(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLoginWithGooglePlayGamesServices(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLoginWithIOSDeviceID(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLoginWithKongregate(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLoginWithNintendoServiceAccount(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLoginWithNintendoSwitchDeviceId(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLoginWithOpenIdConnect(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLoginWithPlayFab(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLoginWithPSN(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLoginWithSteam(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLoginWithTwitch(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLoginWithXbox(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperMatchmake(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperOpenTrade(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperPayForPurchase(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperPurchaseItem(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRedeemCoupon(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRefreshPSNAuthToken(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRegisterForIOSPushNotification(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRegisterPlayFabUser(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRemoveContactEmail(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRemoveFriend(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRemoveGenericID(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRemoveSharedGroupMembers(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperReportAdActivity(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperReportDeviceInfo(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperReportPlayer(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRestoreIOSPurchases(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRewardAdActivity(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSendAccountRecoveryEmail(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSetFriendTags(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSetPlayerSecret(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperStartPurchase(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSubtractUserVirtualCurrency(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUnlinkAndroidDeviceID(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUnlinkApple(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUnlinkCustomID(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUnlinkFacebookAccount(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUnlinkFacebookInstantGamesId(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUnlinkGameCenterAccount(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUnlinkGoogleAccount(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUnlinkGooglePlayGamesServicesAccount(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUnlinkIOSDeviceID(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUnlinkKongregate(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUnlinkNintendoServiceAccount(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUnlinkNintendoSwitchDeviceId(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUnlinkOpenIdConnect(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUnlinkPSNAccount(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUnlinkSteamAccount(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUnlinkTwitch(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUnlinkXboxAccount(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUnlockContainerInstance(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUnlockContainerItem(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateAvatarUrl(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateCharacterData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateCharacterStatistics(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdatePlayerStatistics(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateSharedGroupData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateUserData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateUserPublisherData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateUserTitleDisplayName(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperValidateAmazonIAPReceipt(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperValidateGooglePlayPurchase(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperValidateIOSReceipt(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperValidateWindowsStoreReceipt(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperWriteCharacterEvent(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperWritePlayerEvent(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperWriteTitleEvent(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabClientAPI">();
	}
	static class UPlayFabClientAPI* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabClientAPI>();
	}
};
static_assert(alignof(UPlayFabClientAPI) == 0x000008, "Wrong alignment on UPlayFabClientAPI");
static_assert(sizeof(UPlayFabClientAPI) == 0x000B50, "Wrong size on UPlayFabClientAPI");
static_assert(offsetof(UPlayFabClientAPI, OnPlayFabResponse) == 0x000030, "Member 'UPlayFabClientAPI::OnPlayFabResponse' has a wrong offset!");
static_assert(offsetof(UPlayFabClientAPI, CallAuthenticationContext) == 0x000AE8, "Member 'UPlayFabClientAPI::CallAuthenticationContext' has a wrong offset!");
static_assert(offsetof(UPlayFabClientAPI, RequestJsonObj) == 0x000AF0, "Member 'UPlayFabClientAPI::RequestJsonObj' has a wrong offset!");
static_assert(offsetof(UPlayFabClientAPI, ResponseJsonObj) == 0x000AF8, "Member 'UPlayFabClientAPI::ResponseJsonObj' has a wrong offset!");

// Class PlayFab.PlayFabClientModelDecoder
// 0x0000 (0x0028 - 0x0028)
class UPlayFabClientModelDecoder final : public UBlueprintFunctionLibrary
{
public:
	static struct FClientAcceptTradeResponse DecodeAcceptTradeResponseResponse(class UPlayFabJsonObject* Response);
	static struct FClientAddFriendResult DecodeAddFriendResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientAddGenericIDResult DecodeAddGenericIDResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientAddOrUpdateContactEmailResult DecodeAddOrUpdateContactEmailResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientAddSharedGroupMembersResult DecodeAddSharedGroupMembersResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientAddUsernamePasswordResult DecodeAddUsernamePasswordResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientAndroidDevicePushNotificationRegistrationResult DecodeAndroidDevicePushNotificationRegistrationResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientAttributeInstallResult DecodeAttributeInstallResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientCancelTradeResponse DecodeCancelTradeResponseResponse(class UPlayFabJsonObject* Response);
	static struct FClientConfirmPurchaseResult DecodeConfirmPurchaseResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientConsumeItemResult DecodeConsumeItemResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientConsumeMicrosoftStoreEntitlementsResponse DecodeConsumeMicrosoftStoreEntitlementsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FClientConsumePS5EntitlementsResult DecodeConsumePS5EntitlementsResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientConsumePSNEntitlementsResult DecodeConsumePSNEntitlementsResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientConsumeXboxEntitlementsResult DecodeConsumeXboxEntitlementsResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientCreateSharedGroupResult DecodeCreateSharedGroupResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientCurrentGamesResult DecodeCurrentGamesResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientEmptyResponse DecodeEmptyResponseResponse(class UPlayFabJsonObject* Response);
	static struct FClientEmptyResult DecodeEmptyResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientExecuteCloudScriptResult DecodeExecuteCloudScriptResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGameServerRegionsResult DecodeGameServerRegionsResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetAccountInfoResult DecodeGetAccountInfoResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetAdPlacementsResult DecodeGetAdPlacementsResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetCatalogItemsResult DecodeGetCatalogItemsResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetCharacterDataResult DecodeGetCharacterDataResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetCharacterInventoryResult DecodeGetCharacterInventoryResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetCharacterLeaderboardResult DecodeGetCharacterLeaderboardResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetCharacterStatisticsResult DecodeGetCharacterStatisticsResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetContentDownloadUrlResult DecodeGetContentDownloadUrlResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetFriendLeaderboardAroundPlayerResult DecodeGetFriendLeaderboardAroundPlayerResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetFriendsListResult DecodeGetFriendsListResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetLeaderboardAroundCharacterResult DecodeGetLeaderboardAroundCharacterResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetLeaderboardAroundPlayerResult DecodeGetLeaderboardAroundPlayerResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetLeaderboardForUsersCharactersResult DecodeGetLeaderboardForUsersCharactersResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetLeaderboardResult DecodeGetLeaderboardResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetPaymentTokenResult DecodeGetPaymentTokenResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetPhotonAuthenticationTokenResult DecodeGetPhotonAuthenticationTokenResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetPlayerCombinedInfoResult DecodeGetPlayerCombinedInfoResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetPlayerProfileResult DecodeGetPlayerProfileResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetPlayerSegmentsResult DecodeGetPlayerSegmentsResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetPlayerStatisticsResult DecodeGetPlayerStatisticsResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetPlayerStatisticVersionsResult DecodeGetPlayerStatisticVersionsResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetPlayerTagsResult DecodeGetPlayerTagsResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetPlayerTradesResponse DecodeGetPlayerTradesResponseResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetPlayFabIDsFromFacebookIDsResult DecodeGetPlayFabIDsFromFacebookIDsResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetPlayFabIDsFromFacebookInstantGamesIdsResult DecodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetPlayFabIDsFromGameCenterIDsResult DecodeGetPlayFabIDsFromGameCenterIDsResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetPlayFabIDsFromGenericIDsResult DecodeGetPlayFabIDsFromGenericIDsResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetPlayFabIDsFromGoogleIDsResult DecodeGetPlayFabIDsFromGoogleIDsResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetPlayFabIDsFromGooglePlayGamesPlayerIDsResult DecodeGetPlayFabIDsFromGooglePlayGamesPlayerIDsResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetPlayFabIDsFromKongregateIDsResult DecodeGetPlayFabIDsFromKongregateIDsResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetPlayFabIDsFromNintendoServiceAccountIdsResult DecodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetPlayFabIDsFromNintendoSwitchDeviceIdsResult DecodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetPlayFabIDsFromPSNAccountIDsResult DecodeGetPlayFabIDsFromPSNAccountIDsResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetPlayFabIDsFromSteamIDsResult DecodeGetPlayFabIDsFromSteamIDsResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetPlayFabIDsFromTwitchIDsResult DecodeGetPlayFabIDsFromTwitchIDsResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetPlayFabIDsFromXboxLiveIDsResult DecodeGetPlayFabIDsFromXboxLiveIDsResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetPublisherDataResult DecodeGetPublisherDataResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetPurchaseResult DecodeGetPurchaseResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetSharedGroupDataResult DecodeGetSharedGroupDataResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetStoreItemsResult DecodeGetStoreItemsResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetTimeResult DecodeGetTimeResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetTitleDataResult DecodeGetTitleDataResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetTitleNewsResult DecodeGetTitleNewsResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetTitlePublicKeyResult DecodeGetTitlePublicKeyResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetTradeStatusResponse DecodeGetTradeStatusResponseResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetUserDataResult DecodeGetUserDataResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGetUserInventoryResult DecodeGetUserInventoryResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientGrantCharacterToUserResult DecodeGrantCharacterToUserResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientLinkAndroidDeviceIDResult DecodeLinkAndroidDeviceIDResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientLinkCustomIDResult DecodeLinkCustomIDResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientLinkFacebookAccountResult DecodeLinkFacebookAccountResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientLinkFacebookInstantGamesIdResult DecodeLinkFacebookInstantGamesIdResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientLinkGameCenterAccountResult DecodeLinkGameCenterAccountResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientLinkGoogleAccountResult DecodeLinkGoogleAccountResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientLinkGooglePlayGamesServicesAccountResult DecodeLinkGooglePlayGamesServicesAccountResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientLinkIOSDeviceIDResult DecodeLinkIOSDeviceIDResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientLinkKongregateAccountResult DecodeLinkKongregateAccountResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientLinkNintendoSwitchDeviceIdResult DecodeLinkNintendoSwitchDeviceIdResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientLinkPSNAccountResult DecodeLinkPSNAccountResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientLinkSteamAccountResult DecodeLinkSteamAccountResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientLinkTwitchAccountResult DecodeLinkTwitchAccountResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientLinkXboxAccountResult DecodeLinkXboxAccountResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientListUsersCharactersResult DecodeListUsersCharactersResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientLoginResult DecodeLoginResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientMatchmakeResult DecodeMatchmakeResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientModifyUserVirtualCurrencyResult DecodeModifyUserVirtualCurrencyResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientOpenTradeResponse DecodeOpenTradeResponseResponse(class UPlayFabJsonObject* Response);
	static struct FClientPayForPurchaseResult DecodePayForPurchaseResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientPurchaseItemResult DecodePurchaseItemResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientRedeemCouponResult DecodeRedeemCouponResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientRegisterForIOSPushNotificationResult DecodeRegisterForIOSPushNotificationResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientRegisterPlayFabUserResult DecodeRegisterPlayFabUserResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientRemoveContactEmailResult DecodeRemoveContactEmailResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientRemoveFriendResult DecodeRemoveFriendResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientRemoveGenericIDResult DecodeRemoveGenericIDResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientRemoveSharedGroupMembersResult DecodeRemoveSharedGroupMembersResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientReportAdActivityResult DecodeReportAdActivityResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientReportPlayerClientResult DecodeReportPlayerClientResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientRestoreIOSPurchasesResult DecodeRestoreIOSPurchasesResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientRewardAdActivityResult DecodeRewardAdActivityResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientSendAccountRecoveryEmailResult DecodeSendAccountRecoveryEmailResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientSetFriendTagsResult DecodeSetFriendTagsResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientSetPlayerSecretResult DecodeSetPlayerSecretResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientStartPurchaseResult DecodeStartPurchaseResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientUnlinkAndroidDeviceIDResult DecodeUnlinkAndroidDeviceIDResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientUnlinkCustomIDResult DecodeUnlinkCustomIDResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientUnlinkFacebookAccountResult DecodeUnlinkFacebookAccountResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientUnlinkFacebookInstantGamesIdResult DecodeUnlinkFacebookInstantGamesIdResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientUnlinkGameCenterAccountResult DecodeUnlinkGameCenterAccountResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientUnlinkGoogleAccountResult DecodeUnlinkGoogleAccountResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientUnlinkGooglePlayGamesServicesAccountResult DecodeUnlinkGooglePlayGamesServicesAccountResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientUnlinkIOSDeviceIDResult DecodeUnlinkIOSDeviceIDResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientUnlinkKongregateAccountResult DecodeUnlinkKongregateAccountResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientUnlinkNintendoSwitchDeviceIdResult DecodeUnlinkNintendoSwitchDeviceIdResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientUnlinkPSNAccountResult DecodeUnlinkPSNAccountResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientUnlinkSteamAccountResult DecodeUnlinkSteamAccountResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientUnlinkTwitchAccountResult DecodeUnlinkTwitchAccountResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientUnlinkXboxAccountResult DecodeUnlinkXboxAccountResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientUnlockContainerItemResult DecodeUnlockContainerItemResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientUpdateCharacterDataResult DecodeUpdateCharacterDataResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientUpdateCharacterStatisticsResult DecodeUpdateCharacterStatisticsResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientUpdatePlayerStatisticsResult DecodeUpdatePlayerStatisticsResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientUpdateSharedGroupDataResult DecodeUpdateSharedGroupDataResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientUpdateUserDataResult DecodeUpdateUserDataResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientUpdateUserTitleDisplayNameResult DecodeUpdateUserTitleDisplayNameResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientValidateAmazonReceiptResult DecodeValidateAmazonReceiptResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientValidateGooglePlayPurchaseResult DecodeValidateGooglePlayPurchaseResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientValidateIOSReceiptResult DecodeValidateIOSReceiptResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientValidateWindowsReceiptResult DecodeValidateWindowsReceiptResultResponse(class UPlayFabJsonObject* Response);
	static struct FClientWriteEventResponse DecodeWriteEventResponseResponse(class UPlayFabJsonObject* Response);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabClientModelDecoder">();
	}
	static class UPlayFabClientModelDecoder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabClientModelDecoder>();
	}
};
static_assert(alignof(UPlayFabClientModelDecoder) == 0x000008, "Wrong alignment on UPlayFabClientModelDecoder");
static_assert(sizeof(UPlayFabClientModelDecoder) == 0x000028, "Wrong size on UPlayFabClientModelDecoder");

// Class PlayFab.PlayFabCloudScriptAPI
// 0x01A0 (0x01D0 - 0x0030)
class UPlayFabCloudScriptAPI final : public UOnlineBlueprintCallProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnPlayFabResponse;                                 // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_2354[0x128];                                   // 0x0040(0x0128)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayFabAuthenticationContext*          CallAuthenticationContext;                         // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayFabJsonObject*                     RequestJsonObj;                                    // 0x0170(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayFabJsonObject*                     ResponseJsonObj;                                   // 0x0178(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2355[0x50];                                    // 0x0180(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UPlayFabCloudScriptAPI* ExecuteEntityCloudScript(const struct FCloudScriptExecuteEntityCloudScriptRequest& Request, TDelegate<void(const struct FCloudScriptExecuteCloudScriptResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabCloudScriptAPI* ExecuteFunction(const struct FCloudScriptExecuteFunctionRequest& Request, TDelegate<void(const struct FCloudScriptExecuteFunctionResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabCloudScriptAPI* GetFunction(const struct FCloudScriptGetFunctionRequest& Request, TDelegate<void(const struct FCloudScriptGetFunctionResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabCloudScriptAPI* ListFunctions(const struct FCloudScriptListFunctionsRequest& Request, TDelegate<void(const struct FCloudScriptListFunctionsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabCloudScriptAPI* ListHttpFunctions(const struct FCloudScriptListFunctionsRequest& Request, TDelegate<void(const struct FCloudScriptListHttpFunctionsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabCloudScriptAPI* ListQueuedFunctions(const struct FCloudScriptListFunctionsRequest& Request, TDelegate<void(const struct FCloudScriptListQueuedFunctionsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabCloudScriptAPI* PostFunctionResultForEntityTriggeredAction(const struct FCloudScriptPostFunctionResultForEntityTriggeredActionRequest& Request, TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabCloudScriptAPI* PostFunctionResultForFunctionExecution(const struct FCloudScriptPostFunctionResultForFunctionExecutionRequest& Request, TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabCloudScriptAPI* PostFunctionResultForPlayerTriggeredAction(const struct FCloudScriptPostFunctionResultForPlayerTriggeredActionRequest& Request, TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabCloudScriptAPI* PostFunctionResultForScheduledTask(const struct FCloudScriptPostFunctionResultForScheduledTaskRequest& Request, TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabCloudScriptAPI* RegisterHttpFunction(const struct FCloudScriptRegisterHttpFunctionRequest& Request, TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabCloudScriptAPI* RegisterQueuedFunction(const struct FCloudScriptRegisterQueuedFunctionRequest& Request, TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabCloudScriptAPI* UnregisterFunction(const struct FCloudScriptUnregisterFunctionRequest& Request, TDelegate<void(const struct FCloudScriptEmptyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);

	void DelegateOnFailurePlayFabError__DelegateSignature(const struct FPlayFabError& Error, class UObject* CustomData);
	void DelegateOnSuccessExecuteEntityCloudScript__DelegateSignature(const struct FCloudScriptExecuteCloudScriptResult& Result, class UObject* CustomData);
	void DelegateOnSuccessExecuteFunction__DelegateSignature(const struct FCloudScriptExecuteFunctionResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetFunction__DelegateSignature(const struct FCloudScriptGetFunctionResult& Result, class UObject* CustomData);
	void DelegateOnSuccessListFunctions__DelegateSignature(const struct FCloudScriptListFunctionsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessListHttpFunctions__DelegateSignature(const struct FCloudScriptListHttpFunctionsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessListQueuedFunctions__DelegateSignature(const struct FCloudScriptListQueuedFunctionsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessPostFunctionResultForEntityTriggeredAction__DelegateSignature(const struct FCloudScriptEmptyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessPostFunctionResultForFunctionExecution__DelegateSignature(const struct FCloudScriptEmptyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessPostFunctionResultForPlayerTriggeredAction__DelegateSignature(const struct FCloudScriptEmptyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessPostFunctionResultForScheduledTask__DelegateSignature(const struct FCloudScriptEmptyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessRegisterHttpFunction__DelegateSignature(const struct FCloudScriptEmptyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessRegisterQueuedFunction__DelegateSignature(const struct FCloudScriptEmptyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUnregisterFunction__DelegateSignature(const struct FCloudScriptEmptyResult& Result, class UObject* CustomData);
	void HelperExecuteEntityCloudScript(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperExecuteFunction(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetFunction(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperListFunctions(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperListHttpFunctions(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperListQueuedFunctions(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperPostFunctionResultForEntityTriggeredAction(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperPostFunctionResultForFunctionExecution(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperPostFunctionResultForPlayerTriggeredAction(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperPostFunctionResultForScheduledTask(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRegisterHttpFunction(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRegisterQueuedFunction(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUnregisterFunction(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabCloudScriptAPI">();
	}
	static class UPlayFabCloudScriptAPI* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabCloudScriptAPI>();
	}
};
static_assert(alignof(UPlayFabCloudScriptAPI) == 0x000008, "Wrong alignment on UPlayFabCloudScriptAPI");
static_assert(sizeof(UPlayFabCloudScriptAPI) == 0x0001D0, "Wrong size on UPlayFabCloudScriptAPI");
static_assert(offsetof(UPlayFabCloudScriptAPI, OnPlayFabResponse) == 0x000030, "Member 'UPlayFabCloudScriptAPI::OnPlayFabResponse' has a wrong offset!");
static_assert(offsetof(UPlayFabCloudScriptAPI, CallAuthenticationContext) == 0x000168, "Member 'UPlayFabCloudScriptAPI::CallAuthenticationContext' has a wrong offset!");
static_assert(offsetof(UPlayFabCloudScriptAPI, RequestJsonObj) == 0x000170, "Member 'UPlayFabCloudScriptAPI::RequestJsonObj' has a wrong offset!");
static_assert(offsetof(UPlayFabCloudScriptAPI, ResponseJsonObj) == 0x000178, "Member 'UPlayFabCloudScriptAPI::ResponseJsonObj' has a wrong offset!");

// Class PlayFab.PlayFabCloudScriptModelDecoder
// 0x0000 (0x0028 - 0x0028)
class UPlayFabCloudScriptModelDecoder final : public UBlueprintFunctionLibrary
{
public:
	static struct FCloudScriptEmptyResult DecodeEmptyResultResponse(class UPlayFabJsonObject* Response);
	static struct FCloudScriptExecuteCloudScriptResult DecodeExecuteCloudScriptResultResponse(class UPlayFabJsonObject* Response);
	static struct FCloudScriptExecuteFunctionResult DecodeExecuteFunctionResultResponse(class UPlayFabJsonObject* Response);
	static struct FCloudScriptGetFunctionResult DecodeGetFunctionResultResponse(class UPlayFabJsonObject* Response);
	static struct FCloudScriptListFunctionsResult DecodeListFunctionsResultResponse(class UPlayFabJsonObject* Response);
	static struct FCloudScriptListHttpFunctionsResult DecodeListHttpFunctionsResultResponse(class UPlayFabJsonObject* Response);
	static struct FCloudScriptListQueuedFunctionsResult DecodeListQueuedFunctionsResultResponse(class UPlayFabJsonObject* Response);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabCloudScriptModelDecoder">();
	}
	static class UPlayFabCloudScriptModelDecoder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabCloudScriptModelDecoder>();
	}
};
static_assert(alignof(UPlayFabCloudScriptModelDecoder) == 0x000008, "Wrong alignment on UPlayFabCloudScriptModelDecoder");
static_assert(sizeof(UPlayFabCloudScriptModelDecoder) == 0x000028, "Wrong size on UPlayFabCloudScriptModelDecoder");

// Class PlayFab.PlayFabDataAPI
// 0x0130 (0x0160 - 0x0030)
class UPlayFabDataAPI final : public UOnlineBlueprintCallProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnPlayFabResponse;                                 // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_2363[0xB8];                                    // 0x0040(0x00B8)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayFabAuthenticationContext*          CallAuthenticationContext;                         // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayFabJsonObject*                     RequestJsonObj;                                    // 0x0100(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayFabJsonObject*                     ResponseJsonObj;                                   // 0x0108(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2364[0x50];                                    // 0x0110(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UPlayFabDataAPI* AbortFileUploads(const struct FDataAbortFileUploadsRequest& Request, TDelegate<void(const struct FDataAbortFileUploadsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabDataAPI* DeleteFiles(const struct FDataDeleteFilesRequest& Request, TDelegate<void(const struct FDataDeleteFilesResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabDataAPI* FinalizeFileUploads(const struct FDataFinalizeFileUploadsRequest& Request, TDelegate<void(const struct FDataFinalizeFileUploadsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabDataAPI* GetFiles(const struct FDataGetFilesRequest& Request, TDelegate<void(const struct FDataGetFilesResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabDataAPI* GetObjects(const struct FDataGetObjectsRequest& Request, TDelegate<void(const struct FDataGetObjectsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabDataAPI* InitiateFileUploads(const struct FDataInitiateFileUploadsRequest& Request, TDelegate<void(const struct FDataInitiateFileUploadsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabDataAPI* SetObjects(const struct FDataSetObjectsRequest& Request, TDelegate<void(const struct FDataSetObjectsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);

	void DelegateOnFailurePlayFabError__DelegateSignature(const struct FPlayFabError& Error, class UObject* CustomData);
	void DelegateOnSuccessAbortFileUploads__DelegateSignature(const struct FDataAbortFileUploadsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessDeleteFiles__DelegateSignature(const struct FDataDeleteFilesResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessFinalizeFileUploads__DelegateSignature(const struct FDataFinalizeFileUploadsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetFiles__DelegateSignature(const struct FDataGetFilesResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetObjects__DelegateSignature(const struct FDataGetObjectsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessInitiateFileUploads__DelegateSignature(const struct FDataInitiateFileUploadsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessSetObjects__DelegateSignature(const struct FDataSetObjectsResponse& Result, class UObject* CustomData);
	void HelperAbortFileUploads(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeleteFiles(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperFinalizeFileUploads(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetFiles(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetObjects(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperInitiateFileUploads(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSetObjects(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabDataAPI">();
	}
	static class UPlayFabDataAPI* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabDataAPI>();
	}
};
static_assert(alignof(UPlayFabDataAPI) == 0x000008, "Wrong alignment on UPlayFabDataAPI");
static_assert(sizeof(UPlayFabDataAPI) == 0x000160, "Wrong size on UPlayFabDataAPI");
static_assert(offsetof(UPlayFabDataAPI, OnPlayFabResponse) == 0x000030, "Member 'UPlayFabDataAPI::OnPlayFabResponse' has a wrong offset!");
static_assert(offsetof(UPlayFabDataAPI, CallAuthenticationContext) == 0x0000F8, "Member 'UPlayFabDataAPI::CallAuthenticationContext' has a wrong offset!");
static_assert(offsetof(UPlayFabDataAPI, RequestJsonObj) == 0x000100, "Member 'UPlayFabDataAPI::RequestJsonObj' has a wrong offset!");
static_assert(offsetof(UPlayFabDataAPI, ResponseJsonObj) == 0x000108, "Member 'UPlayFabDataAPI::ResponseJsonObj' has a wrong offset!");

// Class PlayFab.PlayFabDataModelDecoder
// 0x0000 (0x0028 - 0x0028)
class UPlayFabDataModelDecoder final : public UBlueprintFunctionLibrary
{
public:
	static struct FDataAbortFileUploadsResponse DecodeAbortFileUploadsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FDataDeleteFilesResponse DecodeDeleteFilesResponseResponse(class UPlayFabJsonObject* Response);
	static struct FDataFinalizeFileUploadsResponse DecodeFinalizeFileUploadsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FDataGetFilesResponse DecodeGetFilesResponseResponse(class UPlayFabJsonObject* Response);
	static struct FDataGetObjectsResponse DecodeGetObjectsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FDataInitiateFileUploadsResponse DecodeInitiateFileUploadsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FDataSetObjectsResponse DecodeSetObjectsResponseResponse(class UPlayFabJsonObject* Response);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabDataModelDecoder">();
	}
	static class UPlayFabDataModelDecoder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabDataModelDecoder>();
	}
};
static_assert(alignof(UPlayFabDataModelDecoder) == 0x000008, "Wrong alignment on UPlayFabDataModelDecoder");
static_assert(sizeof(UPlayFabDataModelDecoder) == 0x000028, "Wrong size on UPlayFabDataModelDecoder");

// Class PlayFab.PlayFabEconomyAPI
// 0x0380 (0x03B0 - 0x0030)
class UPlayFabEconomyAPI final : public UOnlineBlueprintCallProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnPlayFabResponse;                                 // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_236C[0x308];                                   // 0x0040(0x0308)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayFabAuthenticationContext*          CallAuthenticationContext;                         // 0x0348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayFabJsonObject*                     RequestJsonObj;                                    // 0x0350(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayFabJsonObject*                     ResponseJsonObj;                                   // 0x0358(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_236D[0x50];                                    // 0x0360(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UPlayFabEconomyAPI* AddInventoryItems(const struct FEconomyAddInventoryItemsRequest& Request, TDelegate<void(const struct FEconomyAddInventoryItemsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* CreateDraftItem(const struct FEconomyCreateDraftItemRequest& Request, TDelegate<void(const struct FEconomyCreateDraftItemResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* CreateUploadUrls(const struct FEconomyCreateUploadUrlsRequest& Request, TDelegate<void(const struct FEconomyCreateUploadUrlsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* DeleteEntityItemReviews(const struct FEconomyDeleteEntityItemReviewsRequest& Request, TDelegate<void(const struct FEconomyDeleteEntityItemReviewsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* DeleteInventoryCollection(const struct FEconomyDeleteInventoryCollectionRequest& Request, TDelegate<void(const struct FEconomyDeleteInventoryCollectionResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* DeleteInventoryItems(const struct FEconomyDeleteInventoryItemsRequest& Request, TDelegate<void(const struct FEconomyDeleteInventoryItemsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* DeleteItem(const struct FEconomyDeleteItemRequest& Request, TDelegate<void(const struct FEconomyDeleteItemResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* ExecuteInventoryOperations(const struct FEconomyExecuteInventoryOperationsRequest& Request, TDelegate<void(const struct FEconomyExecuteInventoryOperationsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* GetCatalogConfig(const struct FEconomyGetCatalogConfigRequest& Request, TDelegate<void(const struct FEconomyGetCatalogConfigResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* GetDraftItem(const struct FEconomyGetDraftItemRequest& Request, TDelegate<void(const struct FEconomyGetDraftItemResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* GetDraftItems(const struct FEconomyGetDraftItemsRequest& Request, TDelegate<void(const struct FEconomyGetDraftItemsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* GetEntityDraftItems(const struct FEconomyGetEntityDraftItemsRequest& Request, TDelegate<void(const struct FEconomyGetEntityDraftItemsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* GetEntityItemReview(const struct FEconomyGetEntityItemReviewRequest& Request, TDelegate<void(const struct FEconomyGetEntityItemReviewResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* GetInventoryCollectionIds(const struct FEconomyGetInventoryCollectionIdsRequest& Request, TDelegate<void(const struct FEconomyGetInventoryCollectionIdsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* GetInventoryItems(const struct FEconomyGetInventoryItemsRequest& Request, TDelegate<void(const struct FEconomyGetInventoryItemsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* GetItem(const struct FEconomyGetItemRequest& Request, TDelegate<void(const struct FEconomyGetItemResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* GetItemContainers(const struct FEconomyGetItemContainersRequest& Request, TDelegate<void(const struct FEconomyGetItemContainersResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* GetItemModerationState(const struct FEconomyGetItemModerationStateRequest& Request, TDelegate<void(const struct FEconomyGetItemModerationStateResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* GetItemPublishStatus(const struct FEconomyGetItemPublishStatusRequest& Request, TDelegate<void(const struct FEconomyGetItemPublishStatusResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* GetItemReviews(const struct FEconomyGetItemReviewsRequest& Request, TDelegate<void(const struct FEconomyGetItemReviewsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* GetItemReviewSummary(const struct FEconomyGetItemReviewSummaryRequest& Request, TDelegate<void(const struct FEconomyGetItemReviewSummaryResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* GetItems(const struct FEconomyGetItemsRequest& Request, TDelegate<void(const struct FEconomyGetItemsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* GetMicrosoftStoreAccessTokens(const struct FEconomyGetMicrosoftStoreAccessTokensRequest& Request, TDelegate<void(const struct FEconomyGetMicrosoftStoreAccessTokensResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* GetTransactionHistory(const struct FEconomyGetTransactionHistoryRequest& Request, TDelegate<void(const struct FEconomyGetTransactionHistoryResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* PublishDraftItem(const struct FEconomyPublishDraftItemRequest& Request, TDelegate<void(const struct FEconomyPublishDraftItemResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* PurchaseInventoryItems(const struct FEconomyPurchaseInventoryItemsRequest& Request, TDelegate<void(const struct FEconomyPurchaseInventoryItemsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* RedeemAppleAppStoreInventoryItems(const struct FEconomyRedeemAppleAppStoreInventoryItemsRequest& Request, TDelegate<void(const struct FEconomyRedeemAppleAppStoreInventoryItemsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* RedeemGooglePlayInventoryItems(const struct FEconomyRedeemGooglePlayInventoryItemsRequest& Request, TDelegate<void(const struct FEconomyRedeemGooglePlayInventoryItemsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* RedeemMicrosoftStoreInventoryItems(const struct FEconomyRedeemMicrosoftStoreInventoryItemsRequest& Request, TDelegate<void(const struct FEconomyRedeemMicrosoftStoreInventoryItemsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* RedeemNintendoEShopInventoryItems(const struct FEconomyRedeemNintendoEShopInventoryItemsRequest& Request, TDelegate<void(const struct FEconomyRedeemNintendoEShopInventoryItemsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* RedeemPlayStationStoreInventoryItems(const struct FEconomyRedeemPlayStationStoreInventoryItemsRequest& Request, TDelegate<void(const struct FEconomyRedeemPlayStationStoreInventoryItemsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* RedeemSteamInventoryItems(const struct FEconomyRedeemSteamInventoryItemsRequest& Request, TDelegate<void(const struct FEconomyRedeemSteamInventoryItemsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* ReportItem(const struct FEconomyReportItemRequest& Request, TDelegate<void(const struct FEconomyReportItemResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* ReportItemReview(const struct FEconomyReportItemReviewRequest& Request, TDelegate<void(const struct FEconomyReportItemReviewResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* ReviewItem(const struct FEconomyReviewItemRequest& Request, TDelegate<void(const struct FEconomyReviewItemResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* SearchItems(const struct FEconomySearchItemsRequest& Request, TDelegate<void(const struct FEconomySearchItemsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* SetItemModerationState(const struct FEconomySetItemModerationStateRequest& Request, TDelegate<void(const struct FEconomySetItemModerationStateResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* SubmitItemReviewVote(const struct FEconomySubmitItemReviewVoteRequest& Request, TDelegate<void(const struct FEconomySubmitItemReviewVoteResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* SubtractInventoryItems(const struct FEconomySubtractInventoryItemsRequest& Request, TDelegate<void(const struct FEconomySubtractInventoryItemsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* TakedownItemReviews(const struct FEconomyTakedownItemReviewsRequest& Request, TDelegate<void(const struct FEconomyTakedownItemReviewsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* TransferInventoryItems(const struct FEconomyTransferInventoryItemsRequest& Request, TDelegate<void(const struct FEconomyTransferInventoryItemsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* UpdateCatalogConfig(const struct FEconomyUpdateCatalogConfigRequest& Request, TDelegate<void(const struct FEconomyUpdateCatalogConfigResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* UpdateDraftItem(const struct FEconomyUpdateDraftItemRequest& Request, TDelegate<void(const struct FEconomyUpdateDraftItemResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEconomyAPI* UpdateInventoryItems(const struct FEconomyUpdateInventoryItemsRequest& Request, TDelegate<void(const struct FEconomyUpdateInventoryItemsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);

	void DelegateOnFailurePlayFabError__DelegateSignature(const struct FPlayFabError& Error, class UObject* CustomData);
	void DelegateOnSuccessAddInventoryItems__DelegateSignature(const struct FEconomyAddInventoryItemsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessCreateDraftItem__DelegateSignature(const struct FEconomyCreateDraftItemResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessCreateUploadUrls__DelegateSignature(const struct FEconomyCreateUploadUrlsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessDeleteEntityItemReviews__DelegateSignature(const struct FEconomyDeleteEntityItemReviewsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessDeleteInventoryCollection__DelegateSignature(const struct FEconomyDeleteInventoryCollectionResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessDeleteInventoryItems__DelegateSignature(const struct FEconomyDeleteInventoryItemsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessDeleteItem__DelegateSignature(const struct FEconomyDeleteItemResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessExecuteInventoryOperations__DelegateSignature(const struct FEconomyExecuteInventoryOperationsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetCatalogConfig__DelegateSignature(const struct FEconomyGetCatalogConfigResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetDraftItem__DelegateSignature(const struct FEconomyGetDraftItemResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetDraftItems__DelegateSignature(const struct FEconomyGetDraftItemsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetEntityDraftItems__DelegateSignature(const struct FEconomyGetEntityDraftItemsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetEntityItemReview__DelegateSignature(const struct FEconomyGetEntityItemReviewResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetInventoryCollectionIds__DelegateSignature(const struct FEconomyGetInventoryCollectionIdsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetInventoryItems__DelegateSignature(const struct FEconomyGetInventoryItemsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetItem__DelegateSignature(const struct FEconomyGetItemResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetItemContainers__DelegateSignature(const struct FEconomyGetItemContainersResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetItemModerationState__DelegateSignature(const struct FEconomyGetItemModerationStateResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetItemPublishStatus__DelegateSignature(const struct FEconomyGetItemPublishStatusResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetItemReviews__DelegateSignature(const struct FEconomyGetItemReviewsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetItemReviewSummary__DelegateSignature(const struct FEconomyGetItemReviewSummaryResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetItems__DelegateSignature(const struct FEconomyGetItemsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetMicrosoftStoreAccessTokens__DelegateSignature(const struct FEconomyGetMicrosoftStoreAccessTokensResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetTransactionHistory__DelegateSignature(const struct FEconomyGetTransactionHistoryResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessPublishDraftItem__DelegateSignature(const struct FEconomyPublishDraftItemResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessPurchaseInventoryItems__DelegateSignature(const struct FEconomyPurchaseInventoryItemsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessRedeemAppleAppStoreInventoryItems__DelegateSignature(const struct FEconomyRedeemAppleAppStoreInventoryItemsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessRedeemGooglePlayInventoryItems__DelegateSignature(const struct FEconomyRedeemGooglePlayInventoryItemsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessRedeemMicrosoftStoreInventoryItems__DelegateSignature(const struct FEconomyRedeemMicrosoftStoreInventoryItemsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessRedeemNintendoEShopInventoryItems__DelegateSignature(const struct FEconomyRedeemNintendoEShopInventoryItemsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessRedeemPlayStationStoreInventoryItems__DelegateSignature(const struct FEconomyRedeemPlayStationStoreInventoryItemsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessRedeemSteamInventoryItems__DelegateSignature(const struct FEconomyRedeemSteamInventoryItemsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessReportItem__DelegateSignature(const struct FEconomyReportItemResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessReportItemReview__DelegateSignature(const struct FEconomyReportItemReviewResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessReviewItem__DelegateSignature(const struct FEconomyReviewItemResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessSearchItems__DelegateSignature(const struct FEconomySearchItemsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessSetItemModerationState__DelegateSignature(const struct FEconomySetItemModerationStateResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessSubmitItemReviewVote__DelegateSignature(const struct FEconomySubmitItemReviewVoteResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessSubtractInventoryItems__DelegateSignature(const struct FEconomySubtractInventoryItemsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessTakedownItemReviews__DelegateSignature(const struct FEconomyTakedownItemReviewsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessTransferInventoryItems__DelegateSignature(const struct FEconomyTransferInventoryItemsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateCatalogConfig__DelegateSignature(const struct FEconomyUpdateCatalogConfigResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateDraftItem__DelegateSignature(const struct FEconomyUpdateDraftItemResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateInventoryItems__DelegateSignature(const struct FEconomyUpdateInventoryItemsResponse& Result, class UObject* CustomData);
	void HelperAddInventoryItems(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperCreateDraftItem(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperCreateUploadUrls(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeleteEntityItemReviews(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeleteInventoryCollection(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeleteInventoryItems(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeleteItem(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperExecuteInventoryOperations(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetCatalogConfig(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetDraftItem(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetDraftItems(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetEntityDraftItems(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetEntityItemReview(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetInventoryCollectionIds(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetInventoryItems(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetItem(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetItemContainers(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetItemModerationState(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetItemPublishStatus(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetItemReviews(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetItemReviewSummary(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetItems(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetMicrosoftStoreAccessTokens(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetTransactionHistory(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperPublishDraftItem(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperPurchaseInventoryItems(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRedeemAppleAppStoreInventoryItems(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRedeemGooglePlayInventoryItems(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRedeemMicrosoftStoreInventoryItems(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRedeemNintendoEShopInventoryItems(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRedeemPlayStationStoreInventoryItems(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRedeemSteamInventoryItems(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperReportItem(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperReportItemReview(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperReviewItem(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSearchItems(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSetItemModerationState(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSubmitItemReviewVote(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSubtractInventoryItems(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperTakedownItemReviews(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperTransferInventoryItems(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateCatalogConfig(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateDraftItem(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateInventoryItems(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabEconomyAPI">();
	}
	static class UPlayFabEconomyAPI* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabEconomyAPI>();
	}
};
static_assert(alignof(UPlayFabEconomyAPI) == 0x000008, "Wrong alignment on UPlayFabEconomyAPI");
static_assert(sizeof(UPlayFabEconomyAPI) == 0x0003B0, "Wrong size on UPlayFabEconomyAPI");
static_assert(offsetof(UPlayFabEconomyAPI, OnPlayFabResponse) == 0x000030, "Member 'UPlayFabEconomyAPI::OnPlayFabResponse' has a wrong offset!");
static_assert(offsetof(UPlayFabEconomyAPI, CallAuthenticationContext) == 0x000348, "Member 'UPlayFabEconomyAPI::CallAuthenticationContext' has a wrong offset!");
static_assert(offsetof(UPlayFabEconomyAPI, RequestJsonObj) == 0x000350, "Member 'UPlayFabEconomyAPI::RequestJsonObj' has a wrong offset!");
static_assert(offsetof(UPlayFabEconomyAPI, ResponseJsonObj) == 0x000358, "Member 'UPlayFabEconomyAPI::ResponseJsonObj' has a wrong offset!");

// Class PlayFab.PlayFabEconomyModelDecoder
// 0x0000 (0x0028 - 0x0028)
class UPlayFabEconomyModelDecoder final : public UBlueprintFunctionLibrary
{
public:
	static struct FEconomyAddInventoryItemsResponse DecodeAddInventoryItemsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyCreateDraftItemResponse DecodeCreateDraftItemResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyCreateUploadUrlsResponse DecodeCreateUploadUrlsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyDeleteEntityItemReviewsResponse DecodeDeleteEntityItemReviewsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyDeleteInventoryCollectionResponse DecodeDeleteInventoryCollectionResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyDeleteInventoryItemsResponse DecodeDeleteInventoryItemsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyDeleteItemResponse DecodeDeleteItemResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyExecuteInventoryOperationsResponse DecodeExecuteInventoryOperationsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyGetCatalogConfigResponse DecodeGetCatalogConfigResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyGetDraftItemResponse DecodeGetDraftItemResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyGetDraftItemsResponse DecodeGetDraftItemsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyGetEntityDraftItemsResponse DecodeGetEntityDraftItemsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyGetEntityItemReviewResponse DecodeGetEntityItemReviewResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyGetInventoryCollectionIdsResponse DecodeGetInventoryCollectionIdsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyGetInventoryItemsResponse DecodeGetInventoryItemsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyGetItemContainersResponse DecodeGetItemContainersResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyGetItemModerationStateResponse DecodeGetItemModerationStateResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyGetItemPublishStatusResponse DecodeGetItemPublishStatusResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyGetItemResponse DecodeGetItemResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyGetItemReviewsResponse DecodeGetItemReviewsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyGetItemReviewSummaryResponse DecodeGetItemReviewSummaryResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyGetItemsResponse DecodeGetItemsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyGetMicrosoftStoreAccessTokensResponse DecodeGetMicrosoftStoreAccessTokensResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyGetTransactionHistoryResponse DecodeGetTransactionHistoryResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyPublishDraftItemResponse DecodePublishDraftItemResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyPurchaseInventoryItemsResponse DecodePurchaseInventoryItemsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyRedeemAppleAppStoreInventoryItemsResponse DecodeRedeemAppleAppStoreInventoryItemsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyRedeemGooglePlayInventoryItemsResponse DecodeRedeemGooglePlayInventoryItemsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyRedeemMicrosoftStoreInventoryItemsResponse DecodeRedeemMicrosoftStoreInventoryItemsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyRedeemNintendoEShopInventoryItemsResponse DecodeRedeemNintendoEShopInventoryItemsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyRedeemPlayStationStoreInventoryItemsResponse DecodeRedeemPlayStationStoreInventoryItemsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyRedeemSteamInventoryItemsResponse DecodeRedeemSteamInventoryItemsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyReportItemResponse DecodeReportItemResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyReportItemReviewResponse DecodeReportItemReviewResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyReviewItemResponse DecodeReviewItemResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomySearchItemsResponse DecodeSearchItemsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomySetItemModerationStateResponse DecodeSetItemModerationStateResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomySubmitItemReviewVoteResponse DecodeSubmitItemReviewVoteResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomySubtractInventoryItemsResponse DecodeSubtractInventoryItemsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyTakedownItemReviewsResponse DecodeTakedownItemReviewsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyTransferInventoryItemsResponse DecodeTransferInventoryItemsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyUpdateCatalogConfigResponse DecodeUpdateCatalogConfigResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyUpdateDraftItemResponse DecodeUpdateDraftItemResponseResponse(class UPlayFabJsonObject* Response);
	static struct FEconomyUpdateInventoryItemsResponse DecodeUpdateInventoryItemsResponseResponse(class UPlayFabJsonObject* Response);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabEconomyModelDecoder">();
	}
	static class UPlayFabEconomyModelDecoder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabEconomyModelDecoder>();
	}
};
static_assert(alignof(UPlayFabEconomyModelDecoder) == 0x000008, "Wrong alignment on UPlayFabEconomyModelDecoder");
static_assert(sizeof(UPlayFabEconomyModelDecoder) == 0x000028, "Wrong size on UPlayFabEconomyModelDecoder");

// Class PlayFab.PlayFabEventsAPI
// 0x00F0 (0x0120 - 0x0030)
class UPlayFabEventsAPI final : public UOnlineBlueprintCallProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnPlayFabResponse;                                 // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_239A[0x78];                                    // 0x0040(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayFabAuthenticationContext*          CallAuthenticationContext;                         // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayFabJsonObject*                     RequestJsonObj;                                    // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayFabJsonObject*                     ResponseJsonObj;                                   // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_239B[0x50];                                    // 0x00D0(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UPlayFabEventsAPI* WriteEvents(const struct FEventsWriteEventsRequest& Request, TDelegate<void(const struct FEventsWriteEventsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEventsAPI* WriteTelemetryEvents(const struct FEventsWriteEventsRequest& Request, TDelegate<void(const struct FEventsWriteEventsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabEventsAPI* WriteTelemetryEventsWithTelemetryKey(const struct FEventsWriteEventsRequest& Request, const class FString& TelemetryKey, TDelegate<void(const struct FEventsWriteEventsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);

	void DelegateOnFailurePlayFabError__DelegateSignature(const struct FPlayFabError& Error, class UObject* CustomData);
	void DelegateOnSuccessWriteEvents__DelegateSignature(const struct FEventsWriteEventsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessWriteTelemetryEvents__DelegateSignature(const struct FEventsWriteEventsResponse& Result, class UObject* CustomData);
	void HelperWriteEvents(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperWriteTelemetryEvents(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabEventsAPI">();
	}
	static class UPlayFabEventsAPI* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabEventsAPI>();
	}
};
static_assert(alignof(UPlayFabEventsAPI) == 0x000008, "Wrong alignment on UPlayFabEventsAPI");
static_assert(sizeof(UPlayFabEventsAPI) == 0x000120, "Wrong size on UPlayFabEventsAPI");
static_assert(offsetof(UPlayFabEventsAPI, OnPlayFabResponse) == 0x000030, "Member 'UPlayFabEventsAPI::OnPlayFabResponse' has a wrong offset!");
static_assert(offsetof(UPlayFabEventsAPI, CallAuthenticationContext) == 0x0000B8, "Member 'UPlayFabEventsAPI::CallAuthenticationContext' has a wrong offset!");
static_assert(offsetof(UPlayFabEventsAPI, RequestJsonObj) == 0x0000C0, "Member 'UPlayFabEventsAPI::RequestJsonObj' has a wrong offset!");
static_assert(offsetof(UPlayFabEventsAPI, ResponseJsonObj) == 0x0000C8, "Member 'UPlayFabEventsAPI::ResponseJsonObj' has a wrong offset!");

// Class PlayFab.PlayFabEventsModelDecoder
// 0x0000 (0x0028 - 0x0028)
class UPlayFabEventsModelDecoder final : public UBlueprintFunctionLibrary
{
public:
	static struct FEventsWriteEventsResponse DecodeWriteEventsResponseResponse(class UPlayFabJsonObject* Response);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabEventsModelDecoder">();
	}
	static class UPlayFabEventsModelDecoder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabEventsModelDecoder>();
	}
};
static_assert(alignof(UPlayFabEventsModelDecoder) == 0x000008, "Wrong alignment on UPlayFabEventsModelDecoder");
static_assert(sizeof(UPlayFabEventsModelDecoder) == 0x000028, "Wrong size on UPlayFabEventsModelDecoder");

// Class PlayFab.PlayFabExperimentationAPI
// 0x0190 (0x01C0 - 0x0030)
class UPlayFabExperimentationAPI final : public UOnlineBlueprintCallProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnPlayFabResponse;                                 // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_239E[0x118];                                   // 0x0040(0x0118)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayFabAuthenticationContext*          CallAuthenticationContext;                         // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayFabJsonObject*                     RequestJsonObj;                                    // 0x0160(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayFabJsonObject*                     ResponseJsonObj;                                   // 0x0168(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_239F[0x50];                                    // 0x0170(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UPlayFabExperimentationAPI* CreateExclusionGroup(const struct FExperimentationCreateExclusionGroupRequest& Request, TDelegate<void(const struct FExperimentationCreateExclusionGroupResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabExperimentationAPI* CreateExperiment(const struct FExperimentationCreateExperimentRequest& Request, TDelegate<void(const struct FExperimentationCreateExperimentResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabExperimentationAPI* DeleteExclusionGroup(const struct FExperimentationDeleteExclusionGroupRequest& Request, TDelegate<void(const struct FExperimentationEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabExperimentationAPI* DeleteExperiment(const struct FExperimentationDeleteExperimentRequest& Request, TDelegate<void(const struct FExperimentationEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabExperimentationAPI* GetExclusionGroups(const struct FExperimentationGetExclusionGroupsRequest& Request, TDelegate<void(const struct FExperimentationGetExclusionGroupsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabExperimentationAPI* GetExclusionGroupTraffic(const struct FExperimentationGetExclusionGroupTrafficRequest& Request, TDelegate<void(const struct FExperimentationGetExclusionGroupTrafficResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabExperimentationAPI* GetExperiments(const struct FExperimentationGetExperimentsRequest& Request, TDelegate<void(const struct FExperimentationGetExperimentsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabExperimentationAPI* GetLatestScorecard(const struct FExperimentationGetLatestScorecardRequest& Request, TDelegate<void(const struct FExperimentationGetLatestScorecardResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabExperimentationAPI* GetTreatmentAssignment(const struct FExperimentationGetTreatmentAssignmentRequest& Request, TDelegate<void(const struct FExperimentationGetTreatmentAssignmentResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabExperimentationAPI* StartExperiment(const struct FExperimentationStartExperimentRequest& Request, TDelegate<void(const struct FExperimentationEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabExperimentationAPI* StopExperiment(const struct FExperimentationStopExperimentRequest& Request, TDelegate<void(const struct FExperimentationEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabExperimentationAPI* UpdateExclusionGroup(const struct FExperimentationUpdateExclusionGroupRequest& Request, TDelegate<void(const struct FExperimentationEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabExperimentationAPI* UpdateExperiment(const struct FExperimentationUpdateExperimentRequest& Request, TDelegate<void(const struct FExperimentationEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);

	void DelegateOnFailurePlayFabError__DelegateSignature(const struct FPlayFabError& Error, class UObject* CustomData);
	void DelegateOnSuccessCreateExclusionGroup__DelegateSignature(const struct FExperimentationCreateExclusionGroupResult& Result, class UObject* CustomData);
	void DelegateOnSuccessCreateExperiment__DelegateSignature(const struct FExperimentationCreateExperimentResult& Result, class UObject* CustomData);
	void DelegateOnSuccessDeleteExclusionGroup__DelegateSignature(const struct FExperimentationEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessDeleteExperiment__DelegateSignature(const struct FExperimentationEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetExclusionGroups__DelegateSignature(const struct FExperimentationGetExclusionGroupsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetExclusionGroupTraffic__DelegateSignature(const struct FExperimentationGetExclusionGroupTrafficResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetExperiments__DelegateSignature(const struct FExperimentationGetExperimentsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetLatestScorecard__DelegateSignature(const struct FExperimentationGetLatestScorecardResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetTreatmentAssignment__DelegateSignature(const struct FExperimentationGetTreatmentAssignmentResult& Result, class UObject* CustomData);
	void DelegateOnSuccessStartExperiment__DelegateSignature(const struct FExperimentationEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessStopExperiment__DelegateSignature(const struct FExperimentationEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateExclusionGroup__DelegateSignature(const struct FExperimentationEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateExperiment__DelegateSignature(const struct FExperimentationEmptyResponse& Result, class UObject* CustomData);
	void HelperCreateExclusionGroup(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperCreateExperiment(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeleteExclusionGroup(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeleteExperiment(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetExclusionGroups(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetExclusionGroupTraffic(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetExperiments(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetLatestScorecard(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetTreatmentAssignment(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperStartExperiment(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperStopExperiment(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateExclusionGroup(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateExperiment(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabExperimentationAPI">();
	}
	static class UPlayFabExperimentationAPI* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabExperimentationAPI>();
	}
};
static_assert(alignof(UPlayFabExperimentationAPI) == 0x000008, "Wrong alignment on UPlayFabExperimentationAPI");
static_assert(sizeof(UPlayFabExperimentationAPI) == 0x0001C0, "Wrong size on UPlayFabExperimentationAPI");
static_assert(offsetof(UPlayFabExperimentationAPI, OnPlayFabResponse) == 0x000030, "Member 'UPlayFabExperimentationAPI::OnPlayFabResponse' has a wrong offset!");
static_assert(offsetof(UPlayFabExperimentationAPI, CallAuthenticationContext) == 0x000158, "Member 'UPlayFabExperimentationAPI::CallAuthenticationContext' has a wrong offset!");
static_assert(offsetof(UPlayFabExperimentationAPI, RequestJsonObj) == 0x000160, "Member 'UPlayFabExperimentationAPI::RequestJsonObj' has a wrong offset!");
static_assert(offsetof(UPlayFabExperimentationAPI, ResponseJsonObj) == 0x000168, "Member 'UPlayFabExperimentationAPI::ResponseJsonObj' has a wrong offset!");

// Class PlayFab.PlayFabExperimentationModelDecoder
// 0x0000 (0x0028 - 0x0028)
class UPlayFabExperimentationModelDecoder final : public UBlueprintFunctionLibrary
{
public:
	static struct FExperimentationCreateExclusionGroupResult DecodeCreateExclusionGroupResultResponse(class UPlayFabJsonObject* Response);
	static struct FExperimentationCreateExperimentResult DecodeCreateExperimentResultResponse(class UPlayFabJsonObject* Response);
	static struct FExperimentationEmptyResponse DecodeEmptyResponseResponse(class UPlayFabJsonObject* Response);
	static struct FExperimentationGetExclusionGroupsResult DecodeGetExclusionGroupsResultResponse(class UPlayFabJsonObject* Response);
	static struct FExperimentationGetExclusionGroupTrafficResult DecodeGetExclusionGroupTrafficResultResponse(class UPlayFabJsonObject* Response);
	static struct FExperimentationGetExperimentsResult DecodeGetExperimentsResultResponse(class UPlayFabJsonObject* Response);
	static struct FExperimentationGetLatestScorecardResult DecodeGetLatestScorecardResultResponse(class UPlayFabJsonObject* Response);
	static struct FExperimentationGetTreatmentAssignmentResult DecodeGetTreatmentAssignmentResultResponse(class UPlayFabJsonObject* Response);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabExperimentationModelDecoder">();
	}
	static class UPlayFabExperimentationModelDecoder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabExperimentationModelDecoder>();
	}
};
static_assert(alignof(UPlayFabExperimentationModelDecoder) == 0x000008, "Wrong alignment on UPlayFabExperimentationModelDecoder");
static_assert(sizeof(UPlayFabExperimentationModelDecoder) == 0x000028, "Wrong size on UPlayFabExperimentationModelDecoder");

// Class PlayFab.PlayFabGroupsAPI
// 0x0250 (0x0280 - 0x0030)
class UPlayFabGroupsAPI final : public UOnlineBlueprintCallProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnPlayFabResponse;                                 // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_23AD[0x1D8];                                   // 0x0040(0x01D8)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayFabAuthenticationContext*          CallAuthenticationContext;                         // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayFabJsonObject*                     RequestJsonObj;                                    // 0x0220(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayFabJsonObject*                     ResponseJsonObj;                                   // 0x0228(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_23AE[0x50];                                    // 0x0230(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UPlayFabGroupsAPI* AcceptGroupApplication(const struct FGroupsAcceptGroupApplicationRequest& Request, TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabGroupsAPI* AcceptGroupInvitation(const struct FGroupsAcceptGroupInvitationRequest& Request, TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabGroupsAPI* AddMembers(const struct FGroupsAddMembersRequest& Request, TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabGroupsAPI* ApplyToGroup(const struct FGroupsApplyToGroupRequest& Request, TDelegate<void(const struct FGroupsApplyToGroupResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabGroupsAPI* BlockEntity(const struct FGroupsBlockEntityRequest& Request, TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabGroupsAPI* ChangeMemberRole(const struct FGroupsChangeMemberRoleRequest& Request, TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabGroupsAPI* CreateGroup(const struct FGroupsCreateGroupRequest& Request, TDelegate<void(const struct FGroupsCreateGroupResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabGroupsAPI* CreateRole(const struct FGroupsCreateGroupRoleRequest& Request, TDelegate<void(const struct FGroupsCreateGroupRoleResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabGroupsAPI* DeleteGroup(const struct FGroupsDeleteGroupRequest& Request, TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabGroupsAPI* DeleteRole(const struct FGroupsDeleteRoleRequest& Request, TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabGroupsAPI* GetGroup(const struct FGroupsGetGroupRequest& Request, TDelegate<void(const struct FGroupsGetGroupResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabGroupsAPI* InviteToGroup(const struct FGroupsInviteToGroupRequest& Request, TDelegate<void(const struct FGroupsInviteToGroupResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabGroupsAPI* IsMember(const struct FGroupsIsMemberRequest& Request, TDelegate<void(const struct FGroupsIsMemberResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabGroupsAPI* ListGroupApplications(const struct FGroupsListGroupApplicationsRequest& Request, TDelegate<void(const struct FGroupsListGroupApplicationsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabGroupsAPI* ListGroupBlocks(const struct FGroupsListGroupBlocksRequest& Request, TDelegate<void(const struct FGroupsListGroupBlocksResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabGroupsAPI* ListGroupInvitations(const struct FGroupsListGroupInvitationsRequest& Request, TDelegate<void(const struct FGroupsListGroupInvitationsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabGroupsAPI* ListGroupMembers(const struct FGroupsListGroupMembersRequest& Request, TDelegate<void(const struct FGroupsListGroupMembersResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabGroupsAPI* ListMembership(const struct FGroupsListMembershipRequest& Request, TDelegate<void(const struct FGroupsListMembershipResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabGroupsAPI* ListMembershipOpportunities(const struct FGroupsListMembershipOpportunitiesRequest& Request, TDelegate<void(const struct FGroupsListMembershipOpportunitiesResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabGroupsAPI* RemoveGroupApplication(const struct FGroupsRemoveGroupApplicationRequest& Request, TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabGroupsAPI* RemoveGroupInvitation(const struct FGroupsRemoveGroupInvitationRequest& Request, TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabGroupsAPI* RemoveMembers(const struct FGroupsRemoveMembersRequest& Request, TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabGroupsAPI* UnblockEntity(const struct FGroupsUnblockEntityRequest& Request, TDelegate<void(const struct FGroupsEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabGroupsAPI* UpdateGroup(const struct FGroupsUpdateGroupRequest& Request, TDelegate<void(const struct FGroupsUpdateGroupResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabGroupsAPI* UpdateRole(const struct FGroupsUpdateGroupRoleRequest& Request, TDelegate<void(const struct FGroupsUpdateGroupRoleResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);

	void DelegateOnFailurePlayFabError__DelegateSignature(const struct FPlayFabError& Error, class UObject* CustomData);
	void DelegateOnSuccessAcceptGroupApplication__DelegateSignature(const struct FGroupsEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessAcceptGroupInvitation__DelegateSignature(const struct FGroupsEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessAddMembers__DelegateSignature(const struct FGroupsEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessApplyToGroup__DelegateSignature(const struct FGroupsApplyToGroupResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessBlockEntity__DelegateSignature(const struct FGroupsEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessChangeMemberRole__DelegateSignature(const struct FGroupsEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessCreateGroup__DelegateSignature(const struct FGroupsCreateGroupResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessCreateRole__DelegateSignature(const struct FGroupsCreateGroupRoleResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessDeleteGroup__DelegateSignature(const struct FGroupsEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessDeleteRole__DelegateSignature(const struct FGroupsEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetGroup__DelegateSignature(const struct FGroupsGetGroupResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessInviteToGroup__DelegateSignature(const struct FGroupsInviteToGroupResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessIsMember__DelegateSignature(const struct FGroupsIsMemberResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessListGroupApplications__DelegateSignature(const struct FGroupsListGroupApplicationsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessListGroupBlocks__DelegateSignature(const struct FGroupsListGroupBlocksResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessListGroupInvitations__DelegateSignature(const struct FGroupsListGroupInvitationsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessListGroupMembers__DelegateSignature(const struct FGroupsListGroupMembersResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessListMembership__DelegateSignature(const struct FGroupsListMembershipResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessListMembershipOpportunities__DelegateSignature(const struct FGroupsListMembershipOpportunitiesResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessRemoveGroupApplication__DelegateSignature(const struct FGroupsEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessRemoveGroupInvitation__DelegateSignature(const struct FGroupsEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessRemoveMembers__DelegateSignature(const struct FGroupsEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessUnblockEntity__DelegateSignature(const struct FGroupsEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateGroup__DelegateSignature(const struct FGroupsUpdateGroupResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateRole__DelegateSignature(const struct FGroupsUpdateGroupRoleResponse& Result, class UObject* CustomData);
	void HelperAcceptGroupApplication(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperAcceptGroupInvitation(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperAddMembers(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperApplyToGroup(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperBlockEntity(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperChangeMemberRole(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperCreateGroup(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperCreateRole(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeleteGroup(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeleteRole(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetGroup(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperInviteToGroup(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperIsMember(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperListGroupApplications(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperListGroupBlocks(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperListGroupInvitations(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperListGroupMembers(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperListMembership(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperListMembershipOpportunities(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRemoveGroupApplication(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRemoveGroupInvitation(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRemoveMembers(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUnblockEntity(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateGroup(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateRole(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabGroupsAPI">();
	}
	static class UPlayFabGroupsAPI* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabGroupsAPI>();
	}
};
static_assert(alignof(UPlayFabGroupsAPI) == 0x000008, "Wrong alignment on UPlayFabGroupsAPI");
static_assert(sizeof(UPlayFabGroupsAPI) == 0x000280, "Wrong size on UPlayFabGroupsAPI");
static_assert(offsetof(UPlayFabGroupsAPI, OnPlayFabResponse) == 0x000030, "Member 'UPlayFabGroupsAPI::OnPlayFabResponse' has a wrong offset!");
static_assert(offsetof(UPlayFabGroupsAPI, CallAuthenticationContext) == 0x000218, "Member 'UPlayFabGroupsAPI::CallAuthenticationContext' has a wrong offset!");
static_assert(offsetof(UPlayFabGroupsAPI, RequestJsonObj) == 0x000220, "Member 'UPlayFabGroupsAPI::RequestJsonObj' has a wrong offset!");
static_assert(offsetof(UPlayFabGroupsAPI, ResponseJsonObj) == 0x000228, "Member 'UPlayFabGroupsAPI::ResponseJsonObj' has a wrong offset!");

// Class PlayFab.PlayFabGroupsModelDecoder
// 0x0000 (0x0028 - 0x0028)
class UPlayFabGroupsModelDecoder final : public UBlueprintFunctionLibrary
{
public:
	static struct FGroupsApplyToGroupResponse DecodeApplyToGroupResponseResponse(class UPlayFabJsonObject* Response);
	static struct FGroupsCreateGroupResponse DecodeCreateGroupResponseResponse(class UPlayFabJsonObject* Response);
	static struct FGroupsCreateGroupRoleResponse DecodeCreateGroupRoleResponseResponse(class UPlayFabJsonObject* Response);
	static struct FGroupsEmptyResponse DecodeEmptyResponseResponse(class UPlayFabJsonObject* Response);
	static struct FGroupsGetGroupResponse DecodeGetGroupResponseResponse(class UPlayFabJsonObject* Response);
	static struct FGroupsInviteToGroupResponse DecodeInviteToGroupResponseResponse(class UPlayFabJsonObject* Response);
	static struct FGroupsIsMemberResponse DecodeIsMemberResponseResponse(class UPlayFabJsonObject* Response);
	static struct FGroupsListGroupApplicationsResponse DecodeListGroupApplicationsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FGroupsListGroupBlocksResponse DecodeListGroupBlocksResponseResponse(class UPlayFabJsonObject* Response);
	static struct FGroupsListGroupInvitationsResponse DecodeListGroupInvitationsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FGroupsListGroupMembersResponse DecodeListGroupMembersResponseResponse(class UPlayFabJsonObject* Response);
	static struct FGroupsListMembershipOpportunitiesResponse DecodeListMembershipOpportunitiesResponseResponse(class UPlayFabJsonObject* Response);
	static struct FGroupsListMembershipResponse DecodeListMembershipResponseResponse(class UPlayFabJsonObject* Response);
	static struct FGroupsUpdateGroupResponse DecodeUpdateGroupResponseResponse(class UPlayFabJsonObject* Response);
	static struct FGroupsUpdateGroupRoleResponse DecodeUpdateGroupRoleResponseResponse(class UPlayFabJsonObject* Response);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabGroupsModelDecoder">();
	}
	static class UPlayFabGroupsModelDecoder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabGroupsModelDecoder>();
	}
};
static_assert(alignof(UPlayFabGroupsModelDecoder) == 0x000008, "Wrong alignment on UPlayFabGroupsModelDecoder");
static_assert(sizeof(UPlayFabGroupsModelDecoder) == 0x000028, "Wrong size on UPlayFabGroupsModelDecoder");

// Class PlayFab.PlayFabInsightsAPI
// 0x0120 (0x0150 - 0x0030)
class UPlayFabInsightsAPI final : public UOnlineBlueprintCallProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnPlayFabResponse;                                 // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_23C8[0xA8];                                    // 0x0040(0x00A8)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayFabAuthenticationContext*          CallAuthenticationContext;                         // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayFabJsonObject*                     RequestJsonObj;                                    // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayFabJsonObject*                     ResponseJsonObj;                                   // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_23C9[0x50];                                    // 0x0100(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UPlayFabInsightsAPI* GetDetails(const struct FInsightsInsightsEmptyRequest& Request, TDelegate<void(const struct FInsightsInsightsGetDetailsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabInsightsAPI* GetLimits(const struct FInsightsInsightsEmptyRequest& Request, TDelegate<void(const struct FInsightsInsightsGetLimitsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabInsightsAPI* GetOperationStatus(const struct FInsightsInsightsGetOperationStatusRequest& Request, TDelegate<void(const struct FInsightsInsightsGetOperationStatusResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabInsightsAPI* GetPendingOperations(const struct FInsightsInsightsGetPendingOperationsRequest& Request, TDelegate<void(const struct FInsightsInsightsGetPendingOperationsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabInsightsAPI* SetPerformance(const struct FInsightsInsightsSetPerformanceRequest& Request, TDelegate<void(const struct FInsightsInsightsOperationResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabInsightsAPI* SetStorageRetention(const struct FInsightsInsightsSetStorageRetentionRequest& Request, TDelegate<void(const struct FInsightsInsightsOperationResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);

	void DelegateOnFailurePlayFabError__DelegateSignature(const struct FPlayFabError& Error, class UObject* CustomData);
	void DelegateOnSuccessGetDetails__DelegateSignature(const struct FInsightsInsightsGetDetailsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetLimits__DelegateSignature(const struct FInsightsInsightsGetLimitsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetOperationStatus__DelegateSignature(const struct FInsightsInsightsGetOperationStatusResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPendingOperations__DelegateSignature(const struct FInsightsInsightsGetPendingOperationsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessSetPerformance__DelegateSignature(const struct FInsightsInsightsOperationResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessSetStorageRetention__DelegateSignature(const struct FInsightsInsightsOperationResponse& Result, class UObject* CustomData);
	void HelperGetDetails(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetLimits(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetOperationStatus(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPendingOperations(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSetPerformance(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSetStorageRetention(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabInsightsAPI">();
	}
	static class UPlayFabInsightsAPI* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabInsightsAPI>();
	}
};
static_assert(alignof(UPlayFabInsightsAPI) == 0x000008, "Wrong alignment on UPlayFabInsightsAPI");
static_assert(sizeof(UPlayFabInsightsAPI) == 0x000150, "Wrong size on UPlayFabInsightsAPI");
static_assert(offsetof(UPlayFabInsightsAPI, OnPlayFabResponse) == 0x000030, "Member 'UPlayFabInsightsAPI::OnPlayFabResponse' has a wrong offset!");
static_assert(offsetof(UPlayFabInsightsAPI, CallAuthenticationContext) == 0x0000E8, "Member 'UPlayFabInsightsAPI::CallAuthenticationContext' has a wrong offset!");
static_assert(offsetof(UPlayFabInsightsAPI, RequestJsonObj) == 0x0000F0, "Member 'UPlayFabInsightsAPI::RequestJsonObj' has a wrong offset!");
static_assert(offsetof(UPlayFabInsightsAPI, ResponseJsonObj) == 0x0000F8, "Member 'UPlayFabInsightsAPI::ResponseJsonObj' has a wrong offset!");

// Class PlayFab.PlayFabInsightsModelDecoder
// 0x0000 (0x0028 - 0x0028)
class UPlayFabInsightsModelDecoder final : public UBlueprintFunctionLibrary
{
public:
	static struct FInsightsInsightsGetDetailsResponse DecodeInsightsGetDetailsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FInsightsInsightsGetLimitsResponse DecodeInsightsGetLimitsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FInsightsInsightsGetOperationStatusResponse DecodeInsightsGetOperationStatusResponseResponse(class UPlayFabJsonObject* Response);
	static struct FInsightsInsightsGetPendingOperationsResponse DecodeInsightsGetPendingOperationsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FInsightsInsightsOperationResponse DecodeInsightsOperationResponseResponse(class UPlayFabJsonObject* Response);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabInsightsModelDecoder">();
	}
	static class UPlayFabInsightsModelDecoder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabInsightsModelDecoder>();
	}
};
static_assert(alignof(UPlayFabInsightsModelDecoder) == 0x000008, "Wrong alignment on UPlayFabInsightsModelDecoder");
static_assert(sizeof(UPlayFabInsightsModelDecoder) == 0x000028, "Wrong size on UPlayFabInsightsModelDecoder");

// Class PlayFab.PlayFabJsonObject
// 0x0010 (0x0038 - 0x0028)
class UPlayFabJsonObject final : public UObject
{
public:
	uint8                                         Pad_23D0[0x10];                                    // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UPlayFabJsonObject* ConstructJsonObject(class UObject* WorldContextObject);

	bool DecodeJson(const class FString& JsonString);
	TArray<class UPlayFabJsonValue*> GetArrayField(const class FString& FieldName);
	TArray<bool> GetBoolArrayField(const class FString& FieldName);
	TArray<class FString> GetFieldNames();
	TArray<float> GetNumberArrayField(const class FString& FieldName);
	TArray<class UPlayFabJsonObject*> GetObjectArrayField(const class FString& FieldName);
	TArray<class FString> GetStringArrayField(const class FString& FieldName);
	void MergeJsonObject(class UPlayFabJsonObject* InJsonObject, bool Overwrite);
	void RemoveField(const class FString& FieldName);
	void Reset();
	void SetArrayField(const class FString& FieldName, const TArray<class UPlayFabJsonValue*>& InArray);
	void SetBoolArrayField(const class FString& FieldName, const TArray<bool>& BoolArray);
	void SetBoolField(const class FString& FieldName, bool InValue);
	void SetField(const class FString& FieldName, class UPlayFabJsonValue* JsonValue);
	void SetFieldNull(const class FString& FieldName);
	void SetNumberArrayField(const class FString& FieldName, const TArray<float>& NumberArray);
	void SetNumberField(const class FString& FieldName, float Number);
	void SetObjectArrayField(const class FString& FieldName, const TArray<class UPlayFabJsonObject*>& ObjectArray);
	void SetObjectField(const class FString& FieldName, class UPlayFabJsonObject* JsonObject);
	void SetStringArrayField(const class FString& FieldName, const TArray<class FString>& StringArray);
	void SetStringField(const class FString& FieldName, const class FString& StringValue);

	class FString EncodeJson() const;
	bool GetBoolField(const class FString& FieldName) const;
	class UPlayFabJsonValue* GetField(const class FString& FieldName) const;
	float GetNumberField(const class FString& FieldName) const;
	class UPlayFabJsonObject* GetObjectField(const class FString& FieldName) const;
	class FString GetStringField(const class FString& FieldName) const;
	bool HasField(const class FString& FieldName) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabJsonObject">();
	}
	static class UPlayFabJsonObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabJsonObject>();
	}
};
static_assert(alignof(UPlayFabJsonObject) == 0x000008, "Wrong alignment on UPlayFabJsonObject");
static_assert(sizeof(UPlayFabJsonObject) == 0x000038, "Wrong size on UPlayFabJsonObject");

// Class PlayFab.PlayFabProfilesAPI
// 0x0140 (0x0170 - 0x0030)
class UPlayFabProfilesAPI final : public UOnlineBlueprintCallProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnPlayFabResponse;                                 // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_23D8[0xC8];                                    // 0x0040(0x00C8)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayFabAuthenticationContext*          CallAuthenticationContext;                         // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayFabJsonObject*                     RequestJsonObj;                                    // 0x0110(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayFabJsonObject*                     ResponseJsonObj;                                   // 0x0118(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_23D9[0x50];                                    // 0x0120(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UPlayFabProfilesAPI* GetGlobalPolicy(const struct FProfilesGetGlobalPolicyRequest& Request, TDelegate<void(const struct FProfilesGetGlobalPolicyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabProfilesAPI* GetProfile(const struct FProfilesGetEntityProfileRequest& Request, TDelegate<void(const struct FProfilesGetEntityProfileResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabProfilesAPI* GetProfiles(const struct FProfilesGetEntityProfilesRequest& Request, TDelegate<void(const struct FProfilesGetEntityProfilesResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabProfilesAPI* GetTitlePlayersFromMasterPlayerAccountIds(const struct FProfilesGetTitlePlayersFromMasterPlayerAccountIdsRequest& Request, TDelegate<void(const struct FProfilesGetTitlePlayersFromMasterPlayerAccountIdsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabProfilesAPI* GetTitlePlayersFromXboxLiveIDs(const struct FProfilesGetTitlePlayersFromXboxLiveIDsRequest& Request, TDelegate<void(const struct FProfilesGetTitlePlayersFromProviderIDsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabProfilesAPI* SetGlobalPolicy(const struct FProfilesSetGlobalPolicyRequest& Request, TDelegate<void(const struct FProfilesSetGlobalPolicyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabProfilesAPI* SetProfileLanguage(const struct FProfilesSetProfileLanguageRequest& Request, TDelegate<void(const struct FProfilesSetProfileLanguageResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabProfilesAPI* SetProfilePolicy(const struct FProfilesSetEntityProfilePolicyRequest& Request, TDelegate<void(const struct FProfilesSetEntityProfilePolicyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);

	void DelegateOnFailurePlayFabError__DelegateSignature(const struct FPlayFabError& Error, class UObject* CustomData);
	void DelegateOnSuccessGetGlobalPolicy__DelegateSignature(const struct FProfilesGetGlobalPolicyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetProfile__DelegateSignature(const struct FProfilesGetEntityProfileResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetProfiles__DelegateSignature(const struct FProfilesGetEntityProfilesResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetTitlePlayersFromMasterPlayerAccountIds__DelegateSignature(const struct FProfilesGetTitlePlayersFromMasterPlayerAccountIdsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetTitlePlayersFromXboxLiveIDs__DelegateSignature(const struct FProfilesGetTitlePlayersFromProviderIDsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessSetGlobalPolicy__DelegateSignature(const struct FProfilesSetGlobalPolicyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessSetProfileLanguage__DelegateSignature(const struct FProfilesSetProfileLanguageResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessSetProfilePolicy__DelegateSignature(const struct FProfilesSetEntityProfilePolicyResponse& Result, class UObject* CustomData);
	void HelperGetGlobalPolicy(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetProfile(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetProfiles(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetTitlePlayersFromMasterPlayerAccountIds(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetTitlePlayersFromXboxLiveIDs(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSetGlobalPolicy(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSetProfileLanguage(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSetProfilePolicy(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabProfilesAPI">();
	}
	static class UPlayFabProfilesAPI* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabProfilesAPI>();
	}
};
static_assert(alignof(UPlayFabProfilesAPI) == 0x000008, "Wrong alignment on UPlayFabProfilesAPI");
static_assert(sizeof(UPlayFabProfilesAPI) == 0x000170, "Wrong size on UPlayFabProfilesAPI");
static_assert(offsetof(UPlayFabProfilesAPI, OnPlayFabResponse) == 0x000030, "Member 'UPlayFabProfilesAPI::OnPlayFabResponse' has a wrong offset!");
static_assert(offsetof(UPlayFabProfilesAPI, CallAuthenticationContext) == 0x000108, "Member 'UPlayFabProfilesAPI::CallAuthenticationContext' has a wrong offset!");
static_assert(offsetof(UPlayFabProfilesAPI, RequestJsonObj) == 0x000110, "Member 'UPlayFabProfilesAPI::RequestJsonObj' has a wrong offset!");
static_assert(offsetof(UPlayFabProfilesAPI, ResponseJsonObj) == 0x000118, "Member 'UPlayFabProfilesAPI::ResponseJsonObj' has a wrong offset!");

// Class PlayFab.PlayFabJsonValue
// 0x0010 (0x0038 - 0x0028)
class UPlayFabJsonValue final : public UObject
{
public:
	uint8                                         Pad_23E2[0x10];                                    // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UPlayFabJsonValue* ConstructJsonValueArray(class UObject* WorldContextObject, const TArray<class UPlayFabJsonValue*>& InArray);
	static class UPlayFabJsonValue* ConstructJsonValueBool(class UObject* WorldContextObject, bool InValue);
	static class UPlayFabJsonValue* ConstructJsonValueNumber(class UObject* WorldContextObject, float Number);
	static class UPlayFabJsonValue* ConstructJsonValueObject(class UObject* WorldContextObject, class UPlayFabJsonObject* JsonObject);
	static class UPlayFabJsonValue* ConstructJsonValueString(class UObject* WorldContextObject, const class FString& StringValue);

	class UPlayFabJsonObject* AsObject();

	TArray<class UPlayFabJsonValue*> AsArray() const;
	bool AsBool() const;
	float AsNumber() const;
	class FString AsString() const;
	EPFJson GetType() const;
	class FString GetTypeString() const;
	bool IsNull() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabJsonValue">();
	}
	static class UPlayFabJsonValue* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabJsonValue>();
	}
};
static_assert(alignof(UPlayFabJsonValue) == 0x000008, "Wrong alignment on UPlayFabJsonValue");
static_assert(sizeof(UPlayFabJsonValue) == 0x000038, "Wrong size on UPlayFabJsonValue");

// Class PlayFab.PlayFabLocalizationAPI
// 0x00D0 (0x0100 - 0x0030)
class UPlayFabLocalizationAPI final : public UOnlineBlueprintCallProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnPlayFabResponse;                                 // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_23E5[0x58];                                    // 0x0040(0x0058)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayFabAuthenticationContext*          CallAuthenticationContext;                         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayFabJsonObject*                     RequestJsonObj;                                    // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayFabJsonObject*                     ResponseJsonObj;                                   // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_23E6[0x50];                                    // 0x00B0(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UPlayFabLocalizationAPI* GetLanguageList(const struct FLocalizationGetLanguageListRequest& Request, TDelegate<void(const struct FLocalizationGetLanguageListResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);

	void DelegateOnFailurePlayFabError__DelegateSignature(const struct FPlayFabError& Error, class UObject* CustomData);
	void DelegateOnSuccessGetLanguageList__DelegateSignature(const struct FLocalizationGetLanguageListResponse& Result, class UObject* CustomData);
	void HelperGetLanguageList(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabLocalizationAPI">();
	}
	static class UPlayFabLocalizationAPI* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabLocalizationAPI>();
	}
};
static_assert(alignof(UPlayFabLocalizationAPI) == 0x000008, "Wrong alignment on UPlayFabLocalizationAPI");
static_assert(sizeof(UPlayFabLocalizationAPI) == 0x000100, "Wrong size on UPlayFabLocalizationAPI");
static_assert(offsetof(UPlayFabLocalizationAPI, OnPlayFabResponse) == 0x000030, "Member 'UPlayFabLocalizationAPI::OnPlayFabResponse' has a wrong offset!");
static_assert(offsetof(UPlayFabLocalizationAPI, CallAuthenticationContext) == 0x000098, "Member 'UPlayFabLocalizationAPI::CallAuthenticationContext' has a wrong offset!");
static_assert(offsetof(UPlayFabLocalizationAPI, RequestJsonObj) == 0x0000A0, "Member 'UPlayFabLocalizationAPI::RequestJsonObj' has a wrong offset!");
static_assert(offsetof(UPlayFabLocalizationAPI, ResponseJsonObj) == 0x0000A8, "Member 'UPlayFabLocalizationAPI::ResponseJsonObj' has a wrong offset!");

// Class PlayFab.PlayFabLocalizationModelDecoder
// 0x0000 (0x0028 - 0x0028)
class UPlayFabLocalizationModelDecoder final : public UBlueprintFunctionLibrary
{
public:
	static struct FLocalizationGetLanguageListResponse DecodeGetLanguageListResponseResponse(class UPlayFabJsonObject* Response);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabLocalizationModelDecoder">();
	}
	static class UPlayFabLocalizationModelDecoder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabLocalizationModelDecoder>();
	}
};
static_assert(alignof(UPlayFabLocalizationModelDecoder) == 0x000008, "Wrong alignment on UPlayFabLocalizationModelDecoder");
static_assert(sizeof(UPlayFabLocalizationModelDecoder) == 0x000028, "Wrong size on UPlayFabLocalizationModelDecoder");

// Class PlayFab.PlayFabMatchmakerAPI
// 0x0100 (0x0130 - 0x0030)
class UPlayFabMatchmakerAPI final : public UOnlineBlueprintCallProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnPlayFabResponse;                                 // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_23E8[0x88];                                    // 0x0040(0x0088)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayFabAuthenticationContext*          CallAuthenticationContext;                         // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayFabJsonObject*                     RequestJsonObj;                                    // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayFabJsonObject*                     ResponseJsonObj;                                   // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_23E9[0x50];                                    // 0x00E0(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UPlayFabMatchmakerAPI* AuthUser(const struct FMatchmakerAuthUserRequest& Request, TDelegate<void(const struct FMatchmakerAuthUserResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMatchmakerAPI* PlayerJoined(const struct FMatchmakerPlayerJoinedRequest& Request, TDelegate<void(const struct FMatchmakerPlayerJoinedResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMatchmakerAPI* PlayerLeft(const struct FMatchmakerPlayerLeftRequest& Request, TDelegate<void(const struct FMatchmakerPlayerLeftResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMatchmakerAPI* UserInfo(const struct FMatchmakerUserInfoRequest& Request, TDelegate<void(const struct FMatchmakerUserInfoResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);

	void DelegateOnFailurePlayFabError__DelegateSignature(const struct FPlayFabError& Error, class UObject* CustomData);
	void DelegateOnSuccessAuthUser__DelegateSignature(const struct FMatchmakerAuthUserResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessPlayerJoined__DelegateSignature(const struct FMatchmakerPlayerJoinedResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessPlayerLeft__DelegateSignature(const struct FMatchmakerPlayerLeftResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessUserInfo__DelegateSignature(const struct FMatchmakerUserInfoResponse& Result, class UObject* CustomData);
	void HelperAuthUser(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperPlayerJoined(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperPlayerLeft(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUserInfo(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabMatchmakerAPI">();
	}
	static class UPlayFabMatchmakerAPI* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabMatchmakerAPI>();
	}
};
static_assert(alignof(UPlayFabMatchmakerAPI) == 0x000008, "Wrong alignment on UPlayFabMatchmakerAPI");
static_assert(sizeof(UPlayFabMatchmakerAPI) == 0x000130, "Wrong size on UPlayFabMatchmakerAPI");
static_assert(offsetof(UPlayFabMatchmakerAPI, OnPlayFabResponse) == 0x000030, "Member 'UPlayFabMatchmakerAPI::OnPlayFabResponse' has a wrong offset!");
static_assert(offsetof(UPlayFabMatchmakerAPI, CallAuthenticationContext) == 0x0000C8, "Member 'UPlayFabMatchmakerAPI::CallAuthenticationContext' has a wrong offset!");
static_assert(offsetof(UPlayFabMatchmakerAPI, RequestJsonObj) == 0x0000D0, "Member 'UPlayFabMatchmakerAPI::RequestJsonObj' has a wrong offset!");
static_assert(offsetof(UPlayFabMatchmakerAPI, ResponseJsonObj) == 0x0000D8, "Member 'UPlayFabMatchmakerAPI::ResponseJsonObj' has a wrong offset!");

// Class PlayFab.PlayFabUtilities
// 0x0000 (0x0028 - 0x0028)
class UPlayFabUtilities final : public UBlueprintFunctionLibrary
{
public:
	static class FString GetErrorText(int32 Code);
	static class FString GetPhotonAppId(bool Realtime, bool Chat, bool Turnbased);
	static void SetPlayFabSettings(const class FString& GameTitleId, const class FString& PlayFabSecretApiKey, const class FString& ProductionUrl, const class FString& PhotonRealtimeAppId, const class FString& PhotonTurnbasedAppId, const class FString& PhotonChatAppId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabUtilities">();
	}
	static class UPlayFabUtilities* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabUtilities>();
	}
};
static_assert(alignof(UPlayFabUtilities) == 0x000008, "Wrong alignment on UPlayFabUtilities");
static_assert(sizeof(UPlayFabUtilities) == 0x000028, "Wrong size on UPlayFabUtilities");

// Class PlayFab.PlayFabMatchmakerModelDecoder
// 0x0000 (0x0028 - 0x0028)
class UPlayFabMatchmakerModelDecoder final : public UBlueprintFunctionLibrary
{
public:
	static struct FMatchmakerAuthUserResponse DecodeAuthUserResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMatchmakerPlayerJoinedResponse DecodePlayerJoinedResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMatchmakerPlayerLeftResponse DecodePlayerLeftResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMatchmakerUserInfoResponse DecodeUserInfoResponseResponse(class UPlayFabJsonObject* Response);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabMatchmakerModelDecoder">();
	}
	static class UPlayFabMatchmakerModelDecoder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabMatchmakerModelDecoder>();
	}
};
static_assert(alignof(UPlayFabMatchmakerModelDecoder) == 0x000008, "Wrong alignment on UPlayFabMatchmakerModelDecoder");
static_assert(sizeof(UPlayFabMatchmakerModelDecoder) == 0x000028, "Wrong size on UPlayFabMatchmakerModelDecoder");

// Class PlayFab.PlayFabMultiplayerAPI
// 0x0560 (0x0590 - 0x0030)
class UPlayFabMultiplayerAPI final : public UOnlineBlueprintCallProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnPlayFabResponse;                                 // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_23F0[0x4E8];                                   // 0x0040(0x04E8)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayFabAuthenticationContext*          CallAuthenticationContext;                         // 0x0528(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayFabJsonObject*                     RequestJsonObj;                                    // 0x0530(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayFabJsonObject*                     ResponseJsonObj;                                   // 0x0538(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_23F1[0x50];                                    // 0x0540(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UPlayFabMultiplayerAPI* CancelAllMatchmakingTicketsForPlayer(const struct FMultiplayerCancelAllMatchmakingTicketsForPlayerRequest& Request, TDelegate<void(const struct FMultiplayerCancelAllMatchmakingTicketsForPlayerResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* CancelAllServerBackfillTicketsForPlayer(const struct FMultiplayerCancelAllServerBackfillTicketsForPlayerRequest& Request, TDelegate<void(const struct FMultiplayerCancelAllServerBackfillTicketsForPlayerResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* CancelMatchmakingTicket(const struct FMultiplayerCancelMatchmakingTicketRequest& Request, TDelegate<void(const struct FMultiplayerCancelMatchmakingTicketResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* CancelServerBackfillTicket(const struct FMultiplayerCancelServerBackfillTicketRequest& Request, TDelegate<void(const struct FMultiplayerCancelServerBackfillTicketResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* CreateBuildAlias(const struct FMultiplayerCreateBuildAliasRequest& Request, TDelegate<void(const struct FMultiplayerBuildAliasDetailsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* CreateBuildWithCustomContainer(const struct FMultiplayerCreateBuildWithCustomContainerRequest& Request, TDelegate<void(const struct FMultiplayerCreateBuildWithCustomContainerResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* CreateBuildWithManagedContainer(const struct FMultiplayerCreateBuildWithManagedContainerRequest& Request, TDelegate<void(const struct FMultiplayerCreateBuildWithManagedContainerResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* CreateBuildWithProcessBasedServer(const struct FMultiplayerCreateBuildWithProcessBasedServerRequest& Request, TDelegate<void(const struct FMultiplayerCreateBuildWithProcessBasedServerResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* CreateLobby(const struct FMultiplayerCreateLobbyRequest& Request, TDelegate<void(const struct FMultiplayerCreateLobbyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* CreateMatchmakingTicket(const struct FMultiplayerCreateMatchmakingTicketRequest& Request, TDelegate<void(const struct FMultiplayerCreateMatchmakingTicketResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* CreateRemoteUser(const struct FMultiplayerCreateRemoteUserRequest& Request, TDelegate<void(const struct FMultiplayerCreateRemoteUserResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* CreateServerBackfillTicket(const struct FMultiplayerCreateServerBackfillTicketRequest& Request, TDelegate<void(const struct FMultiplayerCreateServerBackfillTicketResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* CreateServerMatchmakingTicket(const struct FMultiplayerCreateServerMatchmakingTicketRequest& Request, TDelegate<void(const struct FMultiplayerCreateMatchmakingTicketResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* CreateTitleMultiplayerServersQuotaChange(const struct FMultiplayerCreateTitleMultiplayerServersQuotaChangeRequest& Request, TDelegate<void(const struct FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* DeleteAsset(const struct FMultiplayerDeleteAssetRequest& Request, TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* DeleteBuild(const struct FMultiplayerDeleteBuildRequest& Request, TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* DeleteBuildAlias(const struct FMultiplayerDeleteBuildAliasRequest& Request, TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* DeleteBuildRegion(const struct FMultiplayerDeleteBuildRegionRequest& Request, TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* DeleteCertificate(const struct FMultiplayerDeleteCertificateRequest& Request, TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* DeleteContainerImageRepository(const struct FMultiplayerDeleteContainerImageRequest& Request, TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* DeleteLobby(const struct FMultiplayerDeleteLobbyRequest& Request, TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* DeleteRemoteUser(const struct FMultiplayerDeleteRemoteUserRequest& Request, TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* EnableMultiplayerServersForTitle(const struct FMultiplayerEnableMultiplayerServersForTitleRequest& Request, TDelegate<void(const struct FMultiplayerEnableMultiplayerServersForTitleResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* FindFriendLobbies(const struct FMultiplayerFindFriendLobbiesRequest& Request, TDelegate<void(const struct FMultiplayerFindFriendLobbiesResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* FindLobbies(const struct FMultiplayerFindLobbiesRequest& Request, TDelegate<void(const struct FMultiplayerFindLobbiesResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* GetAssetDownloadUrl(const struct FMultiplayerGetAssetDownloadUrlRequest& Request, TDelegate<void(const struct FMultiplayerGetAssetDownloadUrlResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* GetAssetUploadUrl(const struct FMultiplayerGetAssetUploadUrlRequest& Request, TDelegate<void(const struct FMultiplayerGetAssetUploadUrlResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* GetBuild(const struct FMultiplayerGetBuildRequest& Request, TDelegate<void(const struct FMultiplayerGetBuildResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* GetBuildAlias(const struct FMultiplayerGetBuildAliasRequest& Request, TDelegate<void(const struct FMultiplayerBuildAliasDetailsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* GetContainerRegistryCredentials(const struct FMultiplayerGetContainerRegistryCredentialsRequest& Request, TDelegate<void(const struct FMultiplayerGetContainerRegistryCredentialsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* GetLobby(const struct FMultiplayerGetLobbyRequest& Request, TDelegate<void(const struct FMultiplayerGetLobbyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* GetMatch(const struct FMultiplayerGetMatchRequest& Request, TDelegate<void(const struct FMultiplayerGetMatchResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* GetMatchmakingTicket(const struct FMultiplayerGetMatchmakingTicketRequest& Request, TDelegate<void(const struct FMultiplayerGetMatchmakingTicketResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* GetMultiplayerServerDetails(const struct FMultiplayerGetMultiplayerServerDetailsRequest& Request, TDelegate<void(const struct FMultiplayerGetMultiplayerServerDetailsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* GetMultiplayerServerLogs(const struct FMultiplayerGetMultiplayerServerLogsRequest& Request, TDelegate<void(const struct FMultiplayerGetMultiplayerServerLogsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* GetMultiplayerSessionLogsBySessionId(const struct FMultiplayerGetMultiplayerSessionLogsBySessionIdRequest& Request, TDelegate<void(const struct FMultiplayerGetMultiplayerServerLogsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* GetQueueStatistics(const struct FMultiplayerGetQueueStatisticsRequest& Request, TDelegate<void(const struct FMultiplayerGetQueueStatisticsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* GetRemoteLoginEndpoint(const struct FMultiplayerGetRemoteLoginEndpointRequest& Request, TDelegate<void(const struct FMultiplayerGetRemoteLoginEndpointResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* GetServerBackfillTicket(const struct FMultiplayerGetServerBackfillTicketRequest& Request, TDelegate<void(const struct FMultiplayerGetServerBackfillTicketResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* GetTitleEnabledForMultiplayerServersStatus(const struct FMultiplayerGetTitleEnabledForMultiplayerServersStatusRequest& Request, TDelegate<void(const struct FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* GetTitleMultiplayerServersQuotaChange(const struct FMultiplayerGetTitleMultiplayerServersQuotaChangeRequest& Request, TDelegate<void(const struct FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* GetTitleMultiplayerServersQuotas(const struct FMultiplayerGetTitleMultiplayerServersQuotasRequest& Request, TDelegate<void(const struct FMultiplayerGetTitleMultiplayerServersQuotasResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* InviteToLobby(const struct FMultiplayerInviteToLobbyRequest& Request, TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* JoinArrangedLobby(const struct FMultiplayerJoinArrangedLobbyRequest& Request, TDelegate<void(const struct FMultiplayerJoinLobbyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* JoinLobby(const struct FMultiplayerJoinLobbyRequest& Request, TDelegate<void(const struct FMultiplayerJoinLobbyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* JoinMatchmakingTicket(const struct FMultiplayerJoinMatchmakingTicketRequest& Request, TDelegate<void(const struct FMultiplayerJoinMatchmakingTicketResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* LeaveLobby(const struct FMultiplayerLeaveLobbyRequest& Request, TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* ListArchivedMultiplayerServers(const struct FMultiplayerListMultiplayerServersRequest& Request, TDelegate<void(const struct FMultiplayerListMultiplayerServersResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* ListAssetSummaries(const struct FMultiplayerListAssetSummariesRequest& Request, TDelegate<void(const struct FMultiplayerListAssetSummariesResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* ListBuildAliases(const struct FMultiplayerListBuildAliasesRequest& Request, TDelegate<void(const struct FMultiplayerListBuildAliasesResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* ListBuildSummariesV2(const struct FMultiplayerListBuildSummariesRequest& Request, TDelegate<void(const struct FMultiplayerListBuildSummariesResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* ListCertificateSummaries(const struct FMultiplayerListCertificateSummariesRequest& Request, TDelegate<void(const struct FMultiplayerListCertificateSummariesResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* ListContainerImages(const struct FMultiplayerListContainerImagesRequest& Request, TDelegate<void(const struct FMultiplayerListContainerImagesResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* ListContainerImageTags(const struct FMultiplayerListContainerImageTagsRequest& Request, TDelegate<void(const struct FMultiplayerListContainerImageTagsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* ListMatchmakingTicketsForPlayer(const struct FMultiplayerListMatchmakingTicketsForPlayerRequest& Request, TDelegate<void(const struct FMultiplayerListMatchmakingTicketsForPlayerResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* ListMultiplayerServers(const struct FMultiplayerListMultiplayerServersRequest& Request, TDelegate<void(const struct FMultiplayerListMultiplayerServersResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* ListPartyQosServers(const struct FMultiplayerListPartyQosServersRequest& Request, TDelegate<void(const struct FMultiplayerListPartyQosServersResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* ListQosServersForTitle(const struct FMultiplayerListQosServersForTitleRequest& Request, TDelegate<void(const struct FMultiplayerListQosServersForTitleResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* ListServerBackfillTicketsForPlayer(const struct FMultiplayerListServerBackfillTicketsForPlayerRequest& Request, TDelegate<void(const struct FMultiplayerListServerBackfillTicketsForPlayerResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* ListTitleMultiplayerServersQuotaChanges(const struct FMultiplayerListTitleMultiplayerServersQuotaChangesRequest& Request, TDelegate<void(const struct FMultiplayerListTitleMultiplayerServersQuotaChangesResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* ListVirtualMachineSummaries(const struct FMultiplayerListVirtualMachineSummariesRequest& Request, TDelegate<void(const struct FMultiplayerListVirtualMachineSummariesResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* RemoveMember(const struct FMultiplayerRemoveMemberFromLobbyRequest& Request, TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* RequestMultiplayerServer(const struct FMultiplayerRequestMultiplayerServerRequest& Request, TDelegate<void(const struct FMultiplayerRequestMultiplayerServerResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* RolloverContainerRegistryCredentials(const struct FMultiplayerRolloverContainerRegistryCredentialsRequest& Request, TDelegate<void(const struct FMultiplayerRolloverContainerRegistryCredentialsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* ShutdownMultiplayerServer(const struct FMultiplayerShutdownMultiplayerServerRequest& Request, TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* SubscribeToLobbyResource(const struct FMultiplayerSubscribeToLobbyResourceRequest& Request, TDelegate<void(const struct FMultiplayerSubscribeToLobbyResourceResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* UnsubscribeFromLobbyResource(const struct FMultiplayerUnsubscribeFromLobbyResourceRequest& Request, TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* UntagContainerImage(const struct FMultiplayerUntagContainerImageRequest& Request, TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* UpdateBuildAlias(const struct FMultiplayerUpdateBuildAliasRequest& Request, TDelegate<void(const struct FMultiplayerBuildAliasDetailsResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* UpdateBuildName(const struct FMultiplayerUpdateBuildNameRequest& Request, TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* UpdateBuildRegion(const struct FMultiplayerUpdateBuildRegionRequest& Request, TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* UpdateBuildRegions(const struct FMultiplayerUpdateBuildRegionsRequest& Request, TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* UpdateLobby(const struct FMultiplayerUpdateLobbyRequest& Request, TDelegate<void(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabMultiplayerAPI* UploadCertificate(const struct FMultiplayerUploadCertificateRequest& Request, TDelegate<void(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);

	void DelegateOnFailurePlayFabError__DelegateSignature(const struct FPlayFabError& Error, class UObject* CustomData);
	void DelegateOnSuccessCancelAllMatchmakingTicketsForPlayer__DelegateSignature(const struct FMultiplayerCancelAllMatchmakingTicketsForPlayerResult& Result, class UObject* CustomData);
	void DelegateOnSuccessCancelAllServerBackfillTicketsForPlayer__DelegateSignature(const struct FMultiplayerCancelAllServerBackfillTicketsForPlayerResult& Result, class UObject* CustomData);
	void DelegateOnSuccessCancelMatchmakingTicket__DelegateSignature(const struct FMultiplayerCancelMatchmakingTicketResult& Result, class UObject* CustomData);
	void DelegateOnSuccessCancelServerBackfillTicket__DelegateSignature(const struct FMultiplayerCancelServerBackfillTicketResult& Result, class UObject* CustomData);
	void DelegateOnSuccessCreateBuildAlias__DelegateSignature(const struct FMultiplayerBuildAliasDetailsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessCreateBuildWithCustomContainer__DelegateSignature(const struct FMultiplayerCreateBuildWithCustomContainerResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessCreateBuildWithManagedContainer__DelegateSignature(const struct FMultiplayerCreateBuildWithManagedContainerResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessCreateBuildWithProcessBasedServer__DelegateSignature(const struct FMultiplayerCreateBuildWithProcessBasedServerResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessCreateLobby__DelegateSignature(const struct FMultiplayerCreateLobbyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessCreateMatchmakingTicket__DelegateSignature(const struct FMultiplayerCreateMatchmakingTicketResult& Result, class UObject* CustomData);
	void DelegateOnSuccessCreateRemoteUser__DelegateSignature(const struct FMultiplayerCreateRemoteUserResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessCreateServerBackfillTicket__DelegateSignature(const struct FMultiplayerCreateServerBackfillTicketResult& Result, class UObject* CustomData);
	void DelegateOnSuccessCreateServerMatchmakingTicket__DelegateSignature(const struct FMultiplayerCreateMatchmakingTicketResult& Result, class UObject* CustomData);
	void DelegateOnSuccessCreateTitleMultiplayerServersQuotaChange__DelegateSignature(const struct FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessDeleteAsset__DelegateSignature(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessDeleteBuild__DelegateSignature(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessDeleteBuildAlias__DelegateSignature(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessDeleteBuildRegion__DelegateSignature(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessDeleteCertificate__DelegateSignature(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessDeleteContainerImageRepository__DelegateSignature(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessDeleteLobby__DelegateSignature(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessDeleteRemoteUser__DelegateSignature(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessEnableMultiplayerServersForTitle__DelegateSignature(const struct FMultiplayerEnableMultiplayerServersForTitleResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessFindFriendLobbies__DelegateSignature(const struct FMultiplayerFindFriendLobbiesResult& Result, class UObject* CustomData);
	void DelegateOnSuccessFindLobbies__DelegateSignature(const struct FMultiplayerFindLobbiesResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetAssetDownloadUrl__DelegateSignature(const struct FMultiplayerGetAssetDownloadUrlResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetAssetUploadUrl__DelegateSignature(const struct FMultiplayerGetAssetUploadUrlResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetBuild__DelegateSignature(const struct FMultiplayerGetBuildResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetBuildAlias__DelegateSignature(const struct FMultiplayerBuildAliasDetailsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetContainerRegistryCredentials__DelegateSignature(const struct FMultiplayerGetContainerRegistryCredentialsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetLobby__DelegateSignature(const struct FMultiplayerGetLobbyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetMatch__DelegateSignature(const struct FMultiplayerGetMatchResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetMatchmakingTicket__DelegateSignature(const struct FMultiplayerGetMatchmakingTicketResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetMultiplayerServerDetails__DelegateSignature(const struct FMultiplayerGetMultiplayerServerDetailsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetMultiplayerServerLogs__DelegateSignature(const struct FMultiplayerGetMultiplayerServerLogsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetMultiplayerSessionLogsBySessionId__DelegateSignature(const struct FMultiplayerGetMultiplayerServerLogsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetQueueStatistics__DelegateSignature(const struct FMultiplayerGetQueueStatisticsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetRemoteLoginEndpoint__DelegateSignature(const struct FMultiplayerGetRemoteLoginEndpointResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetServerBackfillTicket__DelegateSignature(const struct FMultiplayerGetServerBackfillTicketResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetTitleEnabledForMultiplayerServersStatus__DelegateSignature(const struct FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetTitleMultiplayerServersQuotaChange__DelegateSignature(const struct FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessGetTitleMultiplayerServersQuotas__DelegateSignature(const struct FMultiplayerGetTitleMultiplayerServersQuotasResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessInviteToLobby__DelegateSignature(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessJoinArrangedLobby__DelegateSignature(const struct FMultiplayerJoinLobbyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessJoinLobby__DelegateSignature(const struct FMultiplayerJoinLobbyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessJoinMatchmakingTicket__DelegateSignature(const struct FMultiplayerJoinMatchmakingTicketResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLeaveLobby__DelegateSignature(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessListArchivedMultiplayerServers__DelegateSignature(const struct FMultiplayerListMultiplayerServersResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessListAssetSummaries__DelegateSignature(const struct FMultiplayerListAssetSummariesResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessListBuildAliases__DelegateSignature(const struct FMultiplayerListBuildAliasesResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessListBuildSummariesV2__DelegateSignature(const struct FMultiplayerListBuildSummariesResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessListCertificateSummaries__DelegateSignature(const struct FMultiplayerListCertificateSummariesResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessListContainerImages__DelegateSignature(const struct FMultiplayerListContainerImagesResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessListContainerImageTags__DelegateSignature(const struct FMultiplayerListContainerImageTagsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessListMatchmakingTicketsForPlayer__DelegateSignature(const struct FMultiplayerListMatchmakingTicketsForPlayerResult& Result, class UObject* CustomData);
	void DelegateOnSuccessListMultiplayerServers__DelegateSignature(const struct FMultiplayerListMultiplayerServersResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessListPartyQosServers__DelegateSignature(const struct FMultiplayerListPartyQosServersResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessListQosServersForTitle__DelegateSignature(const struct FMultiplayerListQosServersForTitleResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessListServerBackfillTicketsForPlayer__DelegateSignature(const struct FMultiplayerListServerBackfillTicketsForPlayerResult& Result, class UObject* CustomData);
	void DelegateOnSuccessListTitleMultiplayerServersQuotaChanges__DelegateSignature(const struct FMultiplayerListTitleMultiplayerServersQuotaChangesResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessListVirtualMachineSummaries__DelegateSignature(const struct FMultiplayerListVirtualMachineSummariesResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessRemoveMember__DelegateSignature(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessRequestMultiplayerServer__DelegateSignature(const struct FMultiplayerRequestMultiplayerServerResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessRolloverContainerRegistryCredentials__DelegateSignature(const struct FMultiplayerRolloverContainerRegistryCredentialsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessShutdownMultiplayerServer__DelegateSignature(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessSubscribeToLobbyResource__DelegateSignature(const struct FMultiplayerSubscribeToLobbyResourceResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUnsubscribeFromLobbyResource__DelegateSignature(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUntagContainerImage__DelegateSignature(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateBuildAlias__DelegateSignature(const struct FMultiplayerBuildAliasDetailsResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateBuildName__DelegateSignature(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateBuildRegion__DelegateSignature(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateBuildRegions__DelegateSignature(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateLobby__DelegateSignature(const struct FMultiplayerLobbyEmptyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUploadCertificate__DelegateSignature(const struct FMultiplayerEmptyResponse& Result, class UObject* CustomData);
	void HelperCancelAllMatchmakingTicketsForPlayer(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperCancelAllServerBackfillTicketsForPlayer(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperCancelMatchmakingTicket(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperCancelServerBackfillTicket(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperCreateBuildAlias(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperCreateBuildWithCustomContainer(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperCreateBuildWithManagedContainer(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperCreateBuildWithProcessBasedServer(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperCreateLobby(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperCreateMatchmakingTicket(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperCreateRemoteUser(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperCreateServerBackfillTicket(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperCreateServerMatchmakingTicket(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperCreateTitleMultiplayerServersQuotaChange(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeleteAsset(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeleteBuild(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeleteBuildAlias(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeleteBuildRegion(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeleteCertificate(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeleteContainerImageRepository(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeleteLobby(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeleteRemoteUser(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperEnableMultiplayerServersForTitle(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperFindFriendLobbies(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperFindLobbies(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetAssetDownloadUrl(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetAssetUploadUrl(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetBuild(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetBuildAlias(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetContainerRegistryCredentials(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetLobby(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetMatch(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetMatchmakingTicket(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetMultiplayerServerDetails(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetMultiplayerServerLogs(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetMultiplayerSessionLogsBySessionId(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetQueueStatistics(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetRemoteLoginEndpoint(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetServerBackfillTicket(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetTitleEnabledForMultiplayerServersStatus(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetTitleMultiplayerServersQuotaChange(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetTitleMultiplayerServersQuotas(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperInviteToLobby(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperJoinArrangedLobby(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperJoinLobby(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperJoinMatchmakingTicket(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLeaveLobby(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperListArchivedMultiplayerServers(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperListAssetSummaries(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperListBuildAliases(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperListBuildSummariesV2(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperListCertificateSummaries(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperListContainerImages(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperListContainerImageTags(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperListMatchmakingTicketsForPlayer(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperListMultiplayerServers(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperListPartyQosServers(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperListQosServersForTitle(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperListServerBackfillTicketsForPlayer(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperListTitleMultiplayerServersQuotaChanges(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperListVirtualMachineSummaries(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRemoveMember(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRequestMultiplayerServer(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRolloverContainerRegistryCredentials(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperShutdownMultiplayerServer(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSubscribeToLobbyResource(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUnsubscribeFromLobbyResource(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUntagContainerImage(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateBuildAlias(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateBuildName(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateBuildRegion(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateBuildRegions(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateLobby(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUploadCertificate(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabMultiplayerAPI">();
	}
	static class UPlayFabMultiplayerAPI* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabMultiplayerAPI>();
	}
};
static_assert(alignof(UPlayFabMultiplayerAPI) == 0x000008, "Wrong alignment on UPlayFabMultiplayerAPI");
static_assert(sizeof(UPlayFabMultiplayerAPI) == 0x000590, "Wrong size on UPlayFabMultiplayerAPI");
static_assert(offsetof(UPlayFabMultiplayerAPI, OnPlayFabResponse) == 0x000030, "Member 'UPlayFabMultiplayerAPI::OnPlayFabResponse' has a wrong offset!");
static_assert(offsetof(UPlayFabMultiplayerAPI, CallAuthenticationContext) == 0x000528, "Member 'UPlayFabMultiplayerAPI::CallAuthenticationContext' has a wrong offset!");
static_assert(offsetof(UPlayFabMultiplayerAPI, RequestJsonObj) == 0x000530, "Member 'UPlayFabMultiplayerAPI::RequestJsonObj' has a wrong offset!");
static_assert(offsetof(UPlayFabMultiplayerAPI, ResponseJsonObj) == 0x000538, "Member 'UPlayFabMultiplayerAPI::ResponseJsonObj' has a wrong offset!");

// Class PlayFab.PlayFabMultiplayerModelDecoder
// 0x0000 (0x0028 - 0x0028)
class UPlayFabMultiplayerModelDecoder final : public UBlueprintFunctionLibrary
{
public:
	static struct FMultiplayerBuildAliasDetailsResponse DecodeBuildAliasDetailsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerCancelAllMatchmakingTicketsForPlayerResult DecodeCancelAllMatchmakingTicketsForPlayerResultResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerCancelAllServerBackfillTicketsForPlayerResult DecodeCancelAllServerBackfillTicketsForPlayerResultResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerCancelMatchmakingTicketResult DecodeCancelMatchmakingTicketResultResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerCancelServerBackfillTicketResult DecodeCancelServerBackfillTicketResultResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerCreateBuildWithCustomContainerResponse DecodeCreateBuildWithCustomContainerResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerCreateBuildWithManagedContainerResponse DecodeCreateBuildWithManagedContainerResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerCreateBuildWithProcessBasedServerResponse DecodeCreateBuildWithProcessBasedServerResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerCreateLobbyResult DecodeCreateLobbyResultResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerCreateMatchmakingTicketResult DecodeCreateMatchmakingTicketResultResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerCreateRemoteUserResponse DecodeCreateRemoteUserResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerCreateServerBackfillTicketResult DecodeCreateServerBackfillTicketResultResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerCreateTitleMultiplayerServersQuotaChangeResponse DecodeCreateTitleMultiplayerServersQuotaChangeResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerEmptyResponse DecodeEmptyResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerEnableMultiplayerServersForTitleResponse DecodeEnableMultiplayerServersForTitleResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerFindFriendLobbiesResult DecodeFindFriendLobbiesResultResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerFindLobbiesResult DecodeFindLobbiesResultResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerGetAssetDownloadUrlResponse DecodeGetAssetDownloadUrlResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerGetAssetUploadUrlResponse DecodeGetAssetUploadUrlResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerGetBuildResponse DecodeGetBuildResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerGetContainerRegistryCredentialsResponse DecodeGetContainerRegistryCredentialsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerGetLobbyResult DecodeGetLobbyResultResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerGetMatchmakingTicketResult DecodeGetMatchmakingTicketResultResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerGetMatchResult DecodeGetMatchResultResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerGetMultiplayerServerDetailsResponse DecodeGetMultiplayerServerDetailsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerGetMultiplayerServerLogsResponse DecodeGetMultiplayerServerLogsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerGetQueueStatisticsResult DecodeGetQueueStatisticsResultResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerGetRemoteLoginEndpointResponse DecodeGetRemoteLoginEndpointResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerGetServerBackfillTicketResult DecodeGetServerBackfillTicketResultResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerGetTitleEnabledForMultiplayerServersStatusResponse DecodeGetTitleEnabledForMultiplayerServersStatusResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerGetTitleMultiplayerServersQuotaChangeResponse DecodeGetTitleMultiplayerServersQuotaChangeResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerGetTitleMultiplayerServersQuotasResponse DecodeGetTitleMultiplayerServersQuotasResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerJoinLobbyResult DecodeJoinLobbyResultResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerJoinMatchmakingTicketResult DecodeJoinMatchmakingTicketResultResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerListAssetSummariesResponse DecodeListAssetSummariesResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerListBuildAliasesResponse DecodeListBuildAliasesResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerListBuildSummariesResponse DecodeListBuildSummariesResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerListCertificateSummariesResponse DecodeListCertificateSummariesResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerListContainerImagesResponse DecodeListContainerImagesResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerListContainerImageTagsResponse DecodeListContainerImageTagsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerListMatchmakingTicketsForPlayerResult DecodeListMatchmakingTicketsForPlayerResultResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerListMultiplayerServersResponse DecodeListMultiplayerServersResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerListPartyQosServersResponse DecodeListPartyQosServersResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerListQosServersForTitleResponse DecodeListQosServersForTitleResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerListServerBackfillTicketsForPlayerResult DecodeListServerBackfillTicketsForPlayerResultResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerListTitleMultiplayerServersQuotaChangesResponse DecodeListTitleMultiplayerServersQuotaChangesResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerListVirtualMachineSummariesResponse DecodeListVirtualMachineSummariesResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerLobbyEmptyResult DecodeLobbyEmptyResultResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerRequestMultiplayerServerResponse DecodeRequestMultiplayerServerResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerRolloverContainerRegistryCredentialsResponse DecodeRolloverContainerRegistryCredentialsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FMultiplayerSubscribeToLobbyResourceResult DecodeSubscribeToLobbyResourceResultResponse(class UPlayFabJsonObject* Response);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabMultiplayerModelDecoder">();
	}
	static class UPlayFabMultiplayerModelDecoder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabMultiplayerModelDecoder>();
	}
};
static_assert(alignof(UPlayFabMultiplayerModelDecoder) == 0x000008, "Wrong alignment on UPlayFabMultiplayerModelDecoder");
static_assert(sizeof(UPlayFabMultiplayerModelDecoder) == 0x000028, "Wrong size on UPlayFabMultiplayerModelDecoder");

// Class PlayFab.PlayFabProfilesModelDecoder
// 0x0000 (0x0028 - 0x0028)
class UPlayFabProfilesModelDecoder final : public UBlueprintFunctionLibrary
{
public:
	static struct FProfilesGetEntityProfileResponse DecodeGetEntityProfileResponseResponse(class UPlayFabJsonObject* Response);
	static struct FProfilesGetEntityProfilesResponse DecodeGetEntityProfilesResponseResponse(class UPlayFabJsonObject* Response);
	static struct FProfilesGetGlobalPolicyResponse DecodeGetGlobalPolicyResponseResponse(class UPlayFabJsonObject* Response);
	static struct FProfilesGetTitlePlayersFromMasterPlayerAccountIdsResponse DecodeGetTitlePlayersFromMasterPlayerAccountIdsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FProfilesGetTitlePlayersFromProviderIDsResponse DecodeGetTitlePlayersFromProviderIDsResponseResponse(class UPlayFabJsonObject* Response);
	static struct FProfilesSetEntityProfilePolicyResponse DecodeSetEntityProfilePolicyResponseResponse(class UPlayFabJsonObject* Response);
	static struct FProfilesSetGlobalPolicyResponse DecodeSetGlobalPolicyResponseResponse(class UPlayFabJsonObject* Response);
	static struct FProfilesSetProfileLanguageResponse DecodeSetProfileLanguageResponseResponse(class UPlayFabJsonObject* Response);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabProfilesModelDecoder">();
	}
	static class UPlayFabProfilesModelDecoder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabProfilesModelDecoder>();
	}
};
static_assert(alignof(UPlayFabProfilesModelDecoder) == 0x000008, "Wrong alignment on UPlayFabProfilesModelDecoder");
static_assert(sizeof(UPlayFabProfilesModelDecoder) == 0x000028, "Wrong size on UPlayFabProfilesModelDecoder");

// Class PlayFab.PlayFabServerAPI
// 0x0990 (0x09C0 - 0x0030)
class UPlayFabServerAPI final : public UOnlineBlueprintCallProxyBase
{
public:
	FMulticastInlineDelegateProperty_             OnPlayFabResponse;                                 // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_243C[0x918];                                   // 0x0040(0x0918)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayFabAuthenticationContext*          CallAuthenticationContext;                         // 0x0958(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayFabJsonObject*                     RequestJsonObj;                                    // 0x0960(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayFabJsonObject*                     ResponseJsonObj;                                   // 0x0968(0x0008)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_243D[0x50];                                    // 0x0970(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UPlayFabServerAPI* AddCharacterVirtualCurrency(const struct FServerAddCharacterVirtualCurrencyRequest& Request, TDelegate<void(const struct FServerModifyCharacterVirtualCurrencyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* AddFriend(const struct FServerAddFriendRequest& Request, TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* AddGenericID(const struct FServerAddGenericIDRequest& Request, TDelegate<void(const struct FServerEmptyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* AddPlayerTag(const struct FServerAddPlayerTagRequest& Request, TDelegate<void(const struct FServerAddPlayerTagResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* AddSharedGroupMembers(const struct FServerAddSharedGroupMembersRequest& Request, TDelegate<void(const struct FServerAddSharedGroupMembersResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* AddUserVirtualCurrency(const struct FServerAddUserVirtualCurrencyRequest& Request, TDelegate<void(const struct FServerModifyUserVirtualCurrencyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* AuthenticateSessionTicket(const struct FServerAuthenticateSessionTicketRequest& Request, TDelegate<void(const struct FServerAuthenticateSessionTicketResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* AwardSteamAchievement(const struct FServerAwardSteamAchievementRequest& Request, TDelegate<void(const struct FServerAwardSteamAchievementResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* BanUsers(const struct FServerBanUsersRequest& Request, TDelegate<void(const struct FServerBanUsersResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* ConsumeItem(const struct FServerConsumeItemRequest& Request, TDelegate<void(const struct FServerConsumeItemResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* CreateSharedGroup(const struct FServerCreateSharedGroupRequest& Request, TDelegate<void(const struct FServerCreateSharedGroupResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* DeleteCharacterFromUser(const struct FServerDeleteCharacterFromUserRequest& Request, TDelegate<void(const struct FServerDeleteCharacterFromUserResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* DeletePlayer(const struct FServerDeletePlayerRequest& Request, TDelegate<void(const struct FServerDeletePlayerResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* DeletePushNotificationTemplate(const struct FServerDeletePushNotificationTemplateRequest& Request, TDelegate<void(const struct FServerDeletePushNotificationTemplateResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* DeleteSharedGroup(const struct FServerDeleteSharedGroupRequest& Request, TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* DeregisterGame(const struct FServerDeregisterGameRequest& Request, TDelegate<void(const struct FServerDeregisterGameResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* EvaluateRandomResultTable(const struct FServerEvaluateRandomResultTableRequest& Request, TDelegate<void(const struct FServerEvaluateRandomResultTableResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* ExecuteCloudScript(const struct FServerExecuteCloudScriptServerRequest& Request, TDelegate<void(const struct FServerExecuteCloudScriptResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetAllSegments(const struct FServerGetAllSegmentsRequest& Request, TDelegate<void(const struct FServerGetAllSegmentsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetAllUsersCharacters(const struct FServerListUsersCharactersRequest& Request, TDelegate<void(const struct FServerListUsersCharactersResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetCatalogItems(const struct FServerGetCatalogItemsRequest& Request, TDelegate<void(const struct FServerGetCatalogItemsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetCharacterData(const struct FServerGetCharacterDataRequest& Request, TDelegate<void(const struct FServerGetCharacterDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetCharacterInternalData(const struct FServerGetCharacterDataRequest& Request, TDelegate<void(const struct FServerGetCharacterDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetCharacterInventory(const struct FServerGetCharacterInventoryRequest& Request, TDelegate<void(const struct FServerGetCharacterInventoryResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetCharacterLeaderboard(const struct FServerGetCharacterLeaderboardRequest& Request, TDelegate<void(const struct FServerGetCharacterLeaderboardResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetCharacterReadOnlyData(const struct FServerGetCharacterDataRequest& Request, TDelegate<void(const struct FServerGetCharacterDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetCharacterStatistics(const struct FServerGetCharacterStatisticsRequest& Request, TDelegate<void(const struct FServerGetCharacterStatisticsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetContentDownloadUrl(const struct FServerGetContentDownloadUrlRequest& Request, TDelegate<void(const struct FServerGetContentDownloadUrlResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetFriendLeaderboard(const struct FServerGetFriendLeaderboardRequest& Request, TDelegate<void(const struct FServerGetLeaderboardResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetFriendsList(const struct FServerGetFriendsListRequest& Request, TDelegate<void(const struct FServerGetFriendsListResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetLeaderboard(const struct FServerGetLeaderboardRequest& Request, TDelegate<void(const struct FServerGetLeaderboardResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetLeaderboardAroundCharacter(const struct FServerGetLeaderboardAroundCharacterRequest& Request, TDelegate<void(const struct FServerGetLeaderboardAroundCharacterResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetLeaderboardAroundUser(const struct FServerGetLeaderboardAroundUserRequest& Request, TDelegate<void(const struct FServerGetLeaderboardAroundUserResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetLeaderboardForUserCharacters(const struct FServerGetLeaderboardForUsersCharactersRequest& Request, TDelegate<void(const struct FServerGetLeaderboardForUsersCharactersResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetPlayerCombinedInfo(const struct FServerGetPlayerCombinedInfoRequest& Request, TDelegate<void(const struct FServerGetPlayerCombinedInfoResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetPlayerProfile(const struct FServerGetPlayerProfileRequest& Request, TDelegate<void(const struct FServerGetPlayerProfileResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetPlayerSegments(const struct FServerGetPlayersSegmentsRequest& Request, TDelegate<void(const struct FServerGetPlayerSegmentsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetPlayersInSegment(const struct FServerGetPlayersInSegmentRequest& Request, TDelegate<void(const struct FServerGetPlayersInSegmentResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetPlayerStatistics(const struct FServerGetPlayerStatisticsRequest& Request, TDelegate<void(const struct FServerGetPlayerStatisticsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetPlayerStatisticVersions(const struct FServerGetPlayerStatisticVersionsRequest& Request, TDelegate<void(const struct FServerGetPlayerStatisticVersionsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetPlayerTags(const struct FServerGetPlayerTagsRequest& Request, TDelegate<void(const struct FServerGetPlayerTagsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetPlayFabIDsFromFacebookIDs(const struct FServerGetPlayFabIDsFromFacebookIDsRequest& Request, TDelegate<void(const struct FServerGetPlayFabIDsFromFacebookIDsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetPlayFabIDsFromFacebookInstantGamesIds(const struct FServerGetPlayFabIDsFromFacebookInstantGamesIdsRequest& Request, TDelegate<void(const struct FServerGetPlayFabIDsFromFacebookInstantGamesIdsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetPlayFabIDsFromGenericIDs(const struct FServerGetPlayFabIDsFromGenericIDsRequest& Request, TDelegate<void(const struct FServerGetPlayFabIDsFromGenericIDsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetPlayFabIDsFromNintendoServiceAccountIds(const struct FServerGetPlayFabIDsFromNintendoServiceAccountIdsRequest& Request, TDelegate<void(const struct FServerGetPlayFabIDsFromNintendoServiceAccountIdsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetPlayFabIDsFromNintendoSwitchDeviceIds(const struct FServerGetPlayFabIDsFromNintendoSwitchDeviceIdsRequest& Request, TDelegate<void(const struct FServerGetPlayFabIDsFromNintendoSwitchDeviceIdsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetPlayFabIDsFromPSNAccountIDs(const struct FServerGetPlayFabIDsFromPSNAccountIDsRequest& Request, TDelegate<void(const struct FServerGetPlayFabIDsFromPSNAccountIDsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetPlayFabIDsFromSteamIDs(const struct FServerGetPlayFabIDsFromSteamIDsRequest& Request, TDelegate<void(const struct FServerGetPlayFabIDsFromSteamIDsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetPlayFabIDsFromTwitchIDs(const struct FServerGetPlayFabIDsFromTwitchIDsRequest& Request, TDelegate<void(const struct FServerGetPlayFabIDsFromTwitchIDsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetPlayFabIDsFromXboxLiveIDs(const struct FServerGetPlayFabIDsFromXboxLiveIDsRequest& Request, TDelegate<void(const struct FServerGetPlayFabIDsFromXboxLiveIDsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetPublisherData(const struct FServerGetPublisherDataRequest& Request, TDelegate<void(const struct FServerGetPublisherDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetRandomResultTables(const struct FServerGetRandomResultTablesRequest& Request, TDelegate<void(const struct FServerGetRandomResultTablesResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetServerCustomIDsFromPlayFabIDs(const struct FServerGetServerCustomIDsFromPlayFabIDsRequest& Request, TDelegate<void(const struct FServerGetServerCustomIDsFromPlayFabIDsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetSharedGroupData(const struct FServerGetSharedGroupDataRequest& Request, TDelegate<void(const struct FServerGetSharedGroupDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetStoreItems(const struct FServerGetStoreItemsServerRequest& Request, TDelegate<void(const struct FServerGetStoreItemsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetTime(const struct FServerGetTimeRequest& Request, TDelegate<void(const struct FServerGetTimeResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetTitleData(const struct FServerGetTitleDataRequest& Request, TDelegate<void(const struct FServerGetTitleDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetTitleInternalData(const struct FServerGetTitleDataRequest& Request, TDelegate<void(const struct FServerGetTitleDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetTitleNews(const struct FServerGetTitleNewsRequest& Request, TDelegate<void(const struct FServerGetTitleNewsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetUserAccountInfo(const struct FServerGetUserAccountInfoRequest& Request, TDelegate<void(const struct FServerGetUserAccountInfoResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetUserBans(const struct FServerGetUserBansRequest& Request, TDelegate<void(const struct FServerGetUserBansResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetUserData(const struct FServerGetUserDataRequest& Request, TDelegate<void(const struct FServerGetUserDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetUserInternalData(const struct FServerGetUserDataRequest& Request, TDelegate<void(const struct FServerGetUserDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetUserInventory(const struct FServerGetUserInventoryRequest& Request, TDelegate<void(const struct FServerGetUserInventoryResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetUserPublisherData(const struct FServerGetUserDataRequest& Request, TDelegate<void(const struct FServerGetUserDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetUserPublisherInternalData(const struct FServerGetUserDataRequest& Request, TDelegate<void(const struct FServerGetUserDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetUserPublisherReadOnlyData(const struct FServerGetUserDataRequest& Request, TDelegate<void(const struct FServerGetUserDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GetUserReadOnlyData(const struct FServerGetUserDataRequest& Request, TDelegate<void(const struct FServerGetUserDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GrantCharacterToUser(const struct FServerGrantCharacterToUserRequest& Request, TDelegate<void(const struct FServerGrantCharacterToUserResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GrantItemsToCharacter(const struct FServerGrantItemsToCharacterRequest& Request, TDelegate<void(const struct FServerGrantItemsToCharacterResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GrantItemsToUser(const struct FServerGrantItemsToUserRequest& Request, TDelegate<void(const struct FServerGrantItemsToUserResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* GrantItemsToUsers(const struct FServerGrantItemsToUsersRequest& Request, TDelegate<void(const struct FServerGrantItemsToUsersResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* LinkNintendoServiceAccount(const struct FServerLinkNintendoServiceAccountRequest& Request, TDelegate<void(const struct FServerEmptyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* LinkNintendoSwitchDeviceId(const struct FServerLinkNintendoSwitchDeviceIdRequest& Request, TDelegate<void(const struct FServerLinkNintendoSwitchDeviceIdResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* LinkPSNAccount(const struct FServerLinkPSNAccountRequest& Request, TDelegate<void(const struct FServerLinkPSNAccountResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* LinkServerCustomId(const struct FServerLinkServerCustomIdRequest& Request, TDelegate<void(const struct FServerLinkServerCustomIdResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* LinkSteamId(const struct FServerLinkSteamIdRequest& Request, TDelegate<void(const struct FServerLinkSteamIdResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* LinkXboxAccount(const struct FServerLinkXboxAccountRequest& Request, TDelegate<void(const struct FServerLinkXboxAccountResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* LoginWithServerCustomId(const struct FServerLoginWithServerCustomIdRequest& Request, TDelegate<void(const struct FServerServerLoginResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* LoginWithSteamId(const struct FServerLoginWithSteamIdRequest& Request, TDelegate<void(const struct FServerServerLoginResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* LoginWithXbox(const struct FServerLoginWithXboxRequest& Request, TDelegate<void(const struct FServerServerLoginResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* LoginWithXboxId(const struct FServerLoginWithXboxIdRequest& Request, TDelegate<void(const struct FServerServerLoginResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* ModifyItemUses(const struct FServerModifyItemUsesRequest& Request, TDelegate<void(const struct FServerModifyItemUsesResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* MoveItemToCharacterFromCharacter(const struct FServerMoveItemToCharacterFromCharacterRequest& Request, TDelegate<void(const struct FServerMoveItemToCharacterFromCharacterResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* MoveItemToCharacterFromUser(const struct FServerMoveItemToCharacterFromUserRequest& Request, TDelegate<void(const struct FServerMoveItemToCharacterFromUserResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* MoveItemToUserFromCharacter(const struct FServerMoveItemToUserFromCharacterRequest& Request, TDelegate<void(const struct FServerMoveItemToUserFromCharacterResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* NotifyMatchmakerPlayerLeft(const struct FServerNotifyMatchmakerPlayerLeftRequest& Request, TDelegate<void(const struct FServerNotifyMatchmakerPlayerLeftResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* RedeemCoupon(const struct FServerRedeemCouponRequest& Request, TDelegate<void(const struct FServerRedeemCouponResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* RedeemMatchmakerTicket(const struct FServerRedeemMatchmakerTicketRequest& Request, TDelegate<void(const struct FServerRedeemMatchmakerTicketResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* RefreshGameServerInstanceHeartbeat(const struct FServerRefreshGameServerInstanceHeartbeatRequest& Request, TDelegate<void(const struct FServerRefreshGameServerInstanceHeartbeatResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* RegisterGame(const struct FServerRegisterGameRequest& Request, TDelegate<void(const struct FServerRegisterGameResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* RemoveFriend(const struct FServerRemoveFriendRequest& Request, TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* RemoveGenericID(const struct FServerRemoveGenericIDRequest& Request, TDelegate<void(const struct FServerEmptyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* RemovePlayerTag(const struct FServerRemovePlayerTagRequest& Request, TDelegate<void(const struct FServerRemovePlayerTagResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* RemoveSharedGroupMembers(const struct FServerRemoveSharedGroupMembersRequest& Request, TDelegate<void(const struct FServerRemoveSharedGroupMembersResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* ReportPlayer(const struct FServerReportPlayerServerRequest& Request, TDelegate<void(const struct FServerReportPlayerServerResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* RevokeAllBansForUser(const struct FServerRevokeAllBansForUserRequest& Request, TDelegate<void(const struct FServerRevokeAllBansForUserResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* RevokeBans(const struct FServerRevokeBansRequest& Request, TDelegate<void(const struct FServerRevokeBansResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* RevokeInventoryItem(const struct FServerRevokeInventoryItemRequest& Request, TDelegate<void(const struct FServerRevokeInventoryResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* RevokeInventoryItems(const struct FServerRevokeInventoryItemsRequest& Request, TDelegate<void(const struct FServerRevokeInventoryItemsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* SavePushNotificationTemplate(const struct FServerSavePushNotificationTemplateRequest& Request, TDelegate<void(const struct FServerSavePushNotificationTemplateResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* SendCustomAccountRecoveryEmail(const struct FServerSendCustomAccountRecoveryEmailRequest& Request, TDelegate<void(const struct FServerSendCustomAccountRecoveryEmailResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* SendEmailFromTemplate(const struct FServerSendEmailFromTemplateRequest& Request, TDelegate<void(const struct FServerSendEmailFromTemplateResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* SendPushNotification(const struct FServerSendPushNotificationRequest& Request, TDelegate<void(const struct FServerSendPushNotificationResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* SendPushNotificationFromTemplate(const struct FServerSendPushNotificationFromTemplateRequest& Request, TDelegate<void(const struct FServerSendPushNotificationResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* SetFriendTags(const struct FServerSetFriendTagsRequest& Request, TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* SetGameServerInstanceData(const struct FServerSetGameServerInstanceDataRequest& Request, TDelegate<void(const struct FServerSetGameServerInstanceDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* SetGameServerInstanceState(const struct FServerSetGameServerInstanceStateRequest& Request, TDelegate<void(const struct FServerSetGameServerInstanceStateResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* SetGameServerInstanceTags(const struct FServerSetGameServerInstanceTagsRequest& Request, TDelegate<void(const struct FServerSetGameServerInstanceTagsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* SetPlayerSecret(const struct FServerSetPlayerSecretRequest& Request, TDelegate<void(const struct FServerSetPlayerSecretResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* SetPublisherData(const struct FServerSetPublisherDataRequest& Request, TDelegate<void(const struct FServerSetPublisherDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* SetTitleData(const struct FServerSetTitleDataRequest& Request, TDelegate<void(const struct FServerSetTitleDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* SetTitleInternalData(const struct FServerSetTitleDataRequest& Request, TDelegate<void(const struct FServerSetTitleDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* SubtractCharacterVirtualCurrency(const struct FServerSubtractCharacterVirtualCurrencyRequest& Request, TDelegate<void(const struct FServerModifyCharacterVirtualCurrencyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* SubtractUserVirtualCurrency(const struct FServerSubtractUserVirtualCurrencyRequest& Request, TDelegate<void(const struct FServerModifyUserVirtualCurrencyResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* UnlinkNintendoServiceAccount(const struct FServerUnlinkNintendoServiceAccountRequest& Request, TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* UnlinkNintendoSwitchDeviceId(const struct FServerUnlinkNintendoSwitchDeviceIdRequest& Request, TDelegate<void(const struct FServerUnlinkNintendoSwitchDeviceIdResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* UnlinkPSNAccount(const struct FServerUnlinkPSNAccountRequest& Request, TDelegate<void(const struct FServerUnlinkPSNAccountResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* UnlinkServerCustomId(const struct FServerUnlinkServerCustomIdRequest& Request, TDelegate<void(const struct FServerUnlinkServerCustomIdResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* UnlinkSteamId(const struct FServerUnlinkSteamIdRequest& Request, TDelegate<void(const struct FServerUnlinkSteamIdResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* UnlinkXboxAccount(const struct FServerUnlinkXboxAccountRequest& Request, TDelegate<void(const struct FServerUnlinkXboxAccountResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* UnlockContainerInstance(const struct FServerUnlockContainerInstanceRequest& Request, TDelegate<void(const struct FServerUnlockContainerItemResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* UnlockContainerItem(const struct FServerUnlockContainerItemRequest& Request, TDelegate<void(const struct FServerUnlockContainerItemResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* UpdateAvatarUrl(const struct FServerUpdateAvatarUrlRequest& Request, TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* UpdateBans(const struct FServerUpdateBansRequest& Request, TDelegate<void(const struct FServerUpdateBansResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* UpdateCharacterData(const struct FServerUpdateCharacterDataRequest& Request, TDelegate<void(const struct FServerUpdateCharacterDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* UpdateCharacterInternalData(const struct FServerUpdateCharacterDataRequest& Request, TDelegate<void(const struct FServerUpdateCharacterDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* UpdateCharacterReadOnlyData(const struct FServerUpdateCharacterDataRequest& Request, TDelegate<void(const struct FServerUpdateCharacterDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* UpdateCharacterStatistics(const struct FServerUpdateCharacterStatisticsRequest& Request, TDelegate<void(const struct FServerUpdateCharacterStatisticsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* UpdatePlayerStatistics(const struct FServerUpdatePlayerStatisticsRequest& Request, TDelegate<void(const struct FServerUpdatePlayerStatisticsResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* UpdateSharedGroupData(const struct FServerUpdateSharedGroupDataRequest& Request, TDelegate<void(const struct FServerUpdateSharedGroupDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* UpdateUserData(const struct FServerUpdateUserDataRequest& Request, TDelegate<void(const struct FServerUpdateUserDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* UpdateUserInternalData(const struct FServerUpdateUserInternalDataRequest& Request, TDelegate<void(const struct FServerUpdateUserDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* UpdateUserInventoryItemCustomData(const struct FServerUpdateUserInventoryItemDataRequest& Request, TDelegate<void(const struct FServerEmptyResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* UpdateUserPublisherData(const struct FServerUpdateUserDataRequest& Request, TDelegate<void(const struct FServerUpdateUserDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* UpdateUserPublisherInternalData(const struct FServerUpdateUserInternalDataRequest& Request, TDelegate<void(const struct FServerUpdateUserDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* UpdateUserPublisherReadOnlyData(const struct FServerUpdateUserDataRequest& Request, TDelegate<void(const struct FServerUpdateUserDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* UpdateUserReadOnlyData(const struct FServerUpdateUserDataRequest& Request, TDelegate<void(const struct FServerUpdateUserDataResult& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* WriteCharacterEvent(const struct FServerWriteServerCharacterEventRequest& Request, TDelegate<void(const struct FServerWriteEventResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* WritePlayerEvent(const struct FServerWriteServerPlayerEventRequest& Request, TDelegate<void(const struct FServerWriteEventResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);
	static class UPlayFabServerAPI* WriteTitleEvent(const struct FServerWriteTitleEventRequest& Request, TDelegate<void(const struct FServerWriteEventResponse& Result, class UObject* CustomData)> OnSuccess, TDelegate<void(const struct FPlayFabError& Error, class UObject* CustomData)> OnFailure, class UObject* CustomData);

	void DelegateOnFailurePlayFabError__DelegateSignature(const struct FPlayFabError& Error, class UObject* CustomData);
	void DelegateOnSuccessAddCharacterVirtualCurrency__DelegateSignature(const struct FServerModifyCharacterVirtualCurrencyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessAddFriend__DelegateSignature(const struct FServerEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessAddGenericID__DelegateSignature(const struct FServerEmptyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessAddPlayerTag__DelegateSignature(const struct FServerAddPlayerTagResult& Result, class UObject* CustomData);
	void DelegateOnSuccessAddSharedGroupMembers__DelegateSignature(const struct FServerAddSharedGroupMembersResult& Result, class UObject* CustomData);
	void DelegateOnSuccessAddUserVirtualCurrency__DelegateSignature(const struct FServerModifyUserVirtualCurrencyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessAuthenticateSessionTicket__DelegateSignature(const struct FServerAuthenticateSessionTicketResult& Result, class UObject* CustomData);
	void DelegateOnSuccessAwardSteamAchievement__DelegateSignature(const struct FServerAwardSteamAchievementResult& Result, class UObject* CustomData);
	void DelegateOnSuccessBanUsers__DelegateSignature(const struct FServerBanUsersResult& Result, class UObject* CustomData);
	void DelegateOnSuccessConsumeItem__DelegateSignature(const struct FServerConsumeItemResult& Result, class UObject* CustomData);
	void DelegateOnSuccessCreateSharedGroup__DelegateSignature(const struct FServerCreateSharedGroupResult& Result, class UObject* CustomData);
	void DelegateOnSuccessDeleteCharacterFromUser__DelegateSignature(const struct FServerDeleteCharacterFromUserResult& Result, class UObject* CustomData);
	void DelegateOnSuccessDeletePlayer__DelegateSignature(const struct FServerDeletePlayerResult& Result, class UObject* CustomData);
	void DelegateOnSuccessDeletePushNotificationTemplate__DelegateSignature(const struct FServerDeletePushNotificationTemplateResult& Result, class UObject* CustomData);
	void DelegateOnSuccessDeleteSharedGroup__DelegateSignature(const struct FServerEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessDeregisterGame__DelegateSignature(const struct FServerDeregisterGameResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessEvaluateRandomResultTable__DelegateSignature(const struct FServerEvaluateRandomResultTableResult& Result, class UObject* CustomData);
	void DelegateOnSuccessExecuteCloudScript__DelegateSignature(const struct FServerExecuteCloudScriptResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetAllSegments__DelegateSignature(const struct FServerGetAllSegmentsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetAllUsersCharacters__DelegateSignature(const struct FServerListUsersCharactersResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetCatalogItems__DelegateSignature(const struct FServerGetCatalogItemsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetCharacterData__DelegateSignature(const struct FServerGetCharacterDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetCharacterInternalData__DelegateSignature(const struct FServerGetCharacterDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetCharacterInventory__DelegateSignature(const struct FServerGetCharacterInventoryResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetCharacterLeaderboard__DelegateSignature(const struct FServerGetCharacterLeaderboardResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetCharacterReadOnlyData__DelegateSignature(const struct FServerGetCharacterDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetCharacterStatistics__DelegateSignature(const struct FServerGetCharacterStatisticsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetContentDownloadUrl__DelegateSignature(const struct FServerGetContentDownloadUrlResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetFriendLeaderboard__DelegateSignature(const struct FServerGetLeaderboardResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetFriendsList__DelegateSignature(const struct FServerGetFriendsListResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetLeaderboard__DelegateSignature(const struct FServerGetLeaderboardResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetLeaderboardAroundCharacter__DelegateSignature(const struct FServerGetLeaderboardAroundCharacterResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetLeaderboardAroundUser__DelegateSignature(const struct FServerGetLeaderboardAroundUserResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetLeaderboardForUserCharacters__DelegateSignature(const struct FServerGetLeaderboardForUsersCharactersResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayerCombinedInfo__DelegateSignature(const struct FServerGetPlayerCombinedInfoResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayerProfile__DelegateSignature(const struct FServerGetPlayerProfileResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayerSegments__DelegateSignature(const struct FServerGetPlayerSegmentsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayersInSegment__DelegateSignature(const struct FServerGetPlayersInSegmentResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayerStatistics__DelegateSignature(const struct FServerGetPlayerStatisticsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayerStatisticVersions__DelegateSignature(const struct FServerGetPlayerStatisticVersionsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayerTags__DelegateSignature(const struct FServerGetPlayerTagsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayFabIDsFromFacebookIDs__DelegateSignature(const struct FServerGetPlayFabIDsFromFacebookIDsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayFabIDsFromFacebookInstantGamesIds__DelegateSignature(const struct FServerGetPlayFabIDsFromFacebookInstantGamesIdsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayFabIDsFromGenericIDs__DelegateSignature(const struct FServerGetPlayFabIDsFromGenericIDsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayFabIDsFromNintendoServiceAccountIds__DelegateSignature(const struct FServerGetPlayFabIDsFromNintendoServiceAccountIdsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayFabIDsFromNintendoSwitchDeviceIds__DelegateSignature(const struct FServerGetPlayFabIDsFromNintendoSwitchDeviceIdsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayFabIDsFromPSNAccountIDs__DelegateSignature(const struct FServerGetPlayFabIDsFromPSNAccountIDsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayFabIDsFromSteamIDs__DelegateSignature(const struct FServerGetPlayFabIDsFromSteamIDsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayFabIDsFromTwitchIDs__DelegateSignature(const struct FServerGetPlayFabIDsFromTwitchIDsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPlayFabIDsFromXboxLiveIDs__DelegateSignature(const struct FServerGetPlayFabIDsFromXboxLiveIDsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetPublisherData__DelegateSignature(const struct FServerGetPublisherDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetRandomResultTables__DelegateSignature(const struct FServerGetRandomResultTablesResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetServerCustomIDsFromPlayFabIDs__DelegateSignature(const struct FServerGetServerCustomIDsFromPlayFabIDsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetSharedGroupData__DelegateSignature(const struct FServerGetSharedGroupDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetStoreItems__DelegateSignature(const struct FServerGetStoreItemsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetTime__DelegateSignature(const struct FServerGetTimeResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetTitleData__DelegateSignature(const struct FServerGetTitleDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetTitleInternalData__DelegateSignature(const struct FServerGetTitleDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetTitleNews__DelegateSignature(const struct FServerGetTitleNewsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetUserAccountInfo__DelegateSignature(const struct FServerGetUserAccountInfoResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetUserBans__DelegateSignature(const struct FServerGetUserBansResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetUserData__DelegateSignature(const struct FServerGetUserDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetUserInternalData__DelegateSignature(const struct FServerGetUserDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetUserInventory__DelegateSignature(const struct FServerGetUserInventoryResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetUserPublisherData__DelegateSignature(const struct FServerGetUserDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetUserPublisherInternalData__DelegateSignature(const struct FServerGetUserDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetUserPublisherReadOnlyData__DelegateSignature(const struct FServerGetUserDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGetUserReadOnlyData__DelegateSignature(const struct FServerGetUserDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGrantCharacterToUser__DelegateSignature(const struct FServerGrantCharacterToUserResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGrantItemsToCharacter__DelegateSignature(const struct FServerGrantItemsToCharacterResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGrantItemsToUser__DelegateSignature(const struct FServerGrantItemsToUserResult& Result, class UObject* CustomData);
	void DelegateOnSuccessGrantItemsToUsers__DelegateSignature(const struct FServerGrantItemsToUsersResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLinkNintendoServiceAccount__DelegateSignature(const struct FServerEmptyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLinkNintendoSwitchDeviceId__DelegateSignature(const struct FServerLinkNintendoSwitchDeviceIdResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLinkPSNAccount__DelegateSignature(const struct FServerLinkPSNAccountResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLinkServerCustomId__DelegateSignature(const struct FServerLinkServerCustomIdResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLinkSteamId__DelegateSignature(const struct FServerLinkSteamIdResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLinkXboxAccount__DelegateSignature(const struct FServerLinkXboxAccountResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLoginWithServerCustomId__DelegateSignature(const struct FServerServerLoginResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLoginWithSteamId__DelegateSignature(const struct FServerServerLoginResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLoginWithXbox__DelegateSignature(const struct FServerServerLoginResult& Result, class UObject* CustomData);
	void DelegateOnSuccessLoginWithXboxId__DelegateSignature(const struct FServerServerLoginResult& Result, class UObject* CustomData);
	void DelegateOnSuccessModifyItemUses__DelegateSignature(const struct FServerModifyItemUsesResult& Result, class UObject* CustomData);
	void DelegateOnSuccessMoveItemToCharacterFromCharacter__DelegateSignature(const struct FServerMoveItemToCharacterFromCharacterResult& Result, class UObject* CustomData);
	void DelegateOnSuccessMoveItemToCharacterFromUser__DelegateSignature(const struct FServerMoveItemToCharacterFromUserResult& Result, class UObject* CustomData);
	void DelegateOnSuccessMoveItemToUserFromCharacter__DelegateSignature(const struct FServerMoveItemToUserFromCharacterResult& Result, class UObject* CustomData);
	void DelegateOnSuccessNotifyMatchmakerPlayerLeft__DelegateSignature(const struct FServerNotifyMatchmakerPlayerLeftResult& Result, class UObject* CustomData);
	void DelegateOnSuccessRedeemCoupon__DelegateSignature(const struct FServerRedeemCouponResult& Result, class UObject* CustomData);
	void DelegateOnSuccessRedeemMatchmakerTicket__DelegateSignature(const struct FServerRedeemMatchmakerTicketResult& Result, class UObject* CustomData);
	void DelegateOnSuccessRefreshGameServerInstanceHeartbeat__DelegateSignature(const struct FServerRefreshGameServerInstanceHeartbeatResult& Result, class UObject* CustomData);
	void DelegateOnSuccessRegisterGame__DelegateSignature(const struct FServerRegisterGameResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessRemoveFriend__DelegateSignature(const struct FServerEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessRemoveGenericID__DelegateSignature(const struct FServerEmptyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessRemovePlayerTag__DelegateSignature(const struct FServerRemovePlayerTagResult& Result, class UObject* CustomData);
	void DelegateOnSuccessRemoveSharedGroupMembers__DelegateSignature(const struct FServerRemoveSharedGroupMembersResult& Result, class UObject* CustomData);
	void DelegateOnSuccessReportPlayer__DelegateSignature(const struct FServerReportPlayerServerResult& Result, class UObject* CustomData);
	void DelegateOnSuccessRevokeAllBansForUser__DelegateSignature(const struct FServerRevokeAllBansForUserResult& Result, class UObject* CustomData);
	void DelegateOnSuccessRevokeBans__DelegateSignature(const struct FServerRevokeBansResult& Result, class UObject* CustomData);
	void DelegateOnSuccessRevokeInventoryItem__DelegateSignature(const struct FServerRevokeInventoryResult& Result, class UObject* CustomData);
	void DelegateOnSuccessRevokeInventoryItems__DelegateSignature(const struct FServerRevokeInventoryItemsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessSavePushNotificationTemplate__DelegateSignature(const struct FServerSavePushNotificationTemplateResult& Result, class UObject* CustomData);
	void DelegateOnSuccessSendCustomAccountRecoveryEmail__DelegateSignature(const struct FServerSendCustomAccountRecoveryEmailResult& Result, class UObject* CustomData);
	void DelegateOnSuccessSendEmailFromTemplate__DelegateSignature(const struct FServerSendEmailFromTemplateResult& Result, class UObject* CustomData);
	void DelegateOnSuccessSendPushNotification__DelegateSignature(const struct FServerSendPushNotificationResult& Result, class UObject* CustomData);
	void DelegateOnSuccessSendPushNotificationFromTemplate__DelegateSignature(const struct FServerSendPushNotificationResult& Result, class UObject* CustomData);
	void DelegateOnSuccessSetFriendTags__DelegateSignature(const struct FServerEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessSetGameServerInstanceData__DelegateSignature(const struct FServerSetGameServerInstanceDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessSetGameServerInstanceState__DelegateSignature(const struct FServerSetGameServerInstanceStateResult& Result, class UObject* CustomData);
	void DelegateOnSuccessSetGameServerInstanceTags__DelegateSignature(const struct FServerSetGameServerInstanceTagsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessSetPlayerSecret__DelegateSignature(const struct FServerSetPlayerSecretResult& Result, class UObject* CustomData);
	void DelegateOnSuccessSetPublisherData__DelegateSignature(const struct FServerSetPublisherDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessSetTitleData__DelegateSignature(const struct FServerSetTitleDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessSetTitleInternalData__DelegateSignature(const struct FServerSetTitleDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessSubtractCharacterVirtualCurrency__DelegateSignature(const struct FServerModifyCharacterVirtualCurrencyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessSubtractUserVirtualCurrency__DelegateSignature(const struct FServerModifyUserVirtualCurrencyResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUnlinkNintendoServiceAccount__DelegateSignature(const struct FServerEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessUnlinkNintendoSwitchDeviceId__DelegateSignature(const struct FServerUnlinkNintendoSwitchDeviceIdResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUnlinkPSNAccount__DelegateSignature(const struct FServerUnlinkPSNAccountResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUnlinkServerCustomId__DelegateSignature(const struct FServerUnlinkServerCustomIdResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUnlinkSteamId__DelegateSignature(const struct FServerUnlinkSteamIdResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUnlinkXboxAccount__DelegateSignature(const struct FServerUnlinkXboxAccountResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUnlockContainerInstance__DelegateSignature(const struct FServerUnlockContainerItemResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUnlockContainerItem__DelegateSignature(const struct FServerUnlockContainerItemResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateAvatarUrl__DelegateSignature(const struct FServerEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateBans__DelegateSignature(const struct FServerUpdateBansResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateCharacterData__DelegateSignature(const struct FServerUpdateCharacterDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateCharacterInternalData__DelegateSignature(const struct FServerUpdateCharacterDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateCharacterReadOnlyData__DelegateSignature(const struct FServerUpdateCharacterDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateCharacterStatistics__DelegateSignature(const struct FServerUpdateCharacterStatisticsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdatePlayerStatistics__DelegateSignature(const struct FServerUpdatePlayerStatisticsResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateSharedGroupData__DelegateSignature(const struct FServerUpdateSharedGroupDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateUserData__DelegateSignature(const struct FServerUpdateUserDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateUserInternalData__DelegateSignature(const struct FServerUpdateUserDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateUserInventoryItemCustomData__DelegateSignature(const struct FServerEmptyResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateUserPublisherData__DelegateSignature(const struct FServerUpdateUserDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateUserPublisherInternalData__DelegateSignature(const struct FServerUpdateUserDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateUserPublisherReadOnlyData__DelegateSignature(const struct FServerUpdateUserDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessUpdateUserReadOnlyData__DelegateSignature(const struct FServerUpdateUserDataResult& Result, class UObject* CustomData);
	void DelegateOnSuccessWriteCharacterEvent__DelegateSignature(const struct FServerWriteEventResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessWritePlayerEvent__DelegateSignature(const struct FServerWriteEventResponse& Result, class UObject* CustomData);
	void DelegateOnSuccessWriteTitleEvent__DelegateSignature(const struct FServerWriteEventResponse& Result, class UObject* CustomData);
	void HelperAddCharacterVirtualCurrency(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperAddFriend(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperAddGenericID(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperAddPlayerTag(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperAddSharedGroupMembers(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperAddUserVirtualCurrency(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperAuthenticateSessionTicket(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperAwardSteamAchievement(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperBanUsers(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperConsumeItem(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperCreateSharedGroup(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeleteCharacterFromUser(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeletePlayer(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeletePushNotificationTemplate(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeleteSharedGroup(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperDeregisterGame(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperEvaluateRandomResultTable(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperExecuteCloudScript(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetAllSegments(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetAllUsersCharacters(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetCatalogItems(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetCharacterData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetCharacterInternalData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetCharacterInventory(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetCharacterLeaderboard(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetCharacterReadOnlyData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetCharacterStatistics(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetContentDownloadUrl(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetFriendLeaderboard(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetFriendsList(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetLeaderboard(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetLeaderboardAroundCharacter(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetLeaderboardAroundUser(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetLeaderboardForUserCharacters(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayerCombinedInfo(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayerProfile(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayerSegments(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayersInSegment(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayerStatistics(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayerStatisticVersions(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayerTags(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayFabIDsFromFacebookIDs(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayFabIDsFromFacebookInstantGamesIds(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayFabIDsFromGenericIDs(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayFabIDsFromNintendoServiceAccountIds(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayFabIDsFromNintendoSwitchDeviceIds(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayFabIDsFromPSNAccountIDs(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayFabIDsFromSteamIDs(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayFabIDsFromTwitchIDs(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPlayFabIDsFromXboxLiveIDs(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetPublisherData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetRandomResultTables(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetServerCustomIDsFromPlayFabIDs(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetSharedGroupData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetStoreItems(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetTime(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetTitleData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetTitleInternalData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetTitleNews(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetUserAccountInfo(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetUserBans(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetUserData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetUserInternalData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetUserInventory(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetUserPublisherData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetUserPublisherInternalData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetUserPublisherReadOnlyData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGetUserReadOnlyData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGrantCharacterToUser(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGrantItemsToCharacter(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGrantItemsToUser(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperGrantItemsToUsers(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLinkNintendoServiceAccount(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLinkNintendoSwitchDeviceId(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLinkPSNAccount(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLinkServerCustomId(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLinkSteamId(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLinkXboxAccount(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLoginWithServerCustomId(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLoginWithSteamId(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLoginWithXbox(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperLoginWithXboxId(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperModifyItemUses(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperMoveItemToCharacterFromCharacter(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperMoveItemToCharacterFromUser(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperMoveItemToUserFromCharacter(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperNotifyMatchmakerPlayerLeft(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRedeemCoupon(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRedeemMatchmakerTicket(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRefreshGameServerInstanceHeartbeat(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRegisterGame(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRemoveFriend(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRemoveGenericID(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRemovePlayerTag(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRemoveSharedGroupMembers(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperReportPlayer(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRevokeAllBansForUser(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRevokeBans(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRevokeInventoryItem(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperRevokeInventoryItems(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSavePushNotificationTemplate(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSendCustomAccountRecoveryEmail(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSendEmailFromTemplate(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSendPushNotification(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSendPushNotificationFromTemplate(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSetFriendTags(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSetGameServerInstanceData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSetGameServerInstanceState(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSetGameServerInstanceTags(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSetPlayerSecret(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSetPublisherData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSetTitleData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSetTitleInternalData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSubtractCharacterVirtualCurrency(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperSubtractUserVirtualCurrency(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUnlinkNintendoServiceAccount(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUnlinkNintendoSwitchDeviceId(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUnlinkPSNAccount(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUnlinkServerCustomId(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUnlinkSteamId(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUnlinkXboxAccount(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUnlockContainerInstance(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUnlockContainerItem(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateAvatarUrl(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateBans(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateCharacterData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateCharacterInternalData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateCharacterReadOnlyData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateCharacterStatistics(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdatePlayerStatistics(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateSharedGroupData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateUserData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateUserInternalData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateUserInventoryItemCustomData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateUserPublisherData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateUserPublisherInternalData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateUserPublisherReadOnlyData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperUpdateUserReadOnlyData(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperWriteCharacterEvent(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperWritePlayerEvent(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);
	void HelperWriteTitleEvent(const struct FPlayFabBaseModel& Response, class UObject* CustomData, bool Successful);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabServerAPI">();
	}
	static class UPlayFabServerAPI* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabServerAPI>();
	}
};
static_assert(alignof(UPlayFabServerAPI) == 0x000008, "Wrong alignment on UPlayFabServerAPI");
static_assert(sizeof(UPlayFabServerAPI) == 0x0009C0, "Wrong size on UPlayFabServerAPI");
static_assert(offsetof(UPlayFabServerAPI, OnPlayFabResponse) == 0x000030, "Member 'UPlayFabServerAPI::OnPlayFabResponse' has a wrong offset!");
static_assert(offsetof(UPlayFabServerAPI, CallAuthenticationContext) == 0x000958, "Member 'UPlayFabServerAPI::CallAuthenticationContext' has a wrong offset!");
static_assert(offsetof(UPlayFabServerAPI, RequestJsonObj) == 0x000960, "Member 'UPlayFabServerAPI::RequestJsonObj' has a wrong offset!");
static_assert(offsetof(UPlayFabServerAPI, ResponseJsonObj) == 0x000968, "Member 'UPlayFabServerAPI::ResponseJsonObj' has a wrong offset!");

// Class PlayFab.PlayFabServerModelDecoder
// 0x0000 (0x0028 - 0x0028)
class UPlayFabServerModelDecoder final : public UBlueprintFunctionLibrary
{
public:
	static struct FServerAddPlayerTagResult DecodeAddPlayerTagResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerAddSharedGroupMembersResult DecodeAddSharedGroupMembersResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerAuthenticateSessionTicketResult DecodeAuthenticateSessionTicketResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerAwardSteamAchievementResult DecodeAwardSteamAchievementResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerBanUsersResult DecodeBanUsersResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerConsumeItemResult DecodeConsumeItemResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerCreateSharedGroupResult DecodeCreateSharedGroupResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerDeleteCharacterFromUserResult DecodeDeleteCharacterFromUserResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerDeletePlayerResult DecodeDeletePlayerResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerDeletePushNotificationTemplateResult DecodeDeletePushNotificationTemplateResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerDeregisterGameResponse DecodeDeregisterGameResponseResponse(class UPlayFabJsonObject* Response);
	static struct FServerEmptyResponse DecodeEmptyResponseResponse(class UPlayFabJsonObject* Response);
	static struct FServerEmptyResult DecodeEmptyResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerEvaluateRandomResultTableResult DecodeEvaluateRandomResultTableResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerExecuteCloudScriptResult DecodeExecuteCloudScriptResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetAllSegmentsResult DecodeGetAllSegmentsResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetCatalogItemsResult DecodeGetCatalogItemsResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetCharacterDataResult DecodeGetCharacterDataResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetCharacterInventoryResult DecodeGetCharacterInventoryResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetCharacterLeaderboardResult DecodeGetCharacterLeaderboardResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetCharacterStatisticsResult DecodeGetCharacterStatisticsResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetContentDownloadUrlResult DecodeGetContentDownloadUrlResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetFriendsListResult DecodeGetFriendsListResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetLeaderboardAroundCharacterResult DecodeGetLeaderboardAroundCharacterResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetLeaderboardAroundUserResult DecodeGetLeaderboardAroundUserResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetLeaderboardForUsersCharactersResult DecodeGetLeaderboardForUsersCharactersResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetLeaderboardResult DecodeGetLeaderboardResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetPlayerCombinedInfoResult DecodeGetPlayerCombinedInfoResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetPlayerProfileResult DecodeGetPlayerProfileResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetPlayerSegmentsResult DecodeGetPlayerSegmentsResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetPlayersInSegmentResult DecodeGetPlayersInSegmentResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetPlayerStatisticsResult DecodeGetPlayerStatisticsResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetPlayerStatisticVersionsResult DecodeGetPlayerStatisticVersionsResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetPlayerTagsResult DecodeGetPlayerTagsResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetPlayFabIDsFromFacebookIDsResult DecodeGetPlayFabIDsFromFacebookIDsResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetPlayFabIDsFromFacebookInstantGamesIdsResult DecodeGetPlayFabIDsFromFacebookInstantGamesIdsResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetPlayFabIDsFromGenericIDsResult DecodeGetPlayFabIDsFromGenericIDsResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetPlayFabIDsFromNintendoServiceAccountIdsResult DecodeGetPlayFabIDsFromNintendoServiceAccountIdsResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetPlayFabIDsFromNintendoSwitchDeviceIdsResult DecodeGetPlayFabIDsFromNintendoSwitchDeviceIdsResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetPlayFabIDsFromPSNAccountIDsResult DecodeGetPlayFabIDsFromPSNAccountIDsResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetPlayFabIDsFromSteamIDsResult DecodeGetPlayFabIDsFromSteamIDsResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetPlayFabIDsFromTwitchIDsResult DecodeGetPlayFabIDsFromTwitchIDsResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetPlayFabIDsFromXboxLiveIDsResult DecodeGetPlayFabIDsFromXboxLiveIDsResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetPublisherDataResult DecodeGetPublisherDataResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetRandomResultTablesResult DecodeGetRandomResultTablesResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetServerCustomIDsFromPlayFabIDsResult DecodeGetServerCustomIDsFromPlayFabIDsResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetSharedGroupDataResult DecodeGetSharedGroupDataResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetStoreItemsResult DecodeGetStoreItemsResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetTimeResult DecodeGetTimeResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetTitleDataResult DecodeGetTitleDataResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetTitleNewsResult DecodeGetTitleNewsResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetUserAccountInfoResult DecodeGetUserAccountInfoResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetUserBansResult DecodeGetUserBansResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetUserDataResult DecodeGetUserDataResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGetUserInventoryResult DecodeGetUserInventoryResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGrantCharacterToUserResult DecodeGrantCharacterToUserResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGrantItemsToCharacterResult DecodeGrantItemsToCharacterResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGrantItemsToUserResult DecodeGrantItemsToUserResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerGrantItemsToUsersResult DecodeGrantItemsToUsersResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerLinkNintendoSwitchDeviceIdResult DecodeLinkNintendoSwitchDeviceIdResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerLinkPSNAccountResult DecodeLinkPSNAccountResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerLinkServerCustomIdResult DecodeLinkServerCustomIdResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerLinkSteamIdResult DecodeLinkSteamIdResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerLinkXboxAccountResult DecodeLinkXboxAccountResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerListUsersCharactersResult DecodeListUsersCharactersResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerModifyCharacterVirtualCurrencyResult DecodeModifyCharacterVirtualCurrencyResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerModifyItemUsesResult DecodeModifyItemUsesResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerModifyUserVirtualCurrencyResult DecodeModifyUserVirtualCurrencyResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerMoveItemToCharacterFromCharacterResult DecodeMoveItemToCharacterFromCharacterResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerMoveItemToCharacterFromUserResult DecodeMoveItemToCharacterFromUserResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerMoveItemToUserFromCharacterResult DecodeMoveItemToUserFromCharacterResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerNotifyMatchmakerPlayerLeftResult DecodeNotifyMatchmakerPlayerLeftResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerRedeemCouponResult DecodeRedeemCouponResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerRedeemMatchmakerTicketResult DecodeRedeemMatchmakerTicketResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerRefreshGameServerInstanceHeartbeatResult DecodeRefreshGameServerInstanceHeartbeatResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerRegisterGameResponse DecodeRegisterGameResponseResponse(class UPlayFabJsonObject* Response);
	static struct FServerRemovePlayerTagResult DecodeRemovePlayerTagResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerRemoveSharedGroupMembersResult DecodeRemoveSharedGroupMembersResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerReportPlayerServerResult DecodeReportPlayerServerResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerRevokeAllBansForUserResult DecodeRevokeAllBansForUserResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerRevokeBansResult DecodeRevokeBansResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerRevokeInventoryItemsResult DecodeRevokeInventoryItemsResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerRevokeInventoryResult DecodeRevokeInventoryResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerSavePushNotificationTemplateResult DecodeSavePushNotificationTemplateResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerSendCustomAccountRecoveryEmailResult DecodeSendCustomAccountRecoveryEmailResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerSendEmailFromTemplateResult DecodeSendEmailFromTemplateResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerSendPushNotificationResult DecodeSendPushNotificationResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerServerLoginResult DecodeServerLoginResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerSetGameServerInstanceDataResult DecodeSetGameServerInstanceDataResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerSetGameServerInstanceStateResult DecodeSetGameServerInstanceStateResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerSetGameServerInstanceTagsResult DecodeSetGameServerInstanceTagsResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerSetPlayerSecretResult DecodeSetPlayerSecretResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerSetPublisherDataResult DecodeSetPublisherDataResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerSetTitleDataResult DecodeSetTitleDataResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerUnlinkNintendoSwitchDeviceIdResult DecodeUnlinkNintendoSwitchDeviceIdResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerUnlinkPSNAccountResult DecodeUnlinkPSNAccountResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerUnlinkServerCustomIdResult DecodeUnlinkServerCustomIdResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerUnlinkSteamIdResult DecodeUnlinkSteamIdResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerUnlinkXboxAccountResult DecodeUnlinkXboxAccountResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerUnlockContainerItemResult DecodeUnlockContainerItemResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerUpdateBansResult DecodeUpdateBansResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerUpdateCharacterDataResult DecodeUpdateCharacterDataResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerUpdateCharacterStatisticsResult DecodeUpdateCharacterStatisticsResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerUpdatePlayerStatisticsResult DecodeUpdatePlayerStatisticsResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerUpdateSharedGroupDataResult DecodeUpdateSharedGroupDataResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerUpdateUserDataResult DecodeUpdateUserDataResultResponse(class UPlayFabJsonObject* Response);
	static struct FServerWriteEventResponse DecodeWriteEventResponseResponse(class UPlayFabJsonObject* Response);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayFabServerModelDecoder">();
	}
	static class UPlayFabServerModelDecoder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayFabServerModelDecoder>();
	}
};
static_assert(alignof(UPlayFabServerModelDecoder) == 0x000008, "Wrong alignment on UPlayFabServerModelDecoder");
static_assert(sizeof(UPlayFabServerModelDecoder) == 0x000028, "Wrong size on UPlayFabServerModelDecoder");

}

