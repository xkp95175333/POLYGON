#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Compass

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UI_Compass.UI_Compass_C.ExecuteUbergraph_UI_Compass
// 0x0040 (0x0040 - 0x0000)
struct UI_Compass_C_ExecuteUbergraph_UI_Compass final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Compass_C_ExecuteUbergraph_UI_Compass) == 0x000004, "Wrong alignment on UI_Compass_C_ExecuteUbergraph_UI_Compass");
static_assert(sizeof(UI_Compass_C_ExecuteUbergraph_UI_Compass) == 0x000040, "Wrong size on UI_Compass_C_ExecuteUbergraph_UI_Compass");
static_assert(offsetof(UI_Compass_C_ExecuteUbergraph_UI_Compass, EntryPoint) == 0x000000, "Member 'UI_Compass_C_ExecuteUbergraph_UI_Compass::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Compass_C_ExecuteUbergraph_UI_Compass, K2Node_Event_MyGeometry) == 0x000004, "Member 'UI_Compass_C_ExecuteUbergraph_UI_Compass::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Compass_C_ExecuteUbergraph_UI_Compass, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'UI_Compass_C_ExecuteUbergraph_UI_Compass::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function UI_Compass.UI_Compass_C.SetCompassPosition
// 0x0058 (0x0058 - 0x0000)
struct UI_Compass_C_SetCompassPosition final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B5A[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Compass_C_SetCompassPosition) == 0x000008, "Wrong alignment on UI_Compass_C_SetCompassPosition");
static_assert(sizeof(UI_Compass_C_SetCompassPosition) == 0x000058, "Wrong size on UI_Compass_C_SetCompassPosition");
static_assert(offsetof(UI_Compass_C_SetCompassPosition, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'UI_Compass_C_SetCompassPosition::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Compass_C_SetCompassPosition, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000008, "Member 'UI_Compass_C_SetCompassPosition::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Compass_C_SetCompassPosition, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000010, "Member 'UI_Compass_C_SetCompassPosition::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Compass_C_SetCompassPosition, CallFunc_BreakRotator_Roll) == 0x000028, "Member 'UI_Compass_C_SetCompassPosition::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(UI_Compass_C_SetCompassPosition, CallFunc_BreakRotator_Pitch) == 0x00002C, "Member 'UI_Compass_C_SetCompassPosition::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(UI_Compass_C_SetCompassPosition, CallFunc_BreakRotator_Yaw) == 0x000030, "Member 'UI_Compass_C_SetCompassPosition::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(UI_Compass_C_SetCompassPosition, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'UI_Compass_C_SetCompassPosition::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Compass_C_SetCompassPosition, CallFunc_MakeVector2D_ReturnValue) == 0x000040, "Member 'UI_Compass_C_SetCompassPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Compass_C_SetCompassPosition, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000050, "Member 'UI_Compass_C_SetCompassPosition::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function UI_Compass.UI_Compass_C.Tick
// 0x003C (0x003C - 0x0000)
struct UI_Compass_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Compass_C_Tick) == 0x000004, "Wrong alignment on UI_Compass_C_Tick");
static_assert(sizeof(UI_Compass_C_Tick) == 0x00003C, "Wrong size on UI_Compass_C_Tick");
static_assert(offsetof(UI_Compass_C_Tick, MyGeometry) == 0x000000, "Member 'UI_Compass_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Compass_C_Tick, InDeltaTime) == 0x000038, "Member 'UI_Compass_C_Tick::InDeltaTime' has a wrong offset!");

}

