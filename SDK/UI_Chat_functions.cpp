#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Chat

#include "Basic.hpp"

#include "UI_Chat_classes.hpp"
#include "UI_Chat_parameters.hpp"


namespace SDK
{

// Function UI_Chat.UI_Chat_C.AddMessage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameChatMessage                 Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void UUI_Chat_C::AddMessage(const struct FGameChatMessage& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_C", "AddMessage");

	Params::UI_Chat_C_AddMessage Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Chat.UI_Chat_C.BndEvt__Button_CloseChat_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UUI_Chat_C::BndEvt__Button_CloseChat_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_C", "BndEvt__Button_CloseChat_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Chat.UI_Chat_C.BndEvt__Button_MessageType_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UUI_Chat_C::BndEvt__Button_MessageType_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_C", "BndEvt__Button_MessageType_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Chat.UI_Chat_C.BndEvt__EditableText_Message_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Chat_C::BndEvt__EditableText_Message_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_C", "BndEvt__EditableText_Message_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature");

	Params::UI_Chat_C_BndEvt__EditableText_Message_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Chat.UI_Chat_C.BndEvt__EditableText_Message_K2Node_ComponentBoundEvent_2_OnEditableTextChangedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUI_Chat_C::BndEvt__EditableText_Message_K2Node_ComponentBoundEvent_2_OnEditableTextChangedEvent__DelegateSignature(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_C", "BndEvt__EditableText_Message_K2Node_ComponentBoundEvent_2_OnEditableTextChangedEvent__DelegateSignature");

	Params::UI_Chat_C_BndEvt__EditableText_Message_K2Node_ComponentBoundEvent_2_OnEditableTextChangedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Chat.UI_Chat_C.CloseChat
// (BlueprintCallable, BlueprintEvent)

void UUI_Chat_C::CloseChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_C", "CloseChat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Chat.UI_Chat_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_Chat_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Chat.UI_Chat_C.ExecuteUbergraph_UI_Chat
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Chat_C::ExecuteUbergraph_UI_Chat(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_C", "ExecuteUbergraph_UI_Chat");

	Params::UI_Chat_C_ExecuteUbergraph_UI_Chat Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Chat.UI_Chat_C.HiddenChatEvent
// (BlueprintCallable, BlueprintEvent)

void UUI_Chat_C::HiddenChatEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_C", "HiddenChatEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Chat.UI_Chat_C.OnAddedToFocusPath
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UUI_Chat_C::OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_C", "OnAddedToFocusPath");

	Params::UI_Chat_C_OnAddedToFocusPath Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Chat.UI_Chat_C.OnKeyDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UUI_Chat_C::OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_C", "OnKeyDown");

	Params::UI_Chat_C_OnKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_Chat.UI_Chat_C.OpenChat
// (BlueprintCallable, BlueprintEvent)

void UUI_Chat_C::OpenChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_C", "OpenChat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Chat.UI_Chat_C.PlayAnimationEvent
// (BlueprintCallable, BlueprintEvent)

void UUI_Chat_C::PlayAnimationEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_C", "PlayAnimationEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Chat.UI_Chat_C.SelectMessageType
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EMessageType                            Param_MessageType                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Chat_C::SelectMessageType(EMessageType Param_MessageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_C", "SelectMessageType");

	Params::UI_Chat_C_SelectMessageType Parms{};

	Parms.Param_MessageType = Param_MessageType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Chat.UI_Chat_C.SendMessage
// (BlueprintCallable, BlueprintEvent)

void UUI_Chat_C::SendMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_C", "SendMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Chat.UI_Chat_C.SortBadWordsList
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_Chat_C::SortBadWordsList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_C", "SortBadWordsList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Chat.UI_Chat_C.StartPlayAnimationHiddenChat
// (BlueprintCallable, BlueprintEvent)

void UUI_Chat_C::StartPlayAnimationHiddenChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_C", "StartPlayAnimationHiddenChat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Chat.UI_Chat_C.WordFilter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           Message                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           NewParam                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UUI_Chat_C::WordFilter(const class FString& Message, class FString* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chat_C", "WordFilter");

	Params::UI_Chat_C_WordFilter Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}

}

