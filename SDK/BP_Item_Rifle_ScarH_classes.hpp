#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Item_Rifle_ScarH

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "POLYGON_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Item_Rifle_ScarH.BP_Item_Rifle_ScarH_C
// 0x0020 (0x07A0 - 0x0780)
class ABP_Item_Rifle_ScarH_C final : public AItem_Gun_Rifle
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0780(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Aim_A_Base;                                        // 0x0788(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Aim_B;                                             // 0x0790(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Aim_A;                                             // 0x0798(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Item_Rifle_ScarH(int32 EntryPoint);
	void OnSetGunModules_Event();
	void ReceiveBeginPlay();
	void SetSight();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Item_Rifle_ScarH_C">();
	}
	static class ABP_Item_Rifle_ScarH_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Item_Rifle_ScarH_C>();
	}
};
static_assert(alignof(ABP_Item_Rifle_ScarH_C) == 0x000010, "Wrong alignment on ABP_Item_Rifle_ScarH_C");
static_assert(sizeof(ABP_Item_Rifle_ScarH_C) == 0x0007A0, "Wrong size on ABP_Item_Rifle_ScarH_C");
static_assert(offsetof(ABP_Item_Rifle_ScarH_C, UberGraphFrame) == 0x000780, "Member 'ABP_Item_Rifle_ScarH_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Item_Rifle_ScarH_C, Aim_A_Base) == 0x000788, "Member 'ABP_Item_Rifle_ScarH_C::Aim_A_Base' has a wrong offset!");
static_assert(offsetof(ABP_Item_Rifle_ScarH_C, Aim_B) == 0x000790, "Member 'ABP_Item_Rifle_ScarH_C::Aim_B' has a wrong offset!");
static_assert(offsetof(ABP_Item_Rifle_ScarH_C, Aim_A) == 0x000798, "Member 'ABP_Item_Rifle_ScarH_C::Aim_A' has a wrong offset!");

}

