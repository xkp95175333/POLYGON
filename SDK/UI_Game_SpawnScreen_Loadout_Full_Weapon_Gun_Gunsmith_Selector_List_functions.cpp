#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List

#include "Basic.hpp"

#include "UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_classes.hpp"
#include "UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_parameters.hpp"


namespace SDK
{

// Function UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List.UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C.BndEvt__UI_Menu_Solder_Weapon_Gun_Gunsmith_Selector_List_Button_Back_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UUI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C::BndEvt__UI_Menu_Solder_Weapon_Gun_Gunsmith_Selector_List_Button_Back_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C", "BndEvt__UI_Menu_Solder_Weapon_Gun_Gunsmith_Selector_List_Button_Back_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List.UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C.ExecuteUbergraph_UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C::ExecuteUbergraph_UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C", "ExecuteUbergraph_UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List");

	Params::UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C_ExecuteUbergraph_UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List.UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C.GetModuleType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EGunModuleType                          Param_Module_Type                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C::GetModuleType(EGunModuleType* Param_Module_Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C", "GetModuleType");

	Params::UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C_GetModuleType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Module_Type != nullptr)
		*Param_Module_Type = Parms.Param_Module_Type;
}


// Function UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List.UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C.OnUpdatePlayerCombinedInfo_Event
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<EModifiedData>                   ModifiedData                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FString                           CustomString                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UUI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C::OnUpdatePlayerCombinedInfo_Event(const TArray<EModifiedData>& ModifiedData, const class FString& CustomString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C", "OnUpdatePlayerCombinedInfo_Event");

	Params::UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C_OnUpdatePlayerCombinedInfo_Event Parms{};

	Parms.ModifiedData = std::move(ModifiedData);
	Parms.CustomString = std::move(CustomString);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List.UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C.ParseModules
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C::ParseModules()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C", "ParseModules");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List.UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C", "PreConstruct");

	Params::UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List.UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C.SetModuleType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGunModuleType                          ModuleType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C::SetModuleType(EGunModuleType ModuleType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C", "SetModuleType");

	Params::UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C_SetModuleType Parms{};

	Parms.ModuleType = ModuleType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List.UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C.SortModulesByRare
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class UClass*>                   Modules                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class UClass*>                   SortedModules                                          (Parm, OutParm)

void UUI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C::SortModulesByRare(TArray<class UClass*>& Modules, TArray<class UClass*>* SortedModules)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C", "SortModulesByRare");

	Params::UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C_SortModulesByRare Parms{};

	Parms.Modules = std::move(Modules);

	UObject::ProcessEvent(Func, &Parms);

	Modules = std::move(Parms.Modules);

	if (SortedModules != nullptr)
		*SortedModules = std::move(Parms.SortedModules);
}


// Function UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List.UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C", "Tick");

	Params::UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List.UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C.ToggleInspectPivotOffset
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsActive                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C::ToggleInspectPivotOffset(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C", "ToggleInspectPivotOffset");

	Params::UI_Game_SpawnScreen_Loadout_Full_Weapon_Gun_Gunsmith_Selector_List_C_ToggleInspectPivotOffset Parms{};

	Parms.IsActive = IsActive;

	UObject::ProcessEvent(Func, &Parms);
}

}

