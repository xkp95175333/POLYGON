#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ultra_Dynamic_Sky

#include "Basic.hpp"

#include "UDS_FogColorMode_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UDS_LensFlareType_structs.hpp"
#include "UDS_Post_Process_Stage_structs.hpp"
#include "UDS_SkyMode_structs.hpp"
#include "UDS_CachedProperties_structs.hpp"
#include "Engine_structs.hpp"
#include "UDS_NoiseType_structs.hpp"
#include "UDS_VolRT_Mode_structs.hpp"
#include "UDS_and_UDW_State_structs.hpp"


namespace SDK::Params
{

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.2D Clouds Base Texture
// 0x0168 (0x0168 - 0x0000)
struct Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture final
{
public:
	TSoftObjectPtr<class UTexture2D>              Tex;                                               // 0x0000(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_395B[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable;                          // 0x0038(0x0030)(HasGetValueTypeHash)
	EUDS_NoiseType                                Temp_byte_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_395C[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_1;                        // 0x0070(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_2;                        // 0x00A0(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x00D0(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_395D[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default;                             // 0x0108(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default_1;                           // 0x0138(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture");
static_assert(sizeof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture) == 0x000168, "Wrong size on Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture, Tex) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture::Tex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture, Temp_bool_Variable) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture, Temp_softobject_Variable) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture, Temp_byte_Variable) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture, Temp_softobject_Variable_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture, Temp_softobject_Variable_2) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture, K2Node_Select_Default) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture, K2Node_Select_Default_1) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture::K2Node_Select_Default_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Absent Directional Lights Brightness
// 0x0088 (0x0088 - 0x0000)
struct Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Moon_Phase_Multiplier_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Moon_Phase_Multiplier_Without_Light_Brightness; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness) == 0x000088, "Wrong size on Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_BreakVector_X) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_BreakVector_Y) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_BreakVector_Z) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_BreakVector_X_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_BreakVector_Y_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_BreakVector_Z_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_MapRangeClamped_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_FClamp_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_Moon_Phase_Multiplier_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_Moon_Phase_Multiplier_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_Moon_Phase_Multiplier_Without_Light_Brightness) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_Moon_Phase_Multiplier_Without_Light_Brightness' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.All Volumetric Cloud MIDs
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs final
{
public:
	bool                                          Shadows;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_395E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       MIDs;                                              // 0x0008(0x0010)(Parm, OutParm)
	TArray<class UMaterialInstanceDynamic*>       All_MIDs;                                          // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_395F[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3960[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs");
static_assert(sizeof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, Shadows) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::Shadows' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, MIDs) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::MIDs' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, All_MIDs) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::All_MIDs' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, CallFunc_Array_Add_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, CallFunc_Array_Add_ReturnValue_1) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, CallFunc_BooleanAND_ReturnValue) == 0x000031, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, CallFunc_Array_Add_ReturnValue_2) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, CallFunc_Array_Add_ReturnValue_3) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, CallFunc_BooleanAND_ReturnValue_1) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, CallFunc_Array_Add_ReturnValue_4) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, CallFunc_Array_Add_ReturnValue_5) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Apply Console Variable with Check
// 0x00E0 (0x00E0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check final
{
public:
	class FString                                 Cvar;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	double                                        Setting;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Type;                                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3961[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue;   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3962[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3963[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3964[0x2];                                     // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetConsoleVariableFloatValue_ReturnValue; // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3965[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast;     // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check) == 0x0000E0, "Wrong size on Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, Cvar) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::Cvar' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, Setting) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::Setting' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, Type) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::Type' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, K2Node_SwitchInteger_CmpSuccess) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_FTrunc_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_GetConsoleVariableIntValue_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_GetConsoleVariableIntValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Conv_IntToString_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_FTrunc_ReturnValue_1) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000099, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_GetConsoleVariableFloatValue_ReturnValue) == 0x00009C, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_GetConsoleVariableFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Conv_DoubleToString_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Apply Location Preset
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Apply_Location_Preset final
{
public:
	struct FVector                                CallFunc_Map_Find_Value;                           // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3966[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector3f_X;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_Y;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_Z;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector3f                              CallFunc_BreakVector3f_InVec_ImplicitCast;         // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3967[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_Latitude_ImplicitCast;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Longitude_ImplicitCast;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Time_Zone_ImplicitCast;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Apply_Location_Preset) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Apply_Location_Preset");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Apply_Location_Preset) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Apply_Location_Preset");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Location_Preset, CallFunc_Map_Find_Value) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Apply_Location_Preset::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Location_Preset, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Apply_Location_Preset::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Location_Preset, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000019, "Member 'Ultra_Dynamic_Sky_C_Apply_Location_Preset::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Location_Preset, CallFunc_BreakVector3f_X) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Apply_Location_Preset::CallFunc_BreakVector3f_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Location_Preset, CallFunc_BreakVector3f_Y) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Apply_Location_Preset::CallFunc_BreakVector3f_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Location_Preset, CallFunc_BreakVector3f_Z) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Apply_Location_Preset::CallFunc_BreakVector3f_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Location_Preset, CallFunc_BreakVector3f_InVec_ImplicitCast) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Apply_Location_Preset::CallFunc_BreakVector3f_InVec_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Location_Preset, K2Node_VariableSet_Latitude_ImplicitCast) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Apply_Location_Preset::K2Node_VariableSet_Latitude_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Location_Preset, K2Node_VariableSet_Longitude_ImplicitCast) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Apply_Location_Preset::K2Node_VariableSet_Longitude_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Location_Preset, K2Node_VariableSet_Time_Zone_ImplicitCast) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Apply_Location_Preset::K2Node_VariableSet_Time_Zone_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Apply Saved UDS and UDW State
// 0x01C8 (0x01C8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State final
{
public:
	struct FUDS_and_UDW_State                     State;                                             // 0x0000(0x0178)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Year;                       // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month;                      // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day;                        // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour;                       // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute;                     // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second;                     // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond;                // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3968[0x4];                                     // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3969[0x6];                                     // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1; // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State) == 0x0001C8, "Wrong size on Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, State) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, CallFunc_BreakDateTime_Year) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::CallFunc_BreakDateTime_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, CallFunc_BreakDateTime_Month) == 0x00017C, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::CallFunc_BreakDateTime_Month' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, CallFunc_BreakDateTime_Day) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::CallFunc_BreakDateTime_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, CallFunc_BreakDateTime_Hour) == 0x000184, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::CallFunc_BreakDateTime_Hour' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, CallFunc_BreakDateTime_Minute) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::CallFunc_BreakDateTime_Minute' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, CallFunc_BreakDateTime_Second) == 0x00018C, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::CallFunc_BreakDateTime_Second' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, CallFunc_BreakDateTime_Millisecond) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::CallFunc_BreakDateTime_Millisecond' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, K2Node_DynamicCast_bSuccess) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, CallFunc_IsValid_ReturnValue) == 0x0001A9, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State, K2Node_DynamicCast_bSuccess_1) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_and_UDW_State::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Apply Volumetric Mode
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode final
{
public:
	EUDS_VolRT_Mode                               Mode;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_VolRT_Mode                               Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_396A[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_396B[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_396C[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, Mode) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::Mode' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, Temp_byte_Variable) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, Temp_int_Variable) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, Temp_int_Variable_1) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, Temp_int_Variable_2) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, Temp_int_Variable_3) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, K2Node_Select_Default) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Approximate Real Sun Moon and Stars
// 0x0A40 (0x0A40 - 0x0000)
struct Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars final
{
public:
	int32                                         Param_Month;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Day;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Year;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_396D[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Param_Time_of_Day;                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_Time_Zone;                                   // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Only_Calculate_Sun;                                // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_396E[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Sun_Vector;                                        // 0x0028(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Moon_Vector;                                       // 0x0040(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Real_Phase;                                        // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Phase_Alignment;                                   // 0x0060(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Celestial_Orbit;                                   // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Celestial_Yaw;                                     // 0x0080(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Equation_of_Time_Offset;                           // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Equation_of_Time_Curve;                            // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Lunar_Inclination_Cycle;                           // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Moon_Center;                                       // 0x00A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Lunar_Time;                                        // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Earth_Center;                                      // 0x00C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Moon_Real_Phase;                                   // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Moon_Alignment;                                    // 0x00E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Moon_Direction;                                    // 0x0100(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Celestial_North_Pole;                              // 0x0118(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Stars_Orbit;                                       // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Stars_Yaw;                                         // 0x0138(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Sun_Direction;                                     // 0x0148(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Leap_Year;                                         // 0x0160(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_396F[0x3];                                     // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         UTC_Year;                                          // 0x0164(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Local_Year;                                        // 0x0168(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3970[0x4];                                     // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Zenith_Direction;                                  // 0x0170(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        Axial_Tilt;                                        // 0x0188(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Viewer_Position_on_Earth;                          // 0x0190(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Local_Geocoordinate;                               // 0x01A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        Seasonal_Time;                                     // 0x01C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Day_of_Year_Index;                                 // 0x01C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Local_Month;                                       // 0x01CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Local_Day;                                         // 0x01D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UTC_Day;                                           // 0x01D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UTC_Month;                                         // 0x01D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3971[0x4];                                     // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        UTC_Time_of_Year;                                  // 0x01E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        UTC_Time_of_Day;                                   // 0x01E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3972[0x3];                                     // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3973[0x3];                                     // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Year;                       // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month;                      // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day;                        // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour;                       // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute;                     // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second;                     // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond;                // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3974[0x4];                                     // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_H_M_S_MS_to_Time_of_Day_Time;             // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeUnclamped_ReturnValue;            // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3975[0x3];                                     // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3976[0x7];                                     // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3977[0x7];                                     // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue_1;         // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Fraction_ReturnValue;                     // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0320(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0350(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0368(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0380(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_1;       // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0418(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue_2;         // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0448(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x0460(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_3;                     // 0x0478(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x0498(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Fraction_ReturnValue_1;                   // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x04C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_2; // 0x04D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x04F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0510(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0528(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue;                 // 0x0540(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue_1;               // 0x0548(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0550(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x0558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x055C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x0564(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x0568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3978[0x4];                                     // 0x056C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_6;           // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3979[0x7];                                     // 0x05A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x05B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_3; // 0x05D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_397A[0x7];                                     // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_7;           // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_4;                // 0x0600(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0618(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_4; // 0x0630(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_4;                     // 0x0650(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0678(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_5;        // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_5;                     // 0x0698(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x06C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x06C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_8;           // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_9;           // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_10;          // 0x0708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x0710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_11;          // 0x0718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0720(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_397B[0x4];                                     // 0x0724(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_6;        // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_397C[0x3];                                     // 0x0731(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0734(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0738(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_397D[0x4];                                     // 0x073C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_12;          // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_5;                // 0x0748(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_12;     // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue_1;     // 0x0768(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0780(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_6;                     // 0x0798(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x07B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_5; // 0x07C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_7;                     // 0x07E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_13;     // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_6;                // 0x0800(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_7;                // 0x0818(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_6; // 0x0830(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0848(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_14;     // 0x0868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_13;          // 0x0870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_14;          // 0x0878(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_15;     // 0x0880(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue_3;         // 0x0888(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_8;                // 0x0890(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_16;     // 0x08A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x08B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_9;                // 0x08C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x08E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_2;            // 0x08F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_15;          // 0x0910(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_7;        // 0x0918(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue_4;         // 0x0920(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeUnclamped_ReturnValue_1;          // 0x0928(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0930(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0934(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_397E[0x3];                                     // 0x0935(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0938(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_397F[0x4];                                     // 0x093C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0940(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_16;          // 0x0948(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x0950(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0954(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0955(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0956(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3980[0x1];                                     // 0x0957(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_Select_Default;                             // 0x0958(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0968(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x096C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0970(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3981[0x7];                                     // 0x0971(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_Select_Default_1;                           // 0x0978(0x0010)(ReferenceParm)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0988(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x098C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0990(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3982[0x3];                                     // 0x0991(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0994(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0998(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x099C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x09A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x09A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x09A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3983[0x2];                                     // 0x09A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x09A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x09AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3984[0x3];                                     // 0x09AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x09B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x09B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x09B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3985[0x3];                                     // 0x09B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_2;                  // 0x09BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_3;                  // 0x09C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3986[0x4];                                     // 0x09C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_Select_Default_2;                           // 0x09C8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x09D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x09DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x09E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3987[0x3];                                     // 0x09E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x09E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Equation_of_Time_Offset_ImplicitCast; // 0x09E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x09F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3988[0x4];                                     // 0x09F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x09F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0A00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x0A08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_2;           // 0x0A0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0A10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_3;           // 0x0A14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x0A18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x0A1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x0A20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x0A24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_4;           // 0x0A28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_5;           // 0x0A2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast_1;          // 0x0A30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_6;           // 0x0A34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_7;           // 0x0A38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast_2;          // 0x0A3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars) == 0x000A40, "Wrong size on Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Param_Month) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Param_Month' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Param_Day) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Param_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Param_Year) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Param_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Param_Time_of_Day) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Param_Time_of_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Param_Time_Zone) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Param_Time_Zone' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Only_Calculate_Sun) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Only_Calculate_Sun' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Sun_Vector) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Sun_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Moon_Vector) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Moon_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Real_Phase) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Real_Phase' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Phase_Alignment) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Phase_Alignment' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Celestial_Orbit) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Celestial_Orbit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Celestial_Yaw) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Celestial_Yaw' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Equation_of_Time_Offset) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Equation_of_Time_Offset' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Equation_of_Time_Curve) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Equation_of_Time_Curve' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Lunar_Inclination_Cycle) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Lunar_Inclination_Cycle' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Moon_Center) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Moon_Center' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Lunar_Time) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Lunar_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Earth_Center) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Earth_Center' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Moon_Real_Phase) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Moon_Real_Phase' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Moon_Alignment) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Moon_Alignment' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Moon_Direction) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Moon_Direction' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Celestial_North_Pole) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Celestial_North_Pole' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Stars_Orbit) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Stars_Orbit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Stars_Yaw) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Stars_Yaw' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Sun_Direction) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Sun_Direction' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Leap_Year) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Leap_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, UTC_Year) == 0x000164, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::UTC_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Local_Year) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Local_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Zenith_Direction) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Zenith_Direction' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Axial_Tilt) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Axial_Tilt' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Viewer_Position_on_Earth) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Viewer_Position_on_Earth' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Local_Geocoordinate) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Local_Geocoordinate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Seasonal_Time) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Seasonal_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Day_of_Year_Index) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Day_of_Year_Index' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Local_Month) == 0x0001CC, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Local_Month' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Local_Day) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Local_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, UTC_Day) == 0x0001D4, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::UTC_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, UTC_Month) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::UTC_Month' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, UTC_Time_of_Year) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::UTC_Time_of_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, UTC_Time_of_Day) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::UTC_Time_of_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Temp_int_Array_Index_Variable) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Temp_bool_True_if_break_was_hit_Variable) == 0x0001FC, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_IntInt_ReturnValue) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Not_PreBool_ReturnValue) == 0x000204, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Temp_int_Loop_Counter_Variable) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_IntInt_ReturnValue_1) == 0x00020C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_UtcNow_ReturnValue) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakDateTime_Year) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakDateTime_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakDateTime_Month) == 0x00021C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakDateTime_Month' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakDateTime_Day) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakDateTime_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakDateTime_Hour) == 0x000224, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakDateTime_Hour' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakDateTime_Minute) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakDateTime_Minute' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakDateTime_Second) == 0x00022C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakDateTime_Second' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakDateTime_Millisecond) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakDateTime_Millisecond' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_H_M_S_MS_to_Time_of_Day_Time) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_H_M_S_MS_to_Time_of_Day_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000240, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectFloat_ReturnValue) == 0x000250, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000258, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MapRangeUnclamped_ReturnValue) == 0x000260, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GetFloatValue_ReturnValue) == 0x000268, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BooleanAND_ReturnValue) == 0x00026C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectFloat_ReturnValue_1) == 0x000270, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000280, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotFromXZ_ReturnValue) == 0x000288, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0002A0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GetRightVector_ReturnValue) == 0x0002A8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue) == 0x0002C0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0002D8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0002E0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Percent_FloatFloat_ReturnValue_1) == 0x0002E8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Percent_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0002F0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Fraction_ReturnValue) == 0x0002F8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Fraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000300, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue) == 0x000308, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000320, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000338, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000368, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue_1) == 0x000380, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue_2) == 0x000398, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x0003B0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Conv_VectorToRotator_ReturnValue_1) == 0x0003C8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Conv_VectorToRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Roll) == 0x0003E0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Pitch) == 0x0003E4, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Yaw) == 0x0003E8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Roll_1) == 0x0003EC, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Pitch_1) == 0x0003F0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Yaw_1) == 0x0003F4, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0003F8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000400, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000408, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000410, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_1) == 0x000418, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Percent_FloatFloat_ReturnValue_2) == 0x000430, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Percent_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000438, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000440, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000448, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x000460, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue_3) == 0x000478, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x000490, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x000498, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Fraction_ReturnValue_1) == 0x0004B0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Fraction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0004B8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_2) == 0x0004C0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterGreater_VectorRotator_ReturnValue_2) == 0x0004D8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterGreater_VectorRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0004F0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0004F8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_RotateAngleAxis_ReturnValue) == 0x000510, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_VectorVector_ReturnValue) == 0x000528, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeDateTime_ReturnValue) == 0x000540, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeDateTime_ReturnValue_1) == 0x000548, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeDateTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000550, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakTimespan_Days) == 0x000558, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakTimespan_Hours) == 0x00055C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakTimespan_Minutes) == 0x000560, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakTimespan_Seconds) == 0x000564, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakTimespan_Milliseconds) == 0x000568, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000570, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000578, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_6) == 0x000580, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000588, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000590, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x000598, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0005A0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0005A8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_3) == 0x0005B0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectFloat_ReturnValue_2) == 0x0005C8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterGreater_VectorRotator_ReturnValue_3) == 0x0005D0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterGreater_VectorRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0005E8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_7) == 0x0005F0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectFloat_ReturnValue_3) == 0x0005F8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_4) == 0x000600, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeVector_ReturnValue) == 0x000618, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterGreater_VectorRotator_ReturnValue_4) == 0x000630, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterGreater_VectorRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Dot_VectorVector_ReturnValue) == 0x000648, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue_4) == 0x000650, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_DegAcos_ReturnValue) == 0x000668, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000670, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Cross_VectorVector_ReturnValue) == 0x000678, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_DoubleDouble_ReturnValue_5) == 0x000690, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue_5) == 0x000698, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakVector_X) == 0x0006B0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakVector_Y) == 0x0006B8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakVector_Z) == 0x0006C0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, K2Node_MakeStruct_LinearColor) == 0x0006C8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x0006D8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MapRangeClamped_ReturnValue) == 0x0006E0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x0006E8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_8) == 0x0006F0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectFloat_ReturnValue_4) == 0x0006F8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_9) == 0x000700, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_10) == 0x000708, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x000710, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_11) == 0x000718, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Percent_IntInt_ReturnValue) == 0x000720, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_DoubleDouble_ReturnValue_6) == 0x000728, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000730, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_IntInt_ReturnValue_2) == 0x000734, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_IntInt_ReturnValue) == 0x000738, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_12) == 0x000740, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_5) == 0x000748, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_12) == 0x000760, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_LessLess_VectorRotator_ReturnValue_1) == 0x000768, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_LessLess_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000780, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue_6) == 0x000798, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0007B0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterGreater_VectorRotator_ReturnValue_5) == 0x0007C8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterGreater_VectorRotator_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue_7) == 0x0007E0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_13) == 0x0007F8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_6) == 0x000800, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_7) == 0x000818, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterGreater_VectorRotator_ReturnValue_6) == 0x000830, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterGreater_VectorRotator_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000848, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000860, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_14) == 0x000868, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_13) == 0x000870, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_14) == 0x000878, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_15) == 0x000880, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Percent_FloatFloat_ReturnValue_3) == 0x000888, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Percent_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_8) == 0x000890, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_16) == 0x0008A8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_ComposeRotators_ReturnValue) == 0x0008B0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_9) == 0x0008C8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_ComposeRotators_ReturnValue_1) == 0x0008E0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_ComposeRotators_ReturnValue_2) == 0x0008F8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_ComposeRotators_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_15) == 0x000910, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_DoubleDouble_ReturnValue_7) == 0x000918, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Percent_FloatFloat_ReturnValue_4) == 0x000920, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Percent_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MapRangeUnclamped_ReturnValue_1) == 0x000928, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MapRangeUnclamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000930, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Less_IntInt_ReturnValue) == 0x000934, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_IntInt_ReturnValue_3) == 0x000938, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000940, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_16) == 0x000948, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Percent_IntInt_ReturnValue_1) == 0x000950, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000954, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Temp_bool_Variable) == 0x000955, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Temp_bool_Variable_1) == 0x000956, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, K2Node_Select_Default) == 0x000958, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Array_Get_Item) == 0x000968, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x00096C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Temp_bool_Variable_2) == 0x000970, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, K2Node_Select_Default_1) == 0x000978, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000988, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Array_Get_Item_1) == 0x00098C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000990, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_IntInt_ReturnValue_4) == 0x000994, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectInt_ReturnValue) == 0x000998, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectInt_ReturnValue_1) == 0x00099C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Array_Length_ReturnValue) == 0x0009A0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Less_IntInt_ReturnValue_1) == 0x0009A4, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BooleanAND_ReturnValue_1) == 0x0009A5, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x0009A8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0009AC, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_IntInt_ReturnValue_5) == 0x0009B0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_IntInt_ReturnValue_6) == 0x0009B4, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Greater_IntInt_ReturnValue) == 0x0009B8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectInt_ReturnValue_2) == 0x0009BC, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectInt_ReturnValue_3) == 0x0009C0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, K2Node_Select_Default_2) == 0x0009C8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_IntInt_ReturnValue_7) == 0x0009D8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Array_Get_Item_2) == 0x0009DC, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0009E0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x0009E4, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, K2Node_VariableSet_Equation_of_Time_Offset_ImplicitCast) == 0x0009E8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::K2Node_VariableSet_Equation_of_Time_Offset_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0009F0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0009F8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000A00, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x000A08, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Yaw_ImplicitCast_2) == 0x000A0C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Yaw_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000A10, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Yaw_ImplicitCast_3) == 0x000A14, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Yaw_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, K2Node_MakeStruct_A_ImplicitCast) == 0x000A18, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, K2Node_MakeStruct_R_ImplicitCast) == 0x000A1C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, K2Node_MakeStruct_G_ImplicitCast) == 0x000A20, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, K2Node_MakeStruct_B_ImplicitCast) == 0x000A24, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Yaw_ImplicitCast_4) == 0x000A28, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Yaw_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Yaw_ImplicitCast_5) == 0x000A2C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Yaw_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Roll_ImplicitCast_1) == 0x000A30, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Roll_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Yaw_ImplicitCast_6) == 0x000A34, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Yaw_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Yaw_ImplicitCast_7) == 0x000A38, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Yaw_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Roll_ImplicitCast_2) == 0x000A3C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Roll_ImplicitCast_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Both Cloud Shadows MIDs
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs final
{
public:
	TArray<class UMaterialInstanceDynamic*>       Out;                                               // 0x0000(0x0010)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3989[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_398A[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       K2Node_MakeArray_Array_1;                          // 0x0030(0x0010)(ReferenceParm)
	TArray<class UMaterialInstanceDynamic*>       K2Node_Select_Default;                             // 0x0040(0x0010)(ReferenceParm)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs, Temp_bool_Variable) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs, K2Node_MakeArray_Array) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs, K2Node_MakeArray_Array_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs, K2Node_Select_Default) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs::K2Node_Select_Default' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cache Color
// 0x0044 (0x0044 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cache_Color final
{
public:
	EUDS_CachedProperties                         Property;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_398B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Set_Value;                                         // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_398C[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value;                   // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Array_Get_Item;                           // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LinearColor_IsNearEqual_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cache_Color) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Cache_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cache_Color) == 0x000044, "Wrong size on Ultra_Dynamic_Sky_C_Cache_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, Property) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::Property' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, Set_Value) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::Set_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, Param_Index) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::Param_Index' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, Temp_bool_Variable) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, CallFunc_Get_Cached_Color_Value) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::CallFunc_Get_Cached_Color_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, CallFunc_Array_Get_Item) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, CallFunc_LinearColor_IsNearEqual_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::CallFunc_LinearColor_IsNearEqual_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, CallFunc_Not_PreBool_ReturnValue) == 0x000041, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cache Float
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cache_Float final
{
public:
	EUDS_CachedProperties                         Property;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_398D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Set_Value;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_398E[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cache_Float) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cache_Float");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cache_Float) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Cache_Float");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, Property) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::Property' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, Set_Value) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::Set_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, Param_Index) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::Param_Index' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, Temp_bool_Variable) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, CallFunc_Get_Cached_Float_Value) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::CallFunc_Get_Cached_Float_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, CallFunc_Array_Get_Item) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cache Properties
// 0x05C0 (0x05C0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cache_Properties final
{
public:
	double                                        CallFunc_Volumetric_Cloud_Floor_Variation_Height;  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_Floor_Variation_Color;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_398F[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Moon_Lit_Percent_ReturnValue;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Static_Clouds_XYZ_Masks_XY_Mask;          // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Static_Clouds_XYZ_Masks_Z_Mask;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Volumetric_Cloud_Shadow_Tracing_Distance_Out; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3990[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3991[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Current_Volumetric_Clouds_Density_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cloud_Texture_Velocity_ReturnValue;       // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_Layer_Scale_Layer_Scale; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Lerp_to_Simplified_Clouds_Alpha;  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Volumetric_Cloud_Macro_Variation_ReturnValue; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Volumetric_Cloud_Multiscattering_Occlusion_Occlusion; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Volumetric_Cloud_Subnoise_Amount_Erosion; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Volumetric_Cloud_Taper_Position_Taper; // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_View_Sample_Scale_out;            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_Shadows_Altitude_Cloud_Shadows_Altitude; // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Current_Volumetric_Cloud_Extinction_Scales_Top; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Current_Volumetric_Cloud_Extinction_Scales_Bottom; // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_Top_Altitude_Cloud_Top_Altitude; // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_Base_Cloud_Height_Base_Cloud_Height; // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Fog_Directional_Inscattering_Color_Directional_Inscattering_Color; // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Max_Trace_Distance_Out;           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Z_Disturbance_Out;                // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0180(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Volumetric_Cloud_Emissive_Colors_Bottom; // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Volumetric_Cloud_Emissive_Colors_Top; // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Volumetric_Cloud_Albedo_ReturnValue; // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3992[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Rayleigh_Scattering_Color_ReturnValue; // 0x01E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Mie_Scattering_Scale_ReturnValue; // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Mie_Anisotropy_ReturnValue;       // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Sky_Light_Lower_Hemisphere_Color_ReturnValue; // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Current_Sky_Light_Color_and_Intensity_Out_Intensity; // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Current_Sky_Light_Color_and_Intensity_Out_Color; // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Moon_Source_Angle_Out;            // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Moon_Light_Specular_Scale_ReturnValue;    // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Moon_Light_Casting_Shadows_Yes;        // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3993[0x3];                                     // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Current_Moon_Light_Color_Color;           // 0x0244(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3994[0x4];                                     // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Sky_Ambient_Color_Sky_Ambient_Color; // 0x0260(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sky_Atmosphere_Fog_Contribution_Output;   // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Fog_Directional_Inscattering_Color_Directional_Inscattering_Color_1; // 0x0278(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Fog_Inscattering_Color_Inscattering_Color; // 0x0288(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Current_Fog_Base_Colors_Ambient_Fog_Color; // 0x0298(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Current_Fog_Base_Colors_Directional_Base_Color; // 0x02A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Current_Fog_Base_Colors_Scaled_Directional_Base_Color; // 0x02B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Fog_Start_Distance_ReturnValue;           // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Fog_Height_Falloff_ReturnValue;           // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Fog_Density_ReturnValue;          // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Overcast_Light_Contribution_ReturnValue;  // 0x02E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x02F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Sun_Source_Angle_Out;             // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue_1;    // 0x0308(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Sun_Light_Color_ReturnValue;      // 0x0318(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Sun_Light_Casting_Shadows_Yes;         // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3995[0x7];                                     // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3996[0x4];                                     // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2; // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Sun_Light_Intensity_ReturnValue;  // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z_1;                           // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3997[0x4];                                     // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3998[0x4];                                     // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Sun_Height_Z_2;                           // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Aurora_Intensity_ReturnValue;     // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_2;              // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Stars_Color_ReturnValue;          // 0x03BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3999[0x4];                                     // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Current_Sun_Radius_ReturnValue;           // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Sun_Disk_Color_ReturnValue;       // 0x03D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Moon_Lit_Percent_ReturnValue_1;   // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Sky_Atmosphere_Luminance_ReturnValue; // 0x03F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Simplified_Sun_Glow_Color_Out;            // 0x0418(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0428(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2; // 0x0438(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Simplified_Current_Color_Out;             // 0x0448(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Simplified_Current_Color_Out_1;           // 0x0458(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Simplified_Current_Color_Out_2;           // 0x0468(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Filtered_Moon_Light_Intensity_Intensity;  // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue_1;         // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399A[0x7];                                     // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Current_Exposure_Bias_Bias;               // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399B[0x7];                                     // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Current_Saturation_ReturnValue;           // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Lit_Intensity_ReturnValue;        // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Overall_Intensity_ReturnValue;    // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Light_Pollution_ReturnValue;      // 0x04B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Night_Sky_Glow_ReturnValue;       // 0x04C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3; // 0x04D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_2;  // 0x04E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue;   // 0x04F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Directional_Inscattering_Exponent_ReturnValue; // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Scaled_Cache_Period_Period;               // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Cloud_Wisp_Gradient_Vector_Out;           // 0x0510(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Moon_Light_Material_Color_ReturnValue; // 0x0520(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Moon_Lit_Percent_ReturnValue_2;   // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Moon_Material_Intensity_ReturnValue; // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Moon_Phase_Angle_ReturnValue;     // 0x0540(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Moon_Scale_and_Cutout_Value_Scale; // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Moon_Scale_and_Cutout_Value_Cutout; // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Unfiltered_Moon_Light_Intensity_Out;      // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Wisps_Opacity_ReturnValue;        // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Current_Cloud_Shadows_Intensity_and_Softness_Intensity; // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Current_Cloud_Shadows_Intensity_and_Softness_Softness; // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0580(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x0584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_Height_Fog_Density_ImplicitCast; // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399C[0x4];                                     // 0x058C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Cache_Float_Set_Value_ImplicitCast;       // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast_1;      // 0x059C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cache_Float_Set_Value_ImplicitCast_1;     // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast_2;      // 0x05B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399D[0x4];                                     // 0x05B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Cache_Float_Set_Value_ImplicitCast_2;     // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cache_Properties) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cache_Properties");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cache_Properties) == 0x0005C0, "Wrong size on Ultra_Dynamic_Sky_C_Cache_Properties");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Volumetric_Cloud_Floor_Variation_Height) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Volumetric_Cloud_Floor_Variation_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Volumetric_Cloud_Floor_Variation_Color) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Volumetric_Cloud_Floor_Variation_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Night_Filter_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_SelectColor_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Moon_Lit_Percent_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Moon_Lit_Percent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_LinearColorLerp_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Static_Clouds_XYZ_Masks_XY_Mask) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Static_Clouds_XYZ_Masks_XY_Mask' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Static_Clouds_XYZ_Masks_Z_Mask) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Static_Clouds_XYZ_Masks_Z_Mask' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Volumetric_Cloud_Shadow_Tracing_Distance_Out) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Volumetric_Cloud_Shadow_Tracing_Distance_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Volumetric_Clouds_Density_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Volumetric_Clouds_Density_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Cloud_Texture_Velocity_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Cloud_Texture_Velocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Volumetric_Cloud_Layer_Scale_Layer_Scale) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Volumetric_Cloud_Layer_Scale_Layer_Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Lerp_to_Simplified_Clouds_Alpha) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Lerp_to_Simplified_Clouds_Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Volumetric_Cloud_Macro_Variation_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Volumetric_Cloud_Macro_Variation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Volumetric_Cloud_Multiscattering_Occlusion_Occlusion) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Volumetric_Cloud_Multiscattering_Occlusion_Occlusion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Volumetric_Cloud_Subnoise_Amount_Erosion) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Volumetric_Cloud_Subnoise_Amount_Erosion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Volumetric_Cloud_Taper_Position_Taper) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Volumetric_Cloud_Taper_Position_Taper' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_View_Sample_Scale_out) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_View_Sample_Scale_out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Volumetric_Cloud_Shadows_Altitude_Cloud_Shadows_Altitude) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Volumetric_Cloud_Shadows_Altitude_Cloud_Shadows_Altitude' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Get_Current_Volumetric_Cloud_Extinction_Scales_Top) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Get_Current_Volumetric_Cloud_Extinction_Scales_Top' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Get_Current_Volumetric_Cloud_Extinction_Scales_Bottom) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Get_Current_Volumetric_Cloud_Extinction_Scales_Bottom' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Volumetric_Cloud_Top_Altitude_Cloud_Top_Altitude) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Volumetric_Cloud_Top_Altitude_Cloud_Top_Altitude' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Volumetric_Cloud_Base_Cloud_Height_Base_Cloud_Height) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Volumetric_Cloud_Base_Cloud_Height_Base_Cloud_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Fog_Directional_Inscattering_Color_Directional_Inscattering_Color) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Fog_Directional_Inscattering_Color_Directional_Inscattering_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Max_Trace_Distance_Out) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Max_Trace_Distance_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_SelectColor_ReturnValue_1) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Z_Disturbance_Out) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Z_Disturbance_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_K2_SetTimer_ReturnValue) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Get_Volumetric_Cloud_Emissive_Colors_Bottom) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Get_Volumetric_Cloud_Emissive_Colors_Bottom' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Get_Volumetric_Cloud_Emissive_Colors_Top) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Get_Volumetric_Cloud_Emissive_Colors_Top' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Volumetric_Cloud_Albedo_ReturnValue) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Volumetric_Cloud_Albedo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_MapRangeClamped_ReturnValue) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Rayleigh_Scattering_Color_ReturnValue) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Rayleigh_Scattering_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Mie_Scattering_Scale_ReturnValue) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Mie_Scattering_Scale_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Mie_Anisotropy_ReturnValue) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Mie_Anisotropy_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Sky_Light_Lower_Hemisphere_Color_ReturnValue) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Sky_Light_Lower_Hemisphere_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Get_Current_Sky_Light_Color_and_Intensity_Out_Intensity) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Get_Current_Sky_Light_Color_and_Intensity_Out_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Get_Current_Sky_Light_Color_and_Intensity_Out_Color) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Get_Current_Sky_Light_Color_and_Intensity_Out_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Moon_Source_Angle_Out) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Moon_Source_Angle_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Moon_Light_Specular_Scale_ReturnValue) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Moon_Light_Specular_Scale_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Is_Moon_Light_Casting_Shadows_Yes) == 0x000240, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Is_Moon_Light_Casting_Shadows_Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Moon_Light_Color_Color) == 0x000244, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Moon_Light_Color_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_SelectFloat_ReturnValue) == 0x000258, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Sky_Ambient_Color_Sky_Ambient_Color) == 0x000260, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Sky_Ambient_Color_Sky_Ambient_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Sky_Atmosphere_Fog_Contribution_Output) == 0x000270, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Sky_Atmosphere_Fog_Contribution_Output' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Fog_Directional_Inscattering_Color_Directional_Inscattering_Color_1) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Fog_Directional_Inscattering_Color_Directional_Inscattering_Color_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Fog_Inscattering_Color_Inscattering_Color) == 0x000288, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Fog_Inscattering_Color_Inscattering_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Get_Current_Fog_Base_Colors_Ambient_Fog_Color) == 0x000298, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Get_Current_Fog_Base_Colors_Ambient_Fog_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Get_Current_Fog_Base_Colors_Directional_Base_Color) == 0x0002A8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Get_Current_Fog_Base_Colors_Directional_Base_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Get_Current_Fog_Base_Colors_Scaled_Directional_Base_Color) == 0x0002B8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Get_Current_Fog_Base_Colors_Scaled_Directional_Base_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Fog_Start_Distance_ReturnValue) == 0x0002C8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Fog_Start_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Fog_Height_Falloff_ReturnValue) == 0x0002D0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Fog_Height_Falloff_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Fog_Density_ReturnValue) == 0x0002D8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Fog_Density_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Overcast_Light_Contribution_ReturnValue) == 0x0002E0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Overcast_Light_Contribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x0002F0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Sun_Source_Angle_Out) == 0x000300, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Sun_Source_Angle_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_LinearColor_Desaturated_ReturnValue_1) == 0x000308, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_LinearColor_Desaturated_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Sun_Light_Color_ReturnValue) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Sun_Light_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000328, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x000330, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000338, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Is_Sun_Light_Casting_Shadows_Yes) == 0x000340, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Is_Sun_Light_Casting_Shadows_Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000348, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000358, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2) == 0x000360, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000368, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Sun_Light_Intensity_ReturnValue) == 0x000370, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Sun_Light_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000378, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Sun_Height_Z) == 0x000380, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Sun_Height_Z_1) == 0x000388, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Sun_Height_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_GetFloatValue_ReturnValue) == 0x000390, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000398, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_GetFloatValue_ReturnValue_1) == 0x0003A0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Sun_Height_Z_2) == 0x0003A8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Sun_Height_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Aurora_Intensity_ReturnValue) == 0x0003B0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Aurora_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_GetFloatValue_ReturnValue_2) == 0x0003B8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_GetFloatValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Stars_Color_ReturnValue) == 0x0003BC, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Stars_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Sun_Radius_ReturnValue) == 0x0003D0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Sun_Radius_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Sun_Disk_Color_ReturnValue) == 0x0003D8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Sun_Disk_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Moon_Lit_Percent_ReturnValue_1) == 0x0003E8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Moon_Lit_Percent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Sky_Atmosphere_Luminance_ReturnValue) == 0x0003F0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Sky_Atmosphere_Luminance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000400, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000408, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000410, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Simplified_Sun_Glow_Color_Out) == 0x000418, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Simplified_Sun_Glow_Color_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000428, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2) == 0x000438, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Simplified_Current_Color_Out) == 0x000448, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Simplified_Current_Color_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Simplified_Current_Color_Out_1) == 0x000458, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Simplified_Current_Color_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Simplified_Current_Color_Out_2) == 0x000468, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Simplified_Current_Color_Out_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Filtered_Moon_Light_Intensity_Intensity) == 0x000478, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Filtered_Moon_Light_Intensity_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Use_Sky_Atmosphere_ReturnValue_1) == 0x000480, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Use_Sky_Atmosphere_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Exposure_Bias_Bias) == 0x000488, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Exposure_Bias_Bias' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Not_PreBool_ReturnValue) == 0x000490, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Saturation_ReturnValue) == 0x000498, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Saturation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Lit_Intensity_ReturnValue) == 0x0004A0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Lit_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Overall_Intensity_ReturnValue) == 0x0004A8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Overall_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Light_Pollution_ReturnValue) == 0x0004B0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Light_Pollution_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Night_Sky_Glow_ReturnValue) == 0x0004C0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Night_Sky_Glow_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3) == 0x0004D0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_LinearColorFloat_ReturnValue_2) == 0x0004E0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_LinearColorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Add_LinearColorLinearColor_ReturnValue) == 0x0004F0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Add_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Directional_Inscattering_Exponent_ReturnValue) == 0x000500, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Directional_Inscattering_Exponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Scaled_Cache_Period_Period) == 0x000508, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Scaled_Cache_Period_Period' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Cloud_Wisp_Gradient_Vector_Out) == 0x000510, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Cloud_Wisp_Gradient_Vector_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Moon_Light_Material_Color_ReturnValue) == 0x000520, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Moon_Light_Material_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Moon_Lit_Percent_ReturnValue_2) == 0x000530, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Moon_Lit_Percent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Moon_Material_Intensity_ReturnValue) == 0x000538, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Moon_Material_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Moon_Phase_Angle_ReturnValue) == 0x000540, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Moon_Phase_Angle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Moon_Scale_and_Cutout_Value_Scale) == 0x000550, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Moon_Scale_and_Cutout_Value_Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Moon_Scale_and_Cutout_Value_Cutout) == 0x000558, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Moon_Scale_and_Cutout_Value_Cutout' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Unfiltered_Moon_Light_Intensity_Out) == 0x000560, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Unfiltered_Moon_Light_Intensity_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Wisps_Opacity_ReturnValue) == 0x000568, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Wisps_Opacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Get_Current_Cloud_Shadows_Intensity_and_Softness_Intensity) == 0x000570, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Get_Current_Cloud_Shadows_Intensity_and_Softness_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Get_Current_Cloud_Shadows_Intensity_and_Softness_Softness) == 0x000578, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Get_Current_Cloud_Shadows_Intensity_and_Softness_Softness' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000580, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x000584, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, K2Node_VariableSet_Height_Fog_Density_ImplicitCast) == 0x000588, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::K2Node_VariableSet_Height_Fog_Density_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Cache_Float_Set_Value_ImplicitCast) == 0x000590, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Cache_Float_Set_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000598, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_GetFloatValue_InTime_ImplicitCast_1) == 0x00059C, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_GetFloatValue_InTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0005A0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Cache_Float_Set_Value_ImplicitCast_1) == 0x0005A8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Cache_Float_Set_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_GetFloatValue_InTime_ImplicitCast_2) == 0x0005B0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_GetFloatValue_InTime_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Cache_Float_Set_Value_ImplicitCast_2) == 0x0005B8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Cache_Float_Set_Value_ImplicitCast_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cache Sun and Moon Orientation
// 0x0640 (0x0640 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation final
{
public:
	struct FVector                                Moon_Alignment;                                    // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Real_Moon_Phase;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Real_Moon_Position;                                // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Real_Sun_Position;                                 // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399E[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cancel_Shadows_Value_Out;                 // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Cloud_Shadows_Light_Vector_Process_Out;   // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cancel_Shadows_Value_Out_1;               // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Cloud_Shadows_Light_Vector_Process_Out_1; // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399F[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Using_2D_Clouds_ReturnValue;              // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A0[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A1[0x3];                                     // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A2[0x7];                                     // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_3;                          // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A3[0x7];                                     // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A4[0x6];                                     // 0x0222(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0280(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector; // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector; // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase; // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment; // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit; // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw; // 0x02E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x0338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Fraction_ReturnValue;                     // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_2;            // 0x0390(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_4;                          // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_2;               // 0x03E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_3;               // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0418(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Fraction_ReturnValue_1;                   // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0468(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_FClamp_ReturnValue_3;                     // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_2; // 0x0488(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_3; // 0x04A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x04C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_3;            // 0x04D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_4;            // 0x04F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_5;                          // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_5;                          // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_5;                          // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A5[0x7];                                     // 0x0529(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_6;           // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0540(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0560(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_4;               // 0x0580(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_4;            // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_5;               // 0x05A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A6[0x7];                                     // 0x05B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue_6;               // 0x05C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x05E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_7;           // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x0604(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x0608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x060C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast_1;                // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast_1;                // 0x0614(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast_1;                // 0x0618(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast_1;                // 0x061C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1;  // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x062C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_2;  // 0x0630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_3;  // 0x0634(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_4;  // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast_1;         // 0x063C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation) == 0x000640, "Wrong size on Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, Moon_Alignment) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::Moon_Alignment' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, Real_Moon_Phase) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::Real_Moon_Phase' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, Real_Moon_Position) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::Real_Moon_Position' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, Real_Sun_Position) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::Real_Sun_Position' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_X) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Y) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Z) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MakeRotFromX_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_GetUpVector_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_SelectVector_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_FClamp_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_X_1) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Y_1) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Z_1) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Abs_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Cancel_Shadows_Value_Out) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Cancel_Shadows_Value_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MapRangeClamped_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, K2Node_MakeStruct_LinearColor) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Cloud_Shadows_Light_Vector_Process_Out) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Cloud_Shadows_Light_Vector_Process_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Cancel_Shadows_Value_Out_1) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Cancel_Shadows_Value_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_X_2) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Y_2) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Z_2) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Cloud_Shadows_Light_Vector_Process_Out_1) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Cloud_Shadows_Light_Vector_Process_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_FClamp_ReturnValue_1) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, K2Node_MakeStruct_LinearColor_1) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Not_PreBool_ReturnValue) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Using_2D_Clouds_ReturnValue) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Using_2D_Clouds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BooleanOR_ReturnValue) == 0x0001D1, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BooleanOR_ReturnValue_1) == 0x0001D2, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BooleanAND_ReturnValue) == 0x0001D3, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BooleanAND_ReturnValue_1) == 0x0001D4, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_SelectFloat_ReturnValue) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BooleanOR_ReturnValue_2) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_X_3) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Y_3) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Z_3) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BooleanOR_ReturnValue_3) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_FClamp_ReturnValue_2) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BooleanAND_ReturnValue_2) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000221, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_SelectFloat_ReturnValue_1) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_RotateAngleAxis_ReturnValue) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_SelectVector_ReturnValue_1) == 0x000250, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Normal_ReturnValue) == 0x000268, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000280, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector) == 0x000290, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector) == 0x0002A8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase) == 0x0002C0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment) == 0x0002C8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit) == 0x0002E0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw) == 0x0002E8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MakeRotator_ReturnValue) == 0x0002F8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000310, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000330, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x000338, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Fraction_ReturnValue) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Fraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000358, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000360, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000368, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x000370, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000388, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_RotateAngleAxis_ReturnValue_2) == 0x000390, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_RotateAngleAxis_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_X_4) == 0x0003A8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Y_4) == 0x0003B0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Z_4) == 0x0003B8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x0003C0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MakeVector_ReturnValue) == 0x0003C8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x0003E0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_SelectVector_ReturnValue_2) == 0x0003E8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_SelectVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_SelectVector_ReturnValue_3) == 0x000400, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_SelectVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Normal_ReturnValue_1) == 0x000418, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000430, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000438, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Fraction_ReturnValue_1) == 0x000440, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Fraction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000448, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Abs_ReturnValue_1) == 0x000450, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000458, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000460, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MakeRotator_ReturnValue_1) == 0x000468, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_FClamp_ReturnValue_3) == 0x000480, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_GreaterGreater_VectorRotator_ReturnValue_2) == 0x000488, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_GreaterGreater_VectorRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Lerp_ReturnValue) == 0x0004A0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_GreaterGreater_VectorRotator_ReturnValue_3) == 0x0004A8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_GreaterGreater_VectorRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MakeVector_ReturnValue_1) == 0x0004C0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_RotateAngleAxis_ReturnValue_3) == 0x0004D8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_RotateAngleAxis_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_RotateAngleAxis_ReturnValue_4) == 0x0004F0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_RotateAngleAxis_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000508, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_X_5) == 0x000510, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Y_5) == 0x000518, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Z_5) == 0x000520, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000528, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Add_DoubleDouble_ReturnValue_6) == 0x000530, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Add_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000538, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MakeVector_ReturnValue_2) == 0x000540, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000558, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000560, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_SelectFloat_ReturnValue_2) == 0x000578, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_SelectVector_ReturnValue_4) == 0x000580, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_SelectVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MapRangeClamped_ReturnValue_4) == 0x000598, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MapRangeClamped_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_SelectVector_ReturnValue_5) == 0x0005A0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_SelectVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_InRange_FloatFloat_ReturnValue) == 0x0005B8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_SelectVector_ReturnValue_6) == 0x0005C0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_SelectVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_SelectFloat_ReturnValue_3) == 0x0005D8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Normal_ReturnValue_2) == 0x0005E0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Add_DoubleDouble_ReturnValue_7) == 0x0005F8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Add_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, K2Node_MakeStruct_R_ImplicitCast) == 0x000600, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, K2Node_MakeStruct_G_ImplicitCast) == 0x000604, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, K2Node_MakeStruct_B_ImplicitCast) == 0x000608, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, K2Node_MakeStruct_A_ImplicitCast) == 0x00060C, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, K2Node_MakeStruct_R_ImplicitCast_1) == 0x000610, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::K2Node_MakeStruct_R_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, K2Node_MakeStruct_G_ImplicitCast_1) == 0x000614, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::K2Node_MakeStruct_G_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, K2Node_MakeStruct_B_ImplicitCast_1) == 0x000618, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::K2Node_MakeStruct_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, K2Node_MakeStruct_A_ImplicitCast_1) == 0x00061C, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::K2Node_MakeStruct_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x000620, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000624, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1) == 0x000628, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x00062C, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_2) == 0x000630, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_3) == 0x000634, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_4) == 0x000638, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MakeRotator_Pitch_ImplicitCast_1) == 0x00063C, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MakeRotator_Pitch_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cache Vector
// 0x0068 (0x0068 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cache_Vector final
{
public:
	EUDS_CachedProperties                         Property;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Set_Value;                                         // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A8[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A9[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Get_Cached_Vector_Value;                  // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cache_Vector) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cache_Vector");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cache_Vector) == 0x000068, "Wrong size on Ultra_Dynamic_Sky_C_Cache_Vector");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, Property) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::Property' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, Set_Value) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::Set_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, Param_Index) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::Param_Index' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, Temp_bool_Variable) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, CallFunc_Get_Cached_Vector_Value) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::CallFunc_Get_Cached_Vector_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, CallFunc_Array_Get_Item) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cancel Shadows Value
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cancel_Shadows_Value final
{
public:
	struct FVector                                Light_Vector;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Out;                                               // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cancel_Shadows_Value");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value) == 0x000080, "Wrong size on Ultra_Dynamic_Sky_C_Cancel_Shadows_Value");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value, Light_Vector) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cancel_Shadows_Value::Light_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value, Out) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cancel_Shadows_Value::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value, CallFunc_BreakVector_X) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cancel_Shadows_Value::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value, CallFunc_BreakVector_Y) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Cancel_Shadows_Value::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value, CallFunc_BreakVector_Z) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Cancel_Shadows_Value::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Cancel_Shadows_Value::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Cancel_Shadows_Value::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value, CallFunc_FClamp_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Cancel_Shadows_Value::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value, CallFunc_MapRangeClamped_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Cancel_Shadows_Value::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Cancel_Shadows_Value::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Cancel_Shadows_Value::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value, CallFunc_FMax_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Cancel_Shadows_Value::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Cancel_Shadows_Value::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Cancel_Shadows_Value::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Change Sky Mode at Runtime
// 0x0006 (0x0006 - 0x0000)
struct Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime final
{
public:
	EUDS_SkyMode                                  New_Sky_Mode;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime) == 0x000006, "Wrong size on Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime, New_Sky_Mode) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime::New_Sky_Mode' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime, CallFunc_BooleanAND_ReturnValue_1) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime, CallFunc_BooleanAND_ReturnValue_2) == 0x000005, "Member 'Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Check for Daylight Savings Time
// 0x0070 (0x0070 - 0x0000)
struct Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AA[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AB[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimecode                              CallFunc_Convert_Time_of_Day_to_Time_Code_Timecode; // 0x0030(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AC[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AD[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue_1;               // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue_2;               // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DateTimeDateTime_ReturnValue;   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DateTimeDateTime_ReturnValue; // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time) == 0x000070, "Wrong size on Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_SelectFloat_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_BooleanAND_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_BooleanOR_ReturnValue) == 0x000021, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_BooleanOR_ReturnValue_1) == 0x000022, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_BooleanAND_ReturnValue_1) == 0x000023, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_Convert_Time_of_Day_to_Time_Code_Timecode) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_Convert_Time_of_Day_to_Time_Code_Timecode' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_MakeDateTime_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_MakeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_MakeDateTime_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_MakeDateTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_MakeDateTime_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_MakeDateTime_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_LessEqual_DateTimeDateTime_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_LessEqual_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_GreaterEqual_DateTimeDateTime_ReturnValue) == 0x000069, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_GreaterEqual_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_BooleanAND_ReturnValue_2) == 0x00006A, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00006B, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cloud Darkening
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cloud_Darkening final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cloud_Darkening) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cloud_Darkening");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cloud_Darkening) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Cloud_Darkening");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Darkening, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cloud_Darkening::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Darkening, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Cloud_Darkening::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Darkening, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Cloud_Darkening::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Darkening, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cloud_Darkening::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cloud Shadows Cloud Density
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AE[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density, CallFunc_SelectFloat_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cloud Shadows Light Vector Process
// 0x00C8 (0x00C8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process final
{
public:
	struct FVector                                Vector;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Out;                                               // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process) == 0x0000C8, "Wrong size on Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, Vector) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, Out) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_BreakVector_X) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_BreakVector_Y) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_BreakVector_Z) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_FClamp_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_Lerp_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_MakeVector_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_MapRangeClamped_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_BreakVector_X_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_BreakVector_Y_1) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_BreakVector_Z_1) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, K2Node_MakeStruct_LinearColor) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, K2Node_MakeStruct_A_ImplicitCast) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, K2Node_MakeStruct_R_ImplicitCast) == 0x0000BC, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, K2Node_MakeStruct_G_ImplicitCast) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, K2Node_MakeStruct_B_ImplicitCast) == 0x0000C4, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cloud Shadows Parent Material
// 0x0138 (0x0138 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      Mat;                                               // 0x0000(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AF[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable;                          // 0x0038(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_1;                        // 0x0068(0x0030)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B0[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x00A0(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B1[0x6];                                     // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default;                             // 0x00D8(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default_1;                           // 0x0108(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material) == 0x000138, "Wrong size on Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, Mat) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::Mat' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, Temp_bool_Variable) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, Temp_softobject_Variable) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, Temp_softobject_Variable_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, Temp_bool_Variable_1) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0000D1, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, K2Node_Select_Default) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, K2Node_Select_Default_1) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::K2Node_Select_Default_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cloud Texture Velocity
// 0x00E8 (0x00E8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Base_Clouds_Scale_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B2[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue;              // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity) == 0x0000E8, "Wrong size on Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_Current_Base_Clouds_Scale_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_Current_Base_Clouds_Scale_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_MakeVector_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_SelectFloat_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_MakeRotator_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_Add_VectorVector_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_ClampVectorSize_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_ClampVectorSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cloud Wisp Gradient Vector
// 0x00F8 (0x00F8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector final
{
public:
	struct FLinearColor                           Out;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B3[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_A_ImplicitCast;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_R_ImplicitCast;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_G_ImplicitCast;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_B_ImplicitCast;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector) == 0x0000F8, "Wrong size on Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_X) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_Y) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_Z) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_X_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_Y_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_Z_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_MapRangeClamped_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_FMax_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_X_2) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_Y_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_Z_2) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_Abs_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_SelectFloat_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_SelectVector_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_X_3) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_Y_3) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_Z_3) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_MakeColor_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_MakeColor_A_ImplicitCast) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_MakeColor_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_MakeColor_R_ImplicitCast) == 0x0000EC, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_MakeColor_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_MakeColor_G_ImplicitCast) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_MakeColor_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_MakeColor_B_ImplicitCast) == 0x0000F4, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_MakeColor_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Clouds Time of Day Factor
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Total_Time_Elapsed_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor, CallFunc_Total_Time_Elapsed_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor::CallFunc_Total_Time_Elapsed_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Construction Script Function
// 0x03F8 (0x03F8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Construction_Script_Function final
{
public:
	bool                                          Run_By_Counterpart;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Move_Static_Lights;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B4[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B5[0x5];                                     // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureCube*                           K2Node_DynamicCast_AsTexture_Cube;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B6[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm)
	TArray<class UMaterialInstanceDynamic*>       K2Node_MakeArray_Array_1;                          // 0x0048(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B7[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       K2Node_MakeArray_Array_2;                          // 0x0060(0x0010)(ReferenceParm)
	TArray<class UMaterialInstanceDynamic*>       K2Node_MakeArray_Array_3;                          // 0x0070(0x0010)(ReferenceParm)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Cloud_Shadows_Parent_Material_Mat;        // 0x0080(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Static_Clouds_Parent_Material_Material;   // 0x00B0(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2; // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B8[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_1;         // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B9[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39BA[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3; // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4; // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_2;         // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39BB[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_3;         // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39BC[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_3; // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x0168(0x0010)(NoDestructor)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5; // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FWeightedBlendable>             K2Node_MakeArray_Array_4;                          // 0x0180(0x0010)(ReferenceParm)
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39BD[0x7];                                     // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendables                    K2Node_MakeStruct_WeightedBlendables;              // 0x01A0(0x0010)()
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_6; // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_4;         // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39BE[0x6];                                     // 0x01C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_4; // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       CallFunc_All_Volumetric_Cloud_MIDs_MIDs;           // 0x01D0(0x0010)(ReferenceParm)
	TArray<class UMaterialInstanceDynamic*>       CallFunc_All_Volumetric_Cloud_MIDs_MIDs_1;         // 0x01E0(0x0010)(ReferenceParm)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Get_Sky_MID_Parent_Material_Instance_ReturnValue; // 0x01F0(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_7; // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_5;         // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39BF[0x7];                                     // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Volumetric_Clouds_Parent_Materials_Simplified; // 0x0238(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Volumetric_Clouds_Parent_Materials_Complex; // 0x0268(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Volumetric_Clouds_Parent_Materials_Simplified_1; // 0x0298(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Volumetric_Clouds_Parent_Materials_Complex_1; // 0x02C8(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_8; // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_9; // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_6;         // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C0[0x7];                                     // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_7;         // 0x0318(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C1[0x7];                                     // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_5; // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_6; // 0x0330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x033A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x033B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x033D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x033E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x033F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue;                 // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0342(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0343(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0344(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0345(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0346(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0347(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C2[0x6];                                     // 0x034A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_7; // 0x0350(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x035A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C3[0x5];                                     // 0x035B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x036A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C4[0x5];                                     // 0x036B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_10; // 0x0370(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C5[0x7];                                     // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureCube*                           K2Node_DynamicCast_AsTexture_Cube_1;               // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x038A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C6[0x5];                                     // 0x038B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       K2Node_Select_Default;                             // 0x0390(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x03A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x03A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x03A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x03A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C7[0x3];                                     // 0x03A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       K2Node_Select_Default_1;                           // 0x03A8(0x0010)(ReferenceParm)
	class USkyLightComponent*                     K2Node_Select_Default_2;                           // 0x03B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkyLightComponent*                     K2Node_Select_Default_3;                           // 0x03C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x03C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x03CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x03CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x03CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x03CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C8[0x2];                                     // 0x03CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UDirectionalLightComponent*             K2Node_DynamicCast_AsDirectional_Light_Component;  // 0x03D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x03D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x03DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C9[0x5];                                     // 0x03DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UDirectionalLightComponent*             K2Node_DynamicCast_AsDirectional_Light_Component_1; // 0x03E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39CA[0x7];                                     // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_8; // 0x03F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Construction_Script_Function) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Construction_Script_Function");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Construction_Script_Function) == 0x0003F8, "Wrong size on Ultra_Dynamic_Sky_C_Construction_Script_Function");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, Run_By_Counterpart) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::Run_By_Counterpart' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, Move_Static_Lights) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::Move_Static_Lights' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, Temp_bool_Variable) == 0x00001A, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsTexture_Cube) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsTexture_Cube' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_MakeArray_Array) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_MakeArray_Array_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_MakeArray_Array_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_MakeArray_Array_3) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Cloud_Shadows_Parent_Material_Mat) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Cloud_Shadows_Parent_Material_Mat' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Static_Clouds_Parent_Material_Material) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Static_Clouds_Parent_Material_Material' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsMaterial_Interface) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_2) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsMaterial_Interface_1) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsMaterial_Interface_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_3) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, Temp_bool_Variable_1) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsMaterial_Interface_2) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsMaterial_Interface_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_4) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsMaterial_Interface_3) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsMaterial_Interface_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_5) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_CreateDynamicMaterialInstance_ReturnValue_3) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_CreateDynamicMaterialInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_MakeStruct_WeightedBlendable) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_MakeArray_Array_4) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsNiagara_System) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_6) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_MakeStruct_WeightedBlendables) == 0x0001A0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_MakeStruct_WeightedBlendables' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_6) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsMaterial_Interface_4) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsMaterial_Interface_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_7) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x0001C1, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_CreateDynamicMaterialInstance_ReturnValue_4) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_CreateDynamicMaterialInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_All_Volumetric_Cloud_MIDs_MIDs) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_All_Volumetric_Cloud_MIDs_MIDs' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_All_Volumetric_Cloud_MIDs_MIDs_1) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_All_Volumetric_Cloud_MIDs_MIDs_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Get_Sky_MID_Parent_Material_Instance_ReturnValue) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Get_Sky_MID_Parent_Material_Instance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_7) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsMaterial_Interface_5) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsMaterial_Interface_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_8) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Volumetric_Clouds_Parent_Materials_Simplified) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Volumetric_Clouds_Parent_Materials_Simplified' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Volumetric_Clouds_Parent_Materials_Complex) == 0x000268, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Volumetric_Clouds_Parent_Materials_Complex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Volumetric_Clouds_Parent_Materials_Simplified_1) == 0x000298, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Volumetric_Clouds_Parent_Materials_Simplified_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Volumetric_Clouds_Parent_Materials_Complex_1) == 0x0002C8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Volumetric_Clouds_Parent_Materials_Complex_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_8) == 0x0002F8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_9) == 0x000300, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsMaterial_Interface_6) == 0x000308, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsMaterial_Interface_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_9) == 0x000310, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsMaterial_Interface_7) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsMaterial_Interface_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_10) == 0x000320, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_CreateDynamicMaterialInstance_ReturnValue_5) == 0x000328, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_CreateDynamicMaterialInstance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_CreateDynamicMaterialInstance_ReturnValue_6) == 0x000330, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_CreateDynamicMaterialInstance_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000338, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Not_PreBool_ReturnValue) == 0x000339, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00033A, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanAND_ReturnValue) == 0x00033B, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanAND_ReturnValue_1) == 0x00033C, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanAND_ReturnValue_2) == 0x00033D, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Not_PreBool_ReturnValue_1) == 0x00033E, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00033F, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_IsStandalone_ReturnValue) == 0x000340, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_IsStandalone_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Not_PreBool_ReturnValue_2) == 0x000341, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanAND_ReturnValue_3) == 0x000342, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000343, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000344, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanAND_ReturnValue_4) == 0x000345, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanAND_ReturnValue_5) == 0x000346, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanAND_ReturnValue_6) == 0x000347, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanAND_ReturnValue_7) == 0x000348, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000349, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_CreateDynamicMaterialInstance_ReturnValue_7) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_CreateDynamicMaterialInstance_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000358, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Not_PreBool_ReturnValue_3) == 0x000359, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x00035A, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000360, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000368, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x000369, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Not_PreBool_ReturnValue_4) == 0x00036A, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_10) == 0x000370, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x000378, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsTexture_Cube_1) == 0x000380, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsTexture_Cube_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_11) == 0x000388, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, Temp_bool_Variable_2) == 0x000389, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x00038A, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_Select_Default) == 0x000390, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x0003A0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0003A1, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x0003A2, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, Temp_bool_Variable_3) == 0x0003A3, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanAND_ReturnValue_8) == 0x0003A4, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_Select_Default_1) == 0x0003A8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_Select_Default_2) == 0x0003B8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_Select_Default_3) == 0x0003C0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_SwitchEnum_CmpSuccess) == 0x0003C8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_SwitchEnum_CmpSuccess_1) == 0x0003C9, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_SwitchEnum_CmpSuccess_2) == 0x0003CA, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_SwitchEnum_CmpSuccess_3) == 0x0003CB, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_IsValid_ReturnValue_1) == 0x0003CC, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_IsValid_ReturnValue_2) == 0x0003CD, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsDirectional_Light_Component) == 0x0003D0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsDirectional_Light_Component' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_12) == 0x0003D8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_IsValid_ReturnValue_3) == 0x0003D9, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_IsValid_ReturnValue_4) == 0x0003DA, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsDirectional_Light_Component_1) == 0x0003E0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsDirectional_Light_Component_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_13) == 0x0003E8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_CreateDynamicMaterialInstance_ReturnValue_8) == 0x0003F0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_CreateDynamicMaterialInstance_ReturnValue_8' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Control UDW Weather State
// 0x0058 (0x0058 - 0x0000)
struct Ultra_Dynamic_Sky_C_Control_UDW_Weather_State final
{
public:
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39CB[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39CC[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39CD[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_2; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Control_UDW_Weather_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Control_UDW_Weather_State");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Control_UDW_Weather_State) == 0x000058, "Wrong size on Ultra_Dynamic_Sky_C_Control_UDW_Weather_State");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Control_UDW_Weather_State, CallFunc_GetGameMode_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Control_UDW_Weather_State::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Control_UDW_Weather_State, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Control_UDW_Weather_State::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Control_UDW_Weather_State, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Control_UDW_Weather_State::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Control_UDW_Weather_State, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Control_UDW_Weather_State::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Control_UDW_Weather_State, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'Ultra_Dynamic_Sky_C_Control_UDW_Weather_State::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Control_UDW_Weather_State, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Control_UDW_Weather_State::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Control_UDW_Weather_State, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Control_UDW_Weather_State::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Control_UDW_Weather_State, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_2) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Control_UDW_Weather_State::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Control_UDW_Weather_State, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Control_UDW_Weather_State::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Control_UDW_Weather_State, CallFunc_Not_PreBool_ReturnValue_1) == 0x000051, "Member 'Ultra_Dynamic_Sky_C_Control_UDW_Weather_State::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Control_UDW_Weather_State, CallFunc_IsValid_ReturnValue_1) == 0x000052, "Member 'Ultra_Dynamic_Sky_C_Control_UDW_Weather_State::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Convert Time of Day to Time Code
// 0x0090 (0x0090 - 0x0000)
struct Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimecode                              Timecode;                                          // 0x0008(0x0014)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39CE[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39CF[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Fraction_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D0[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Fraction_ReturnValue_1;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_2;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D1[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Fraction_ReturnValue_2;                   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_3;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimecode                              K2Node_MakeStruct_Timecode;                        // 0x007C(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code) == 0x000090, "Wrong size on Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, Time) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, Timecode) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::Timecode' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_FFloor_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_Fraction_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_Fraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_FFloor_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_Fraction_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_Fraction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_FFloor_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_FFloor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_Fraction_ReturnValue_2) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_Fraction_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_FFloor_ReturnValue_3) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_FFloor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, K2Node_MakeStruct_Timecode) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::K2Node_MakeStruct_Timecode' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Create Post Process Components
// 0x07D0 (0x07D0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Create_Post_Process_Components final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D2[0xC];                                     // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0010(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D3[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPostProcessComponent*                  CallFunc_AddComponent_ReturnValue;                 // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D4[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPostProcessComponent*                  CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D5[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D6[0xC];                                     // 0x00A4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUDS_Post_Process_Stage                CallFunc_Array_Get_Item_1;                         // 0x00B0(0x0710)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x07C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x07C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D7[0x3];                                     // 0x07C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_VariableSet_Priority_ImplicitCast;          // 0x07C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components) == 0x000010, "Wrong alignment on Ultra_Dynamic_Sky_C_Create_Post_Process_Components");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components) == 0x0007D0, "Wrong size on Ultra_Dynamic_Sky_C_Create_Post_Process_Components");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, Temp_int_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, Temp_struct_Variable) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_AddComponent_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, Temp_int_Array_Index_Variable) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_Add_IntInt_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00008C, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_Array_Get_Item) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_Array_Add_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_Array_Get_Item_1) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_Array_Length_ReturnValue_1) == 0x0007C0, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_Less_IntInt_ReturnValue_1) == 0x0007C4, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, K2Node_VariableSet_Priority_ImplicitCast) == 0x0007C8, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::K2Node_VariableSet_Priority_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Create UDS and UDW State for Saving
// 0x0490 (0x0490 - 0x0000)
struct Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving final
{
public:
	struct FUDS_and_UDW_State                     Packaged_State;                                    // 0x0000(0x0178)(Parm, OutParm, HasGetValueTypeHash)
	struct FUDS_and_UDW_State                     State;                                             // 0x0178(0x0178)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x02F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D8[0x7];                                     // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUDS_and_UDW_State                     CallFunc_Get_State_for_Saving_UDW_State;           // 0x0308(0x0178)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D9[0x7];                                     // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_Get_Current_Date_and_Time_Current_Date_and_Time; // 0x0488(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving) == 0x000490, "Wrong size on Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving, Packaged_State) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving::Packaged_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving, State) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving::State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x0002F0, "Member 'Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving, K2Node_DynamicCast_bSuccess) == 0x000300, "Member 'Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving, CallFunc_Get_State_for_Saving_UDW_State) == 0x000308, "Member 'Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving::CallFunc_Get_State_for_Saving_UDW_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving, CallFunc_IsValid_ReturnValue) == 0x000480, "Member 'Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving, CallFunc_Get_Current_Date_and_Time_Current_Date_and_Time) == 0x000488, "Member 'Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving::CallFunc_Get_Current_Date_and_Time_Current_Date_and_Time' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current 2D Cloud Tint
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint, CallFunc_LinearColorLerp_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Applied Cloud Top and Bottom
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Applied_Cloud_Top_and_Bottom final
{
public:
	double                                        Bottom;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Top;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39DA[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Applied_Cloud_Top_and_Bottom) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Applied_Cloud_Top_and_Bottom");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Applied_Cloud_Top_and_Bottom) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Current_Applied_Cloud_Top_and_Bottom");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Applied_Cloud_Top_and_Bottom, Bottom) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Applied_Cloud_Top_and_Bottom::Bottom' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Applied_Cloud_Top_and_Bottom, Top) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Applied_Cloud_Top_and_Bottom::Top' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Applied_Cloud_Top_and_Bottom, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Applied_Cloud_Top_and_Bottom::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Applied_Cloud_Top_and_Bottom, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Applied_Cloud_Top_and_Bottom::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Applied_Cloud_Top_and_Bottom, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Applied_Cloud_Top_and_Bottom::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Applied_Cloud_Top_and_Bottom, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Applied_Cloud_Top_and_Bottom::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Applied_Cloud_Top_and_Bottom, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Applied_Cloud_Top_and_Bottom::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Applied_Cloud_Top_and_Bottom, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Applied_Cloud_Top_and_Bottom::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Applied_Cloud_Top_and_Bottom, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Applied_Cloud_Top_and_Bottom::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Applied_Cloud_Top_and_Bottom, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Applied_Cloud_Top_and_Bottom::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Aurora Intensity
// 0x0058 (0x0058 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Aurora_Intensity final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39DB[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39DC[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Aurora_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity) == 0x000058, "Wrong size on Ultra_Dynamic_Sky_C_Current_Aurora_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Aurora_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity, CallFunc_Sun_Height_Z) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Aurora_Intensity::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Aurora_Intensity::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity, CallFunc_GetFloatValue_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Current_Aurora_Intensity::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Aurora_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Aurora_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Aurora_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Aurora_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Aurora_Intensity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Aurora_Intensity::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Aurora_Intensity::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Aurora_Intensity::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Base Clouds Scale
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Directional Inscattering Exponent
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent, CallFunc_FMax_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent, CallFunc_Lerp_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Exposure Bias
// 0x0070 (0x0070 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Exposure_Bias final
{
public:
	double                                        Bias;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_OutRangeB_ImplicitCast;   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_OutRangeB_ImplicitCast_1; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_A_ImplicitCast;                      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast;                      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Exposure_Bias");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias) == 0x000070, "Wrong size on Ultra_Dynamic_Sky_C_Current_Exposure_Bias");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, Bias) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::Bias' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_Night_Filter_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_Lerp_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_MapRangeClamped_OutRangeB_ImplicitCast) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_MapRangeClamped_OutRangeB_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_MapRangeClamped_OutRangeB_ImplicitCast_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_MapRangeClamped_OutRangeB_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_Lerp_A_ImplicitCast) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_Lerp_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_Lerp_B_ImplicitCast) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_Lerp_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Fog Density
// 0x0098 (0x0098 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Fog_Density final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39DD[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Fog_Density) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Fog_Density");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Fog_Density) == 0x000098, "Wrong size on Ultra_Dynamic_Sky_C_Current_Fog_Density");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Night_Filter_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_SelectFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_FClamp_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_FMax_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Fog Directional Inscattering Color
// 0x0100 (0x0100 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color final
{
public:
	struct FLinearColor                           Directional_Inscattering_Color;                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39DE[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39DF[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_Value_ImplicitCast;                // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color) == 0x000100, "Wrong size on Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, Directional_Inscattering_Color) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::Directional_Inscattering_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_BreakVector_X) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_BreakVector_Y) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_BreakVector_Z) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Sun_Height_Z) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_FMax_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_GetFloatValue_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_FClamp_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_SelectFloat_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_SelectColor_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_FClamp_Value_ImplicitCast) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_FClamp_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Fog Inscattering Color
// 0x0180 (0x0180 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color final
{
public:
	struct FLinearColor                           Inscattering_Color;                                // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Directional_Light_Dimming_Out;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Light_Pollution_ReturnValue;      // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Night_Sky_Glow_ReturnValue;       // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_GetLuminance_ReturnValue;     // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E0[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_2;  // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue;   // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_1; // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_2; // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E1[0x4];                                     // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1; // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color) == 0x000180, "Wrong size on Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, Inscattering_Color) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::Inscattering_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_BreakVector_X) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_BreakVector_Y) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_BreakVector_Z) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Abs_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_LinearColorLerp_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Directional_Light_Dimming_Out) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Directional_Light_Dimming_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Current_Light_Pollution_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Current_Light_Pollution_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_FMax_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_FClamp_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Current_Night_Sky_Glow_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Current_Night_Sky_Glow_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_LinearColor_GetLuminance_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_LinearColor_GetLuminance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_MapRangeClamped_ReturnValue_2) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue_2) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Add_LinearColorLinearColor_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Add_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_SelectColor_ReturnValue) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Add_LinearColorLinearColor_ReturnValue_1) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Add_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Add_LinearColorLinearColor_ReturnValue_2) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Add_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x000164, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Lerp to Simplified Clouds
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds final
{
public:
	double                                        Alpha;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, Alpha) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_FClamp_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Light Pollution
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Light_Pollution final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Light_Pollution) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Light_Pollution");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Light_Pollution) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Current_Light_Pollution");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Light_Pollution, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Light_Pollution::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Light_Pollution, CallFunc_Night_Filter_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Light_Pollution::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Light_Pollution, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Light_Pollution::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Light_Pollution, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Light_Pollution::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Light_Pollution, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Light_Pollution::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Lit Intensity
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Lit_Intensity final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E2[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Absent_Directional_Lights_Brightness_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Lit_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Current_Lit_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, CallFunc_Absent_Directional_Lights_Brightness_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::CallFunc_Absent_Directional_Lights_Brightness_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Max Trace Distance
// 0x0070 (0x0070 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Applied_Cloud_Top_and_Bottom_Bottom; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Applied_Cloud_Top_and_Bottom_Top; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance) == 0x000070, "Wrong size on Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance, CallFunc_Current_Applied_Cloud_Top_and_Bottom_Bottom) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance::CallFunc_Current_Applied_Cloud_Top_and_Bottom_Bottom' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance, CallFunc_Current_Applied_Cloud_Top_and_Bottom_Top) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance::CallFunc_Current_Applied_Cloud_Top_and_Bottom_Top' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance, CallFunc_BreakVector_X) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance, CallFunc_BreakVector_Y) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance, CallFunc_BreakVector_Z) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance, CallFunc_Abs_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance, CallFunc_SelectFloat_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance, CallFunc_Lerp_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Mie Anisotropy
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Flat_Cloudiness_On;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E3[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy, CallFunc_Flat_Cloudiness_On) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy::CallFunc_Flat_Cloudiness_On' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy, CallFunc_SelectFloat_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Mie Scattering Scale
// 0x0068 (0x0068 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Flat_Cloudiness_On;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Flat_Cloudiness_On_1;                     // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E4[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Flat_Cloudiness_On_2;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E5[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale) == 0x000068, "Wrong size on Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_Flat_Cloudiness_On) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_Flat_Cloudiness_On' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_Flat_Cloudiness_On_1) == 0x000009, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_Flat_Cloudiness_On_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_SelectFloat_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_Flat_Cloudiness_On_2) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_Flat_Cloudiness_On_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_SelectFloat_ReturnValue_2) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_MapRangeClamped_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Moon Light Color
// 0x0070 (0x0070 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Moon_Light_Color final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E6[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue;          // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLinearColorValue_InTime_ImplicitCast;  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Moon_Light_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color) == 0x000070, "Wrong size on Ultra_Dynamic_Sky_C_Current_Moon_Light_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, Color) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_BreakVector_X) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_BreakVector_Y) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_BreakVector_Z) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_GetLinearColorValue_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_GetLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_SelectColor_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_GetLinearColorValue_InTime_ImplicitCast) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_GetLinearColorValue_InTime_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Moon Light Material Color
// 0x00E8 (0x00E8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue;   // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetClampedLinearColorValue_InTime_ImplicitCast; // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1; // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color) == 0x0000E8, "Wrong size on Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_BreakVector_X) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_BreakVector_Y) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_BreakVector_Z) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_FClamp_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_GetClampedLinearColorValue_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_GetClampedLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_LinearColorLerp_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_GetClampedLinearColorValue_InTime_ImplicitCast) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_GetClampedLinearColorValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x0000DC, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Moon Lit Percent
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent, CallFunc_Abs_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent, CallFunc_FClamp_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Moon Material Intensity
// 0x0070 (0x0070 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Flat_Cloudiness_On;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E7[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity) == 0x000070, "Wrong size on Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_Night_Filter_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_Flat_Cloudiness_On) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_Flat_Cloudiness_On' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_BreakVector_X) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_BreakVector_Y) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_BreakVector_Z) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_FClamp_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_Lerp_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_SelectFloat_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Moon Phase Angle
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle) == 0x000060, "Wrong size on Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle, CallFunc_MakeRotator_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Moon Scale and Cutout Value
// 0x0058 (0x0058 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value final
{
public:
	double                                        Scale;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Cutout;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value) == 0x000058, "Wrong size on Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, Scale) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, Cutout) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::Cutout' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, CallFunc_BreakVector_X) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, CallFunc_BreakVector_Y) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, CallFunc_BreakVector_Z) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Moon Source Angle
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle) == 0x000060, "Wrong size on Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle, CallFunc_Lerp_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle, CallFunc_MapRangeClamped_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle, CallFunc_FMax_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle, CallFunc_FClamp_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Night Sky Glow
// 0x0068 (0x0068 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow) == 0x000068, "Wrong size on Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Night_Filter_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_FClamp_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Overall Intensity
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Overall_Intensity final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E8[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Find_Overall_Intensity_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Overall_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Current_Overall_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000009, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, CallFunc_SelectFloat_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, CallFunc_Find_Overall_Intensity_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::CallFunc_Find_Overall_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Overcast Swirl
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Overcast_Swirl final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Overcast_Swirl) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Overcast_Swirl");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Overcast_Swirl) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Current_Overcast_Swirl");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overcast_Swirl, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Overcast_Swirl::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overcast_Swirl, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Overcast_Swirl::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overcast_Swirl, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Overcast_Swirl::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Rayleigh Scattering Color
// 0x0068 (0x0068 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Simplified_Current_Color_Out;             // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color) == 0x000068, "Wrong size on Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_Simplified_Current_Color_Out) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_Simplified_Current_Color_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Saturation
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Saturation final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E9[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39EA[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39EB[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Saturation) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Saturation");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Saturation) == 0x000040, "Wrong size on Ultra_Dynamic_Sky_C_Current_Saturation");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, CallFunc_BooleanOR_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, CallFunc_SelectFloat_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sky Ambient Color
// 0x0198 (0x0198 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color final
{
public:
	struct FLinearColor                           Sky_Ambient_Color;                                 // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39EC[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Lit_Intensity_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_1;   // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Moon_Lit_Percent_ReturnValue;     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_2;   // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue;   // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Divide_LinearColorLinearColor_ReturnValue; // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_A_ImplicitCast;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color) == 0x000198, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, Sky_Ambient_Color) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::Sky_Ambient_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Night_Filter_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Lerp_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_BreakVector_X) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_BreakVector_Y) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_BreakVector_Z) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_FClamp_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Current_Lit_Intensity_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Current_Lit_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_SelectFloat_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_1) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Current_Moon_Lit_Percent_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Current_Moon_Lit_Percent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_LinearColorLerp_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_LinearColorLerp_ReturnValue_1) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_2) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Add_LinearColorLinearColor_ReturnValue) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Add_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Divide_LinearColorLinearColor_ReturnValue) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Divide_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_BreakColor_R) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_BreakColor_G) == 0x000164, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_BreakColor_B) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_BreakColor_A) == 0x00016C, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_MakeColor_ReturnValue) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x00018C, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_MakeColor_A_ImplicitCast) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_MakeColor_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sky Atmosphere Absorbtion Scale
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorbtion_Scale final
{
public:
	double                                        Scale;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorbtion_Scale) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorbtion_Scale");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorbtion_Scale) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorbtion_Scale");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorbtion_Scale, Scale) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorbtion_Scale::Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorbtion_Scale, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorbtion_Scale::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorbtion_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorbtion_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sky Atmosphere Luminance
// 0x00C0 (0x00C0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Directional_Inscattering_Multiplier_Multiplier; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_1;   // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance) == 0x0000C0, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_BreakVector_X) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_BreakVector_Y) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_BreakVector_Z) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_Abs_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_LinearColorLerp_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_Directional_Inscattering_Multiplier_Multiplier) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_Directional_Inscattering_Multiplier_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_Conv_DoubleToLinearColor_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_Conv_DoubleToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x0000BC, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sky Light Lower Hemisphere Color
// 0x0054 (0x0054 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39ED[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color) == 0x000054, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_BreakColor_R) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_BreakColor_G) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_BreakColor_B) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_BreakColor_A) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_MakeColor_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_SelectColor_ReturnValue) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Stars Color
// 0x00A8 (0x00A8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Stars_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Flat_Cloudiness_On;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39EE[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39EF[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F0[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_A_ImplicitCast;                      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Stars_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Stars_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Stars_Color) == 0x0000A8, "Wrong size on Ultra_Dynamic_Sky_C_Current_Stars_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Night_Filter_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Flat_Cloudiness_On) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Flat_Cloudiness_On' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Lerp_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Sun_Height_Z) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_GetFloatValue_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Lerp_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_SelectFloat_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Lerp_A_ImplicitCast) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Lerp_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sun Disk Color
// 0x0058 (0x0058 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Sun_Disk_Intensity_ReturnValue;   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue;   // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetClampedLinearColorValue_InTime_ImplicitCast; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color) == 0x000058, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Sun_Height_Z) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Current_Sun_Disk_Intensity_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Current_Sun_Disk_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_GetClampedLinearColorValue_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_GetClampedLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_GetClampedLinearColorValue_InTime_ImplicitCast) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_GetClampedLinearColorValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sun Disk Intensity
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Flat_Cloudiness_On;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F1[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_Flat_Cloudiness_On) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_Flat_Cloudiness_On' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_SelectFloat_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sun Light Color
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sun_Light_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F2[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue;   // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetClampedLinearColorValue_InTime_ImplicitCast; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sun_Light_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sun_Light_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_Sun_Height_Z) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_GetClampedLinearColorValue_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_GetClampedLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_SelectColor_ReturnValue) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_GetClampedLinearColorValue_InTime_ImplicitCast) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_GetClampedLinearColorValue_InTime_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sun Light Intensity
// 0x0088 (0x0088 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Directional_Light_Dimming_Out;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Directional_Inscattering_Multiplier_Multiplier; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F3[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F4[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F5[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity) == 0x000088, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Directional_Light_Dimming_Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Directional_Light_Dimming_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_BreakVector_X) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_BreakVector_Y) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_BreakVector_Z) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Directional_Inscattering_Multiplier_Multiplier) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Directional_Inscattering_Multiplier_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_GetFloatValue_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_SelectFloat_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sun Radius
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sun_Radius final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sun_Radius) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sun_Radius");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sun_Radius) == 0x000040, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sun_Radius");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, CallFunc_BreakVector_X) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, CallFunc_BreakVector_Y) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, CallFunc_BreakVector_Z) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sun Source Angle
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle) == 0x000060, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle, CallFunc_Lerp_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle, CallFunc_MapRangeClamped_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle, CallFunc_FMax_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle, CallFunc_FClamp_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sunrise Event Time
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sunset Event Time
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current View Sample Scale
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_View_Sample_Scale final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Scale_Sample_Count_out;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_View_Sample_Scale");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Current_View_Sample_Scale");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_BreakVector_X) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_BreakVector_Y) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_BreakVector_Z) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Lerp_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Scale_Sample_Count_out) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Scale_Sample_Count_out' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Volumetric Cloud Albedo
// 0x00C8 (0x00C8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1; // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo) == 0x0000C8, "Wrong size on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_BreakVector_X) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_BreakVector_Y) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_BreakVector_Z) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_LinearColorLerp_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Abs_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x0000BC, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1) == 0x0000C4, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Volumetric Cloud Macro Variation
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Volumetric Cloud Multiscattering Occlusion
// 0x0070 (0x0070 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion final
{
public:
	double                                        Occlusion;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion) == 0x000070, "Wrong size on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, Occlusion) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::Occlusion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_Night_Filter_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_Sun_Height_Z) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_Abs_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Volumetric Cloud Shadow Tracing Distance
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_BreakVector_X) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_BreakVector_Y) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_BreakVector_Z) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_Abs_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_FClamp_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Volumetric Cloud Subnoise Amount
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Subnoise_Amount final
{
public:
	double                                        Erosion;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Subnoise_Amount) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Subnoise_Amount");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Subnoise_Amount) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Subnoise_Amount");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Subnoise_Amount, Erosion) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Subnoise_Amount::Erosion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Subnoise_Amount, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Subnoise_Amount::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Subnoise_Amount, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Subnoise_Amount::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Subnoise_Amount, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Subnoise_Amount::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Subnoise_Amount, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Subnoise_Amount::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Volumetric Cloud Taper Position
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Taper_Position final
{
public:
	double                                        Taper;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Taper_Position) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Taper_Position");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Taper_Position) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Taper_Position");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Taper_Position, Taper) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Taper_Position::Taper' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Taper_Position, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Taper_Position::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Taper_Position, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Taper_Position::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Taper_Position, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Taper_Position::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Volumetric Clouds Density
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_FClamp_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Wisps Opacity
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Wisps_Opacity final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Flat_Cloudiness_On;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F6[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Wisps_Opacity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Current_Wisps_Opacity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Wisps_Opacity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity, CallFunc_Flat_Cloudiness_On) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Wisps_Opacity::CallFunc_Flat_Cloudiness_On' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Wisps_Opacity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Wisps_Opacity::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Wisps_Opacity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Wisps_Opacity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Z Disturbance
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Z_Disturbance final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Lerp_to_Simplified_Clouds_Alpha;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Z_Disturbance) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Z_Disturbance");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Z_Disturbance) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Current_Z_Disturbance");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Z_Disturbance, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Z_Disturbance::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Z_Disturbance, CallFunc_Current_Lerp_to_Simplified_Clouds_Alpha) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Z_Disturbance::CallFunc_Current_Lerp_to_Simplified_Clouds_Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Z_Disturbance, CallFunc_BreakVector_X) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Z_Disturbance::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Z_Disturbance, CallFunc_BreakVector_Y) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Z_Disturbance::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Z_Disturbance, CallFunc_BreakVector_Z) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Z_Disturbance::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Z_Disturbance, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Z_Disturbance::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Z_Disturbance, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Z_Disturbance::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Z_Disturbance, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Z_Disturbance::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Z_Disturbance, CallFunc_Lerp_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Z_Disturbance::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Dimming Directional Lights
// 0x0004 (0x0004 - 0x0000)
struct Ultra_Dynamic_Sky_C_Dimming_Directional_Lights final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Dimming_Directional_Lights");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights) == 0x000004, "Wrong size on Ultra_Dynamic_Sky_C_Dimming_Directional_Lights");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Dimming_Directional_Lights::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Dimming_Directional_Lights::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Dimming_Directional_Lights::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights, CallFunc_BooleanOR_ReturnValue_1) == 0x000003, "Member 'Ultra_Dynamic_Sky_C_Dimming_Directional_Lights::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Directional Inscattering Multiplier
// 0x0058 (0x0058 - 0x0000)
struct Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier final
{
public:
	double                                        Multiplier;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier) == 0x000058, "Wrong size on Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, Multiplier) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_BreakVector_X) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_BreakVector_Y) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_BreakVector_Z) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_Abs_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_Lerp_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Directional Light Dimming
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Sky_C_Directional_Light_Dimming final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Dimming_Directional_Lights_ReturnValue;   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F7[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Directional_Light_Dimming");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming) == 0x000060, "Wrong size on Ultra_Dynamic_Sky_C_Directional_Light_Dimming");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, CallFunc_Dimming_Directional_Lights_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::CallFunc_Dimming_Directional_Lights_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, CallFunc_Lerp_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, CallFunc_Lerp_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, CallFunc_MapRangeClamped_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, CallFunc_SelectFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, CallFunc_SelectFloat_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.ExecuteUbergraph_Ultra_Dynamic_Sky
// 0x0190 (0x0190 - 0x0000)
struct Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F8[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F9[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39FA[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39FB[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39FC[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39FD[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39FE[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39FF[0x5];                                     // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Time_of_Day_Offset_ReturnValue;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Sunrise_Event_Time_ReturnValue;   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A00[0x5];                                     // 0x00EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Current_Sunset_Event_Time_ReturnValue;    // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A01[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A02[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Sunset_Event_Time_ReturnValue_1;  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A03[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0128(0x0010)(ReferenceParm)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A04[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A05[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0166(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x0167(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0168(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0178(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast_1;          // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky");
static_assert(sizeof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky) == 0x000190, "Wrong size on Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, EntryPoint) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, Temp_bool_IsClosed_Variable) == 0x000005, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, Temp_bool_Has_Been_Initd_Variable_1) == 0x000006, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue) == 0x00000D, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, Temp_bool_IsClosed_Variable_1) == 0x00000E, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000F, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanOR_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000011, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue_1) == 0x000012, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_K2_SetTimer_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000051, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_SelectFloat_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_K2_SetTimer_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000069, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanOR_ReturnValue_1) == 0x00006A, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_HasAuthority_ReturnValue) == 0x00006B, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue_2) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00006D, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00006E, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue_3) == 0x00006F, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue_4) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_IsValid_ReturnValue) == 0x000071, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, Temp_bool_Has_Been_Initd_Variable_2) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_HasAuthority_ReturnValue_1) == 0x000089, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Not_PreBool_ReturnValue) == 0x00008A, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue_5) == 0x00008B, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_HasAuthority_ReturnValue_2) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue_6) == 0x000091, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000092, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue_7) == 0x000093, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_IsValid_ReturnValue_1) == 0x000094, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, Temp_int_Variable) == 0x0000AC, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Abs_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue_8) == 0x0000C9, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_HasAuthority_ReturnValue_3) == 0x0000CA, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Time_of_Day_Offset_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Time_of_Day_Offset_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Current_Sunrise_Event_Time_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Current_Sunrise_Event_Time_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000E9, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x0000EA, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Current_Sunset_Event_Time_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Current_Sunset_Event_Time_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_SelectFloat_ReturnValue_1) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue_9) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_SelectFloat_ReturnValue_2) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Current_Sunset_Event_Time_ReturnValue_1) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Current_Sunset_Event_Time_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, Temp_bool_IsClosed_Variable_2) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Array_Get_Item) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_FFloor_ReturnValue) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Greater_IntInt_ReturnValue) == 0x000164, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000165, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Not_PreBool_ReturnValue_2) == 0x000166, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue_10) == 0x000167, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_CreateDelegate_OutputDelegate) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_K2_SetTimer_Time_ImplicitCast_1) == 0x000184, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_K2_SetTimer_Time_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x00018C, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Filtered Moon Light Intensity
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity final
{
public:
	double                                        Unfiltered;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Intensity;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Directional_Inscattering_Multiplier_Multiplier; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity) == 0x000040, "Wrong size on Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity, Unfiltered) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity::Unfiltered' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity, Intensity) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity::Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity, CallFunc_Night_Filter_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity, CallFunc_Directional_Inscattering_Multiplier_Multiplier) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity::CallFunc_Directional_Inscattering_Multiplier_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Find Overall Intensity
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Sky_C_Find_Overall_Intensity final
{
public:
	double                                        Cloud_Darkening;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Darkening_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Find_Overall_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity) == 0x000040, "Wrong size on Ultra_Dynamic_Sky_C_Find_Overall_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, Cloud_Darkening) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::Cloud_Darkening' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, CallFunc_Night_Filter_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, CallFunc_Cloud_Darkening_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::CallFunc_Cloud_Darkening_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, CallFunc_Lerp_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Sunrise Times
// 0x0218 (0x0218 - 0x0000)
struct Ultra_Dynamic_Sky_C_Sunrise_Times final
{
public:
	double                                        Sunset_Time;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Factor;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A06[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Sunrise_Time;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A07[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A08[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A09[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A0A[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A0B[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A0C[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A0D[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector; // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector; // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase; // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment; // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit; // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw; // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A0E[0x3];                                     // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A0F[0x4];                                     // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A10[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A11[0x4];                                     // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A12[0x4];                                     // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector_1; // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector_1; // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase_1; // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment_1; // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit_1; // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw_1; // 0x01E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Sunrise_Times) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Sunrise_Times");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Sunrise_Times) == 0x000218, "Wrong size on Ultra_Dynamic_Sky_C_Sunrise_Times");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Sunset_Time) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Sunset_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Current_Factor) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Current_Factor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Sunrise_Time) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Sunrise_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_1) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_bool_Variable) == 0x00002D, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_2) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Not_PreBool_ReturnValue) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BooleanAND_ReturnValue) == 0x00003D, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_3) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_4) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Add_IntInt_ReturnValue_2) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_bool_Variable_1) == 0x000055, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Not_PreBool_ReturnValue_1) == 0x000056, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BooleanAND_ReturnValue_1) == 0x000057, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_5) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_6) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_7) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_FClamp_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_8) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BreakVector_X) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BreakVector_Y) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BreakVector_Z) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, K2Node_Select_Default) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000134, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_9) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Add_IntInt_ReturnValue_3) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_10) == 0x000174, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_11) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, K2Node_Select_Default_1) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector_1) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector_1) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase_1) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment_1) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit_1) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw_1) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BreakVector_X_1) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BreakVector_Y_1) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BreakVector_Z_1) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Fire Editor Dispatchers
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers final
{
public:
	double                                        Time_in_Range;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Sunset_Event_Time_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A13[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Sunrise_Event_Time_ReturnValue;   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers, Time_in_Range) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers::Time_in_Range' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers, CallFunc_Current_Sunset_Event_Time_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers::CallFunc_Current_Sunset_Event_Time_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers, CallFunc_Current_Sunrise_Event_Time_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers::CallFunc_Current_Sunrise_Event_Time_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Flat Cloudiness
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Flat_Cloudiness final
{
public:
	bool                                          On;                                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A14[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EUDS_SkyMode>                          K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Flat_Cloudiness) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Flat_Cloudiness");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Flat_Cloudiness) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Flat_Cloudiness");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Flat_Cloudiness, On) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Flat_Cloudiness::On' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Flat_Cloudiness, K2Node_MakeArray_Array) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Flat_Cloudiness::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Flat_Cloudiness, CallFunc_Array_Contains_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Flat_Cloudiness::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Fog Height Falloff
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Fog_Height_Falloff final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Fog_Height_Falloff) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Fog_Height_Falloff");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Fog_Height_Falloff) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Fog_Height_Falloff");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Height_Falloff, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Fog_Height_Falloff::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Height_Falloff, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Fog_Height_Falloff::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Height_Falloff, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Fog_Height_Falloff::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Height_Falloff, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Fog_Height_Falloff::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Fog Start Distance
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Fog_Start_Distance final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Fog_Start_Distance) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Fog_Start_Distance");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Fog_Start_Distance) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Fog_Start_Distance");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Start_Distance, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Fog_Start_Distance::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Start_Distance, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Fog_Start_Distance::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Start_Distance, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Fog_Start_Distance::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Start_Distance, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Fog_Start_Distance::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Start_Distance, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Fog_Start_Distance::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Force Valid Day
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Force_Valid_Day final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A15[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A16[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_Select_Default;                             // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Force_Valid_Day) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Force_Valid_Day");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Force_Valid_Day) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Force_Valid_Day");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, Temp_bool_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, CallFunc_Percent_IntInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, K2Node_Select_Default) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, CallFunc_Array_Get_Item) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Gate With Current Changes
// 0x0012 (0x0012 - 0x0000)
struct Ultra_Dynamic_Sky_C_Gate_With_Current_Changes final
{
public:
	bool                                          Clouds_Changing;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Fog_Changing;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dust_Changing;                                     // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Gate_With_Current_Changes");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes) == 0x000012, "Wrong size on Ultra_Dynamic_Sky_C_Gate_With_Current_Changes");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, Clouds_Changing) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::Clouds_Changing' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, Fog_Changing) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::Fog_Changing' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, Dust_Changing) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::Dust_Changing' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, ReturnValue) == 0x000003, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, Temp_bool_Variable) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000005, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, Temp_bool_Variable_1) == 0x000007, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, CallFunc_BooleanAND_ReturnValue_1) == 0x000009, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x00000A, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, CallFunc_BooleanAND_ReturnValue_2) == 0x00000B, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, CallFunc_BooleanOR_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, CallFunc_Not_PreBool_ReturnValue) == 0x00000D, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, CallFunc_BooleanOR_ReturnValue_1) == 0x00000E, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, CallFunc_BooleanOR_ReturnValue_2) == 0x00000F, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, CallFunc_BooleanOR_ReturnValue_3) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, K2Node_Select_Default) == 0x000011, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::K2Node_Select_Default' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Cached Color
// 0x004C (0x004C - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Cached_Color final
{
public:
	EUDS_CachedProperties                         Property;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A17[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Value;                                             // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Array_Get_Item;                           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Array_Get_Item_1;                         // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Cached_Color) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Cached_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Cached_Color) == 0x00004C, "Wrong size on Ultra_Dynamic_Sky_C_Get_Cached_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Color, Property) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Color::Property' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Color, Value) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Color::Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Color, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Color::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Color, CallFunc_Array_Get_Item) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Color::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Color, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Color::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Color, CallFunc_LinearColorLerp_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Color::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Color, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Color::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Cached Float
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Cached_Float final
{
public:
	EUDS_CachedProperties                         Property;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A18[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Value;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A19[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Cached_Float) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Cached_Float");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Cached_Float) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Get_Cached_Float");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Float, Property) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Float::Property' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Float, Value) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Float::Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Float, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Float::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Float, CallFunc_Array_Get_Item) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Float::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Float, CallFunc_Array_Get_Item_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Float::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Float, CallFunc_Lerp_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Float::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Cached Vector
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Cached_Vector final
{
public:
	EUDS_CachedProperties                         Property;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Value;                                             // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1B[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Cached_Vector) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Cached_Vector");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Cached_Vector) == 0x000078, "Wrong size on Ultra_Dynamic_Sky_C_Get_Cached_Vector");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Vector, Property) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Vector::Property' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Vector, Value) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Vector::Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Vector, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Vector::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Vector, CallFunc_Array_Get_Item) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Vector::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Vector, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Vector::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Vector, CallFunc_VLerp_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Vector::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Vector, CallFunc_VLerp_Alpha_ImplicitCast) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Vector::CallFunc_VLerp_Alpha_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Current Cloud Shadows Intensity and Softness
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness final
{
public:
	double                                        Intensity;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Softness;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness, Intensity) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness::Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness, Softness) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness::Softness' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness, CallFunc_Lerp_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness, CallFunc_Lerp_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Current Date and Time
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time final
{
public:
	struct FDateTime                              Current_Date_and_Time;                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimecode                              CallFunc_Convert_Time_of_Day_to_Time_Code_Timecode; // 0x0010(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1C[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1D[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time, Current_Date_and_Time) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time::Current_Date_and_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time, CallFunc_Convert_Time_of_Day_to_Time_Code_Timecode) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time::CallFunc_Convert_Time_of_Day_to_Time_Code_Timecode' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time, CallFunc_FTrunc_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time, CallFunc_MakeDateTime_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time::CallFunc_MakeDateTime_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Current Fog Base Colors
// 0x03D8 (0x03D8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors final
{
public:
	struct FLinearColor                           Param_Ambient_Fog_Color;                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Directional_Base_Color;                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Scaled_Directional_Base_Color;                     // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Twilight_Brightness_Falloff_Scale;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Twilight_Brightness_Falloff_Scale_1;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_1;   // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_2;   // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Subtract_LinearColorLinearColor_ReturnValue; // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_3;   // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_4;   // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Moon_Lit_Percent_ReturnValue;     // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_2;                       // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue;          // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_5;   // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_6;   // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2; // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_7;   // 0x0218(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3; // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue_1;        // 0x0238(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4; // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5; // 0x0258(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_6; // 0x0268(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_7; // 0x0278(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue_2;        // 0x0288(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_8; // 0x02A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue;   // 0x02B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x02C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_9; // 0x02D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_10; // 0x02E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_11; // 0x02F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0308(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_1; // 0x0318(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_12; // 0x0328(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_13; // 0x0340(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_14; // 0x0358(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue_1;    // 0x0368(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_15; // 0x0378(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_2;            // 0x0388(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_16; // 0x0398(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_17; // 0x03A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLinearColorValue_InTime_ImplicitCast;  // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLinearColorValue_InTime_ImplicitCast_1; // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLinearColorValue_InTime_ImplicitCast_2; // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_2;     // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast; // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast_1; // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors) == 0x0003D8, "Wrong size on Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, Param_Ambient_Fog_Color) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::Param_Ambient_Fog_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, Directional_Base_Color) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::Directional_Base_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, Scaled_Directional_Base_Color) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::Scaled_Directional_Base_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_BreakVector_X) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_BreakVector_Y) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_BreakVector_Z) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_BreakVector_X_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_BreakVector_Y_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_BreakVector_Z_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Twilight_Brightness_Falloff_Scale) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Twilight_Brightness_Falloff_Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Twilight_Brightness_Falloff_Scale_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Twilight_Brightness_Falloff_Scale_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue_1) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue_2) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_LinearColorLerp_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Subtract_LinearColorLinearColor_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Subtract_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Night_Filter_ReturnValue) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_MapRangeClamped_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_FMax_ReturnValue) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Lerp_ReturnValue) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_FMax_ReturnValue_1) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Lerp_ReturnValue_1) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Lerp_ReturnValue_2) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Lerp_ReturnValue_3) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue_3) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue_4) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Current_Moon_Lit_Percent_ReturnValue) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Current_Moon_Lit_Percent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_FMax_ReturnValue_2) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_GetLinearColorValue_ReturnValue) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_GetLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue_5) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue_6) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue_7) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_GetLinearColorValue_ReturnValue_1) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_GetLinearColorValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5) == 0x000258, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_6) == 0x000268, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_7) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_GetLinearColorValue_ReturnValue_2) == 0x000288, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_GetLinearColorValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000298, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_8) == 0x0002A0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0002B0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Add_LinearColorLinearColor_ReturnValue) == 0x0002B8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Add_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x0002C8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_9) == 0x0002D8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_10) == 0x0002E8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_11) == 0x0002F8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000308, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Add_LinearColorLinearColor_ReturnValue_1) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Add_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_12) == 0x000328, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000338, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_13) == 0x000340, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_14) == 0x000358, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_LinearColor_Desaturated_ReturnValue_1) == 0x000368, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_LinearColor_Desaturated_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_15) == 0x000378, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_LinearColorLerp_ReturnValue_2) == 0x000388, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_LinearColorLerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_16) == 0x000398, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_17) == 0x0003A8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_GetLinearColorValue_InTime_ImplicitCast) == 0x0003B8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_GetLinearColorValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_GetLinearColorValue_InTime_ImplicitCast_1) == 0x0003BC, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_GetLinearColorValue_InTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_GetLinearColorValue_InTime_ImplicitCast_2) == 0x0003C0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_GetLinearColorValue_InTime_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x0003C4, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x0003C8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_LinearColorLerp_Alpha_ImplicitCast_2) == 0x0003CC, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_LinearColorLerp_Alpha_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast) == 0x0003D0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast_1) == 0x0003D4, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Current Sky Light Color and Intensity
// 0x0220 (0x0220 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity final
{
public:
	double                                        Out_Intensity;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Out_Color;                                         // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Simplified_Current_Color_Out;             // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_GetLuminance_ReturnValue;     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1E[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_1;   // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_2;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Absent_Directional_Lights_Brightness_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1F[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A20[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_GetLuminance_ReturnValue_1;   // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x01AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A21[0x3];                                     // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_GetLuminance_ReturnValue_2;   // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_GetLuminance_ReturnValue_3;   // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_A_ImplicitCast;                      // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_A_ImplicitCast;                // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_B_ImplicitCast;                // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity) == 0x000220, "Wrong size on Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, Out_Intensity) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::Out_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, Out_Color) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::Out_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Night_Filter_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Lerp_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Simplified_Current_Color_Out) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Simplified_Current_Color_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColor_GetLuminance_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColor_GetLuminance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_FMax_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_VSize_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_FMax_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Conv_LinearColorToVector_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Conv_LinearColorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_FMax_ReturnValue_2) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Absent_Directional_Lights_Brightness_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Absent_Directional_Lights_Brightness_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Normal_ReturnValue) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_SelectFloat_ReturnValue) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_SelectFloat_ReturnValue_1) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_SelectColor_ReturnValue) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColorLerp_ReturnValue) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColor_GetLuminance_ReturnValue_1) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColor_GetLuminance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColorLerp_ReturnValue_1) == 0x0001AC, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001BC, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_SelectColor_ReturnValue_1) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColor_GetLuminance_ReturnValue_2) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColor_GetLuminance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColor_GetLuminance_ReturnValue_3) == 0x0001E4, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColor_GetLuminance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_SafeDivide_ReturnValue) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_FMax_A_ImplicitCast) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_FMax_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x000204, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_SafeDivide_A_ImplicitCast) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_SafeDivide_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_SafeDivide_B_ImplicitCast) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_SafeDivide_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Current Volumetric Cloud Extinction Scales
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales final
{
public:
	double                                        Top;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Bottom;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales, Top) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales::Top' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales, Bottom) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales::Bottom' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scales::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Sky MID Parent Material Instance
// 0x0178 (0x0178 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      ReturnValue;                                       // 0x0000(0x0030)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A22[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0048(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A23[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A24[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue_2;               // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_3;               // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A25[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue_4;               // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInstance>       CallFunc_Map_Find_Value;                           // 0x0110(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A26[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default;                             // 0x0148(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance) == 0x000178, "Wrong size on Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_SelectString_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000079, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_SelectString_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_BooleanAND_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_SelectString_ReturnValue_2) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_SelectString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_SelectString_ReturnValue_3) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_SelectString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, Temp_bool_Variable) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000B9, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x0000BA, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_BooleanAND_ReturnValue_1) == 0x0000BB, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_BooleanAND_ReturnValue_2) == 0x0000BC, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_SelectString_ReturnValue_4) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_SelectString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Map_Find_Value) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Map_Find_ReturnValue) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, K2Node_Select_Default) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::K2Node_Select_Default' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Time of Day in Real Time Format
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Time_of_Day_in_Real_Time_Format final
{
public:
	struct FTimecode                              Time;                                              // 0x0000(0x0014)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimecode                              CallFunc_Convert_Time_of_Day_to_Time_Code_Timecode; // 0x0014(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Time_of_Day_in_Real_Time_Format) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Time_of_Day_in_Real_Time_Format");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Time_of_Day_in_Real_Time_Format) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Get_Time_of_Day_in_Real_Time_Format");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Time_of_Day_in_Real_Time_Format, Time) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Time_of_Day_in_Real_Time_Format::Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Time_of_Day_in_Real_Time_Format, CallFunc_Convert_Time_of_Day_to_Time_Code_Timecode) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Get_Time_of_Day_in_Real_Time_Format::CallFunc_Convert_Time_of_Day_to_Time_Code_Timecode' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Volumetric Cloud Emissive Colors
// 0x0258 (0x0258 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors final
{
public:
	struct FLinearColor                           Bottom;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Top;                                               // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A27[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Light_Pollution_ReturnValue;      // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2; // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Overcast_Light_Contribution_ReturnValue;  // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Night_Sky_Glow_ReturnValue;       // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_2;  // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_2;            // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_3;  // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_4;  // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_5;  // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue;   // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_1; // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_2; // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_3; // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_4; // 0x01E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_5; // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0218(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_6; // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_2;                // 0x0238(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1; // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors) == 0x000258, "Wrong size on Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, Bottom) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::Bottom' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, Top) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::Top' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Sun_Height_Z) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_BreakVector_X) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_BreakVector_Y) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_BreakVector_Z) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Abs_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Abs_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_MapRangeClamped_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_LinearColorLerp_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Night_Filter_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Current_Light_Pollution_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Current_Light_Pollution_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Overcast_Light_Contribution_ReturnValue) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Overcast_Light_Contribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Current_Night_Sky_Glow_ReturnValue) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Current_Night_Sky_Glow_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorFloat_ReturnValue_2) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_LinearColorLerp_ReturnValue_2) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_LinearColorLerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorFloat_ReturnValue_3) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorFloat_ReturnValue_4) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorFloat_ReturnValue_5) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Add_LinearColorLinearColor_ReturnValue) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Add_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Add_LinearColorLinearColor_ReturnValue_1) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Add_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Add_LinearColorLinearColor_ReturnValue_2) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Add_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Add_LinearColorLinearColor_ReturnValue_3) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Add_LinearColorLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Add_LinearColorLinearColor_ReturnValue_4) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Add_LinearColorLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Add_LinearColorLinearColor_ReturnValue_5) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Add_LinearColorLinearColor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_SelectColor_ReturnValue) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_SelectColor_ReturnValue_1) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Add_LinearColorLinearColor_ReturnValue_6) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Add_LinearColorLinearColor_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_SelectColor_ReturnValue_2) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_SelectColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x00024C, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1) == 0x000250, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.MS to Time of Day
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Sky_C_MS_to_Time_of_Day final
{
public:
	int32                                         Hours;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Minutes;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Seconds;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Miliseconds;                                       // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Time;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_MS_to_Time_of_Day");
static_assert(sizeof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day) == 0x000078, "Wrong size on Ultra_Dynamic_Sky_C_MS_to_Time_of_Day");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, Hours) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::Hours' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, Minutes) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::Minutes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, Seconds) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::Seconds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, Miliseconds) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::Miliseconds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, Time) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_MapRangeClamped_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Hourly__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct Ultra_Dynamic_Sky_C_Hourly__DelegateSignature final
{
public:
	int32                                         Hour;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Hourly__DelegateSignature) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Hourly__DelegateSignature");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Hourly__DelegateSignature) == 0x000004, "Wrong size on Ultra_Dynamic_Sky_C_Hourly__DelegateSignature");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Hourly__DelegateSignature, Hour) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Hourly__DelegateSignature::Hour' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Increase Tick Frequency
// 0x000C (0x000C - 0x0000)
struct Ultra_Dynamic_Sky_C_Increase_Tick_Frequency final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Increase_Tick_Frequency");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency) == 0x00000C, "Wrong size on Ultra_Dynamic_Sky_C_Increase_Tick_Frequency");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Increase_Tick_Frequency::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Increase_Tick_Frequency::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Increase_Tick_Frequency::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000003, "Member 'Ultra_Dynamic_Sky_C_Increase_Tick_Frequency::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Increase_Tick_Frequency::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'Ultra_Dynamic_Sky_C_Increase_Tick_Frequency::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency, CallFunc_Not_PreBool_ReturnValue_1) == 0x000006, "Member 'Ultra_Dynamic_Sky_C_Increase_Tick_Frequency::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency, CallFunc_BooleanOR_ReturnValue) == 0x000007, "Member 'Ultra_Dynamic_Sky_C_Increase_Tick_Frequency::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency, CallFunc_BooleanOR_ReturnValue_1) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Increase_Tick_Frequency::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency, CallFunc_BooleanOR_ReturnValue_2) == 0x000009, "Member 'Ultra_Dynamic_Sky_C_Increase_Tick_Frequency::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency, CallFunc_BooleanOR_ReturnValue_3) == 0x00000A, "Member 'Ultra_Dynamic_Sky_C_Increase_Tick_Frequency::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency, CallFunc_BooleanOR_ReturnValue_4) == 0x00000B, "Member 'Ultra_Dynamic_Sky_C_Increase_Tick_Frequency::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Increment Day
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Increment_Day final
{
public:
	bool                                          Leap_Year;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A28[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A29[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A2A[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_Select_Default;                             // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A2B[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Increment_Day) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Increment_Day");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Increment_Day) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Increment_Day");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, Leap_Year) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::Leap_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, Temp_int_Variable) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, Temp_bool_Variable) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, Temp_int_Variable_1) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_Add_IntInt_ReturnValue_2) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_Add_IntInt_ReturnValue_3) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, Temp_int_Variable_2) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, K2Node_Select_Default) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_Subtract_IntInt_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_Array_Get_Item) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_Add_IntInt_ReturnValue_4) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_Percent_IntInt_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Is Lens Flare Enabled
// 0x0118 (0x0118 - 0x0000)
struct Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled final
{
public:
	bool                                          Yes;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A2C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A2D[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_Shadows_Altitude_Cloud_Shadows_Altitude; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A2E[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFOVAngle_ReturnValue;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A2F[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A30[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Hypotenuse_ReturnValue;                   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A31[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled) == 0x000118, "Wrong size on Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, Yes) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_BreakVector_X) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_BreakVector_Y) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_BreakVector_Z) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_Volumetric_Cloud_Shadows_Altitude_Cloud_Shadows_Altitude) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_Volumetric_Cloud_Shadows_Altitude_Cloud_Shadows_Altitude' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_GetCameraLocation_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_BreakVector_X_1) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_BreakVector_Y_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_BreakVector_Z_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_GetFOVAngle_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_GetFOVAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00009C, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_BooleanAND_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_Hypotenuse_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_Hypotenuse_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_GetCameraRotation_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_GetForwardVector_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_FMax_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_FMax_ReturnValue_1) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_DegAcos_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x000109, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_BooleanOR_ReturnValue) == 0x00010A, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_BooleanAND_ReturnValue_1) == 0x00010B, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_BooleanAND_ReturnValue_2) == 0x00010C, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Is Location Inside Cloud Layer
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Inside;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A32[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Current_Applied_Cloud_Top_and_Bottom_Bottom; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Applied_Cloud_Top_and_Bottom_Top; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer, Location) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer::Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer, Inside) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer::Inside' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer, CallFunc_Current_Applied_Cloud_Top_and_Bottom_Bottom) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer::CallFunc_Current_Applied_Cloud_Top_and_Bottom_Bottom' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer, CallFunc_Current_Applied_Cloud_Top_and_Bottom_Top) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer::CallFunc_Current_Applied_Cloud_Top_and_Bottom_Top' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer, CallFunc_BreakVector_X) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer, CallFunc_BreakVector_Y) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer, CallFunc_BreakVector_Z) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000049, "Member 'Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer, CallFunc_BooleanAND_ReturnValue) == 0x00004A, "Member 'Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Is Moon Light Casting Shadows
// 0x0098 (0x0098 - 0x0000)
struct Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows final
{
public:
	bool                                          Yes;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A33[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A34[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Current_Applied_Cloud_Top_and_Bottom_Bottom; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Applied_Cloud_Top_and_Bottom_Top; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A35[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A36[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Cloud_Shadows_Cloud_Density_ReturnValue;  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A37[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A38[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A39[0x5];                                     // 0x0083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows) == 0x000098, "Wrong size on Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, Yes) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, Temp_bool_Variable) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, Temp_bool_Variable_1) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_BreakVector_X) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_BreakVector_Y) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_BreakVector_Z) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_Current_Applied_Cloud_Top_and_Bottom_Bottom) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_Current_Applied_Cloud_Top_and_Bottom_Bottom' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_Current_Applied_Cloud_Top_and_Bottom_Top) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_Current_Applied_Cloud_Top_and_Bottom_Top' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_BreakVector_X_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_BreakVector_Y_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_BreakVector_Z_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_MakeLiteralByte_ReturnValue) == 0x000059, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_Cloud_Shadows_Cloud_Density_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_Cloud_Shadows_Cloud_Density_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_BooleanOR_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_Array_Get_Item) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, K2Node_Select_Default) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000081, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_BooleanAND_ReturnValue) == 0x000082, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_SelectFloat_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_BooleanAND_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x000091, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_BooleanAND_ReturnValue_2) == 0x000092, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_BooleanAND_ReturnValue_3) == 0x000093, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_BooleanAND_ReturnValue_4) == 0x000094, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_BooleanAND_ReturnValue_5) == 0x000095, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, K2Node_Select_Default_1) == 0x000096, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::K2Node_Select_Default_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Is Sun Light Casting Shadows
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows final
{
public:
	bool                                          Yes;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A3A[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A3B[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Current_Applied_Cloud_Top_and_Bottom_Bottom; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Applied_Cloud_Top_and_Bottom_Top; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A3C[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Cloud_Shadows_Cloud_Density_ReturnValue;  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A3D[0x2];                                     // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows) == 0x000078, "Wrong size on Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, Yes) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, Temp_bool_Variable) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, Temp_bool_Variable_1) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_BreakVector_X) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_BreakVector_Y) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_BreakVector_Z) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_Current_Applied_Cloud_Top_and_Bottom_Bottom) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_Current_Applied_Cloud_Top_and_Bottom_Bottom' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_Current_Applied_Cloud_Top_and_Bottom_Top) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_Current_Applied_Cloud_Top_and_Bottom_Top' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_BreakVector_X_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_BreakVector_Y_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_BreakVector_Z_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000051, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_Cloud_Shadows_Cloud_Density_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_Cloud_Shadows_Cloud_Density_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_BooleanOR_ReturnValue) == 0x000061, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_BooleanAND_ReturnValue) == 0x000062, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, K2Node_Select_Default) == 0x000063, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_BooleanAND_ReturnValue_1) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_BooleanAND_ReturnValue_2) == 0x000065, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_SelectFloat_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_BooleanAND_ReturnValue_3) == 0x000071, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_BooleanAND_ReturnValue_4) == 0x000072, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, K2Node_Select_Default_1) == 0x000073, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::K2Node_Select_Default_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Lens Flare Parent Material
// 0x0168 (0x0168 - 0x0000)
struct Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      Mat;                                               // 0x0000(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	EUDS_LensFlareType                            Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A3E[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable;                          // 0x0038(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_1;                        // 0x0068(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_2;                        // 0x0098(0x0030)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A3F[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x00D0(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A40[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default;                             // 0x0108(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default_1;                           // 0x0138(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material) == 0x000168, "Wrong size on Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, Mat) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::Mat' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, Temp_byte_Variable) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, Temp_softobject_Variable) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, Temp_softobject_Variable_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, Temp_softobject_Variable_2) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, Temp_bool_Variable) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, CallFunc_IsValid_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, K2Node_Select_Default) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, K2Node_Select_Default_1) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::K2Node_Select_Default_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Load Required Assets
// 0x0290 (0x0290 - 0x0000)
struct Ultra_Dynamic_Sky_C_Load_Required_Assets final
{
public:
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_2;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_3;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A41[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Lens_Flare_Parent_Material_Mat;           // 0x0028(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_4;         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_5;         // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_6;         // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_7;         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_8;         // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Cloud_Shadows_Parent_Material_Mat;        // 0x0080(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Volumetric_Clouds_Parent_Materials_Simplified; // 0x00B0(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Volumetric_Clouds_Parent_Materials_Complex; // 0x00E0(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_9;         // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_10;        // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_11;        // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Static_Clouds_Parent_Material_Material;   // 0x0128(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_12;        // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_13;        // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A42[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_14;        // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_15;        // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_16;        // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A43[0x5];                                     // 0x018B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_2D_Clouds_Base_Texture_Tex;               // 0x0190(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_17;        // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex; // 0x01C8(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_2D_Clouds_Base_Texture_Tex_1;             // 0x01F8(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_18;        // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_19;        // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Get_Sky_MID_Parent_Material_Instance_ReturnValue; // 0x0238(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_20;        // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_21;        // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A44[0x7];                                     // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_22;        // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_23;        // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Load_Required_Assets) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Load_Required_Assets");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Load_Required_Assets) == 0x000290, "Wrong size on Ultra_Dynamic_Sky_C_Load_Required_Assets");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_2) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_3) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Lens_Flare_Parent_Material_Mat) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Lens_Flare_Parent_Material_Mat' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_4) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_5) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_6) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_7) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_8) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Cloud_Shadows_Parent_Material_Mat) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Cloud_Shadows_Parent_Material_Mat' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Volumetric_Clouds_Parent_Materials_Simplified) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Volumetric_Clouds_Parent_Materials_Simplified' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Volumetric_Clouds_Parent_Materials_Complex) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Volumetric_Clouds_Parent_Materials_Complex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_9) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_10) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_11) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Static_Clouds_Parent_Material_Material) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Static_Clouds_Parent_Material_Material' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_12) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_13) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_IsValid_ReturnValue) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_14) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_15) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_16) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000189, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_BooleanAND_ReturnValue) == 0x00018A, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_2D_Clouds_Base_Texture_Tex) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_2D_Clouds_Base_Texture_Tex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_17) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_2D_Clouds_Base_Texture_Tex_1) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_2D_Clouds_Base_Texture_Tex_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_18) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_19) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Get_Sky_MID_Parent_Material_Instance_ReturnValue) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Get_Sky_MID_Parent_Material_Instance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_20) == 0x000268, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_21) == 0x000270, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, K2Node_SwitchEnum_CmpSuccess_1) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_22) == 0x000280, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_23) == 0x000288, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_23' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Monitor for Changes
// 0x0128 (0x0128 - 0x0000)
struct Ultra_Dynamic_Sky_C_Monitor_for_Changes final
{
public:
	double                                        CallFunc_Scaled_Cache_Period_Period;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A45[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A46[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_Constant_ReturnValue;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_3;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_4;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_5;       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Constant_ReturnValue_1;         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A47[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_6;       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Constant_ReturnValue_2;         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2;  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A48[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_7;       // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Constant_ReturnValue_3;         // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_3;                     // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_3;  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A49[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_2;                        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Monitor_for_Changes) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Monitor_for_Changes");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Monitor_for_Changes) == 0x000128, "Wrong size on Ultra_Dynamic_Sky_C_Monitor_for_Changes");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Scaled_Cache_Period_Period) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Scaled_Cache_Period_Period' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Abs_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_FInterpTo_Constant_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_GetWorldDeltaSeconds_ReturnValue_3) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_GetWorldDeltaSeconds_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_SelectFloat_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_GetWorldDeltaSeconds_ReturnValue_4) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_GetWorldDeltaSeconds_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_GetWorldDeltaSeconds_ReturnValue_5) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_GetWorldDeltaSeconds_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_FInterpTo_Constant_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_FInterpTo_Constant_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_FClamp_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_SelectFloat_ReturnValue_1) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Abs_ReturnValue_1) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_GetWorldDeltaSeconds_ReturnValue_6) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_GetWorldDeltaSeconds_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_FClamp_ReturnValue_2) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_FInterpTo_Constant_ReturnValue_2) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_FInterpTo_Constant_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_SelectFloat_ReturnValue_2) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_GetWorldDeltaSeconds_ReturnValue_7) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_GetWorldDeltaSeconds_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_FInterpTo_Constant_ReturnValue_3) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_FInterpTo_Constant_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_FClamp_ReturnValue_3) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_3) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_SelectFloat_ReturnValue_3) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Abs_ReturnValue_2) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Abs_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Moon Light Specular Scale
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Moon_Phase_Multiplier_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Moon_Phase_Multiplier_Without_Light_Brightness; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale) == 0x000080, "Wrong size on Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_Moon_Phase_Multiplier_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_Moon_Phase_Multiplier_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_Moon_Phase_Multiplier_Without_Light_Brightness) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_Moon_Phase_Multiplier_Without_Light_Brightness' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_BreakVector_X) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_BreakVector_Y) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_BreakVector_Z) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_MapRangeClamped_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_FClamp_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Moon Light Volumetric Scattering Intensity
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Moon Phase Multiplier
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Without_Light_Brightness;                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4A[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier) == 0x000060, "Wrong size on Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, Without_Light_Brightness) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::Without_Light_Brightness' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, CallFunc_Abs_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, CallFunc_FClamp_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, CallFunc_Lerp_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, CallFunc_SelectFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, CallFunc_SelectFloat_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Night Filter
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Sky_C_Night_Filter final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4B[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Night_Filter) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Night_Filter");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Night_Filter) == 0x000040, "Wrong size on Ultra_Dynamic_Sky_C_Night_Filter");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, CallFunc_BreakVector_X) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, CallFunc_BreakVector_Y) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, CallFunc_BreakVector_Z) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, CallFunc_GetFloatValue_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.OnRep_Replicated Time of Day
// 0x0001 (0x0001 - 0x0000)
struct Ultra_Dynamic_Sky_C_OnRep_Replicated_Time_of_Day final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_OnRep_Replicated_Time_of_Day) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_OnRep_Replicated_Time_of_Day");
static_assert(sizeof(Ultra_Dynamic_Sky_C_OnRep_Replicated_Time_of_Day) == 0x000001, "Wrong size on Ultra_Dynamic_Sky_C_OnRep_Replicated_Time_of_Day");
static_assert(offsetof(Ultra_Dynamic_Sky_C_OnRep_Replicated_Time_of_Day, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_OnRep_Replicated_Time_of_Day::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Overcast Light Contribution
// 0x0070 (0x0070 - 0x0000)
struct Ultra_Dynamic_Sky_C_Overcast_Light_Contribution final
{
public:
	bool                                          For_Volumetric_Clouds;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4C[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           ReturnValue;                                       // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4D[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Directional_Light_Dimming_Out;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Dimming_Directional_Lights_ReturnValue;   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4E[0x1];                                     // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Overcast_Light_Contribution");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution) == 0x000070, "Wrong size on Ultra_Dynamic_Sky_C_Overcast_Light_Contribution");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, For_Volumetric_Clouds) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::For_Volumetric_Clouds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_Directional_Light_Dimming_Out) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_Directional_Light_Dimming_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_Dimming_Directional_Lights_ReturnValue) == 0x000031, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_Dimming_Directional_Lights_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_SelectColor_ReturnValue) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Query Project Settings
// 0x0007 (0x0007 - 0x0000)
struct Ultra_Dynamic_Sky_C_Query_Project_Settings final
{
public:
	EUDS_FogColorMode                             Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Query_Project_Settings) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Query_Project_Settings");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Query_Project_Settings) == 0x000007, "Wrong size on Ultra_Dynamic_Sky_C_Query_Project_Settings");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Query_Project_Settings, Temp_byte_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Query_Project_Settings::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Query_Project_Settings, Temp_bool_Variable) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Query_Project_Settings::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Query_Project_Settings, Temp_bool_Variable_1) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Query_Project_Settings::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Query_Project_Settings, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000003, "Member 'Ultra_Dynamic_Sky_C_Query_Project_Settings::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Query_Project_Settings, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Query_Project_Settings::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Query_Project_Settings, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'Ultra_Dynamic_Sky_C_Query_Project_Settings::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Query_Project_Settings, K2Node_Select_Default) == 0x000006, "Member 'Ultra_Dynamic_Sky_C_Query_Project_Settings::K2Node_Select_Default' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Ultra_Dynamic_Sky_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_ReceiveTick) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_ReceiveTick");
static_assert(sizeof(Ultra_Dynamic_Sky_C_ReceiveTick) == 0x000004, "Wrong size on Ultra_Dynamic_Sky_C_ReceiveTick");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Scale Sample Count
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Scale_Sample_Count final
{
public:
	double                                        In;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Out;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4F[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRenderingMaterialQualityLevel_ReturnValue; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A50[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Scale_Sample_Count) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Scale_Sample_Count");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Scale_Sample_Count) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Scale_Sample_Count");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scale_Sample_Count, In) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Scale_Sample_Count::In' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scale_Sample_Count, Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Scale_Sample_Count::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scale_Sample_Count, Temp_int_Variable) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Scale_Sample_Count::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scale_Sample_Count, Temp_real_Variable) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Scale_Sample_Count::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scale_Sample_Count, CallFunc_GetRenderingMaterialQualityLevel_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Scale_Sample_Count::CallFunc_GetRenderingMaterialQualityLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scale_Sample_Count, K2Node_Select_Default) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Scale_Sample_Count::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scale_Sample_Count, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Scale_Sample_Count::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Scaled Cache Period
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Scaled_Cache_Period final
{
public:
	double                                        Period;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue_1;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue_2;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Scaled_Cache_Period");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Scaled_Cache_Period");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period, Period) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Scaled_Cache_Period::Period' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Scaled_Cache_Period::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Scaled_Cache_Period::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Scaled_Cache_Period::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Scaled_Cache_Period::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period, CallFunc_FMin_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Scaled_Cache_Period::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period, CallFunc_FMin_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Scaled_Cache_Period::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period, CallFunc_FMin_ReturnValue_2) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Scaled_Cache_Period::CallFunc_FMin_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period, CallFunc_Lerp_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Scaled_Cache_Period::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Cache Alpha
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Cache_Alpha final
{
public:
	float                                         CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A51[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Cache_Alpha) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Cache_Alpha");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Cache_Alpha) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Set_Cache_Alpha");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cache_Alpha, CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Cache_Alpha::CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cache_Alpha, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Set_Cache_Alpha::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cache_Alpha, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Set_Cache_Alpha::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Cloud Timing
// 0x03F0 (0x03F0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Cloud_Timing final
{
public:
	struct FLinearColor                           Cloud_Shadow_Position_Color;                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Cloud_Shadow_Phase_Color;                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Cloud_Phase_Color;                                 // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Clouds_Position_Color;                             // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Current_Time_of_Day_Factor;                        // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Time_of_Day_Factor;                                // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       CallFunc_Both_Cloud_Shadows_MIDs_Out;              // 0x00A0(0x0010)(ReferenceParm)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A52[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A53[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x00DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x00EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_1;   // 0x00FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x010C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A54[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       CallFunc_Both_Cloud_Shadows_MIDs_Out_1;            // 0x0120(0x0010)(ReferenceParm)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_1;                         // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A55[0x3];                                     // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_2;                         // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_3;                         // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A56[0x6];                                     // 0x0192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A57[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Clouds_Time_of_Day_Factor_ReturnValue;    // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       CallFunc_Both_Cloud_Shadows_MIDs_Out_2;            // 0x01B8(0x0010)(ReferenceParm)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_4;                         // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A58[0x4];                                     // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       CallFunc_Both_Cloud_Shadows_MIDs_Out_3;            // 0x01E8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A59[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_5;                         // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A5A[0x4];                                     // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       CallFunc_Both_Cloud_Shadows_MIDs_Out_4;            // 0x0210(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A5B[0x7];                                     // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_6;                         // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A5C[0x3];                                     // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_7;                         // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_2;   // 0x0258(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A5D[0x3];                                     // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_8;                         // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A5E[0x3];                                     // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_9;                         // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A5F[0x4];                                     // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Clouds_Time_of_Day_Factor_ReturnValue_1;  // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A60[0x7];                                     // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Cloud_Texture_Velocity_ReturnValue;       // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cloud_Texture_Velocity_ReturnValue_1;     // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x02E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A61[0x7];                                     // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_3;   // 0x0318(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x0328(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_4;   // 0x0350(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Cached_Vector_Value;                  // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Clouds_Time_of_Day_Factor_ReturnValue_2;  // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0380(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A62[0x7];                                     // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1; // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Cloud_Timing");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing) == 0x0003F0, "Wrong size on Ultra_Dynamic_Sky_C_Set_Cloud_Timing");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Cloud_Shadow_Position_Color) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Cloud_Shadow_Position_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Cloud_Shadow_Phase_Color) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Cloud_Shadow_Phase_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Cloud_Phase_Color) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Cloud_Phase_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Clouds_Position_Color) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Clouds_Position_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Current_Time_of_Day_Factor) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Current_Time_of_Day_Factor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Time_of_Day_Factor) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Time_of_Day_Factor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Temp_int_Variable) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Temp_int_Variable_1) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Temp_int_Variable_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Temp_int_Variable_3) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Add_IntInt_ReturnValue_2) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Add_IntInt_ReturnValue_3) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Temp_int_Variable_4) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Temp_int_Variable_5) == 0x000074, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Add_IntInt_ReturnValue_4) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Add_IntInt_ReturnValue_5) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Temp_int_Variable_6) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Temp_int_Variable_7) == 0x000084, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Add_IntInt_ReturnValue_6) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Add_IntInt_ReturnValue_7) == 0x00008C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Temp_int_Variable_8) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Temp_int_Variable_9) == 0x000094, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Add_IntInt_ReturnValue_8) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Add_IntInt_ReturnValue_9) == 0x00009C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Both_Cloud_Shadows_MIDs_Out) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Both_Cloud_Shadows_MIDs_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Less_IntInt_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x0000DC, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x0000EC, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Conv_DoubleToLinearColor_ReturnValue_1) == 0x0000FC, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Conv_DoubleToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x00010C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Both_Cloud_Shadows_MIDs_Out_1) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Both_Cloud_Shadows_MIDs_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Get_Item_1) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Length_ReturnValue_1) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Less_IntInt_ReturnValue_1) == 0x00013C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Get_Item_2) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Get_Item_3) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Length_ReturnValue_2) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Length_ReturnValue_3) == 0x00018C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Less_IntInt_ReturnValue_2) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Less_IntInt_ReturnValue_3) == 0x000191, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001A0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Clouds_Time_of_Day_Factor_ReturnValue) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Clouds_Time_of_Day_Factor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Both_Cloud_Shadows_MIDs_Out_2) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Both_Cloud_Shadows_MIDs_Out_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Get_Item_4) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Length_ReturnValue_4) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Both_Cloud_Shadows_MIDs_Out_3) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Both_Cloud_Shadows_MIDs_Out_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Less_IntInt_ReturnValue_4) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Get_Item_5) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Length_ReturnValue_5) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Both_Cloud_Shadows_MIDs_Out_4) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Both_Cloud_Shadows_MIDs_Out_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Less_IntInt_ReturnValue_5) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Get_Item_6) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Length_ReturnValue_6) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Less_IntInt_ReturnValue_6) == 0x000234, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Get_Item_7) == 0x000250, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Conv_VectorToLinearColor_ReturnValue_2) == 0x000258, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Conv_VectorToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Length_ReturnValue_7) == 0x000268, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Less_IntInt_ReturnValue_7) == 0x00026C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Get_Item_8) == 0x000270, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Length_ReturnValue_8) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Less_IntInt_ReturnValue_8) == 0x00027C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Get_Item_9) == 0x000280, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Length_ReturnValue_9) == 0x000288, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Clouds_Time_of_Day_Factor_ReturnValue_1) == 0x000290, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Clouds_Time_of_Day_Factor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Less_IntInt_ReturnValue_9) == 0x000298, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Cloud_Texture_Velocity_ReturnValue) == 0x0002A0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Cloud_Texture_Velocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Cloud_Texture_Velocity_ReturnValue_1) == 0x0002B8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Cloud_Texture_Velocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0002D0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0002D8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0002E0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x0002E8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x0002F8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_SelectVector_ReturnValue) == 0x000300, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Conv_VectorToLinearColor_ReturnValue_3) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Conv_VectorToLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x000328, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000338, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Conv_VectorToLinearColor_ReturnValue_4) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Conv_VectorToLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Get_Cached_Vector_Value) == 0x000360, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Get_Cached_Vector_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Clouds_Time_of_Day_Factor_ReturnValue_2) == 0x000378, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Clouds_Time_of_Day_Factor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000380, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000398, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Add_VectorVector_ReturnValue) == 0x0003A0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0003B8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0003C0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0003C8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0003D0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x0003D8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1) == 0x0003DC, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0003E0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x0003E4, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x0003E8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Date and Time
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Date_and_Time final
{
public:
	struct FDateTime                              Date_Time;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Year;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A63[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_H_M_S_MS_to_Time_of_Day_Time;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Date_and_Time) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Date_and_Time");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Date_and_Time) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Set_Date_and_Time");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, Date_Time) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::Date_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_BreakDateTime_Year) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_BreakDateTime_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_BreakDateTime_Month) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_BreakDateTime_Month' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_BreakDateTime_Day) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_BreakDateTime_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_BreakDateTime_Hour) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_BreakDateTime_Hour' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_BreakDateTime_Minute) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_BreakDateTime_Minute' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_BreakDateTime_Second) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_BreakDateTime_Second' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_BreakDateTime_Millisecond) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_BreakDateTime_Millisecond' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_H_M_S_MS_to_Time_of_Day_Time) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_H_M_S_MS_to_Time_of_Day_Time' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Sun and Moon Root Rotation
// 0x0820 (0x0820 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation final
{
public:
	struct FVector                                Moon_Alignment;                                    // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Real_Moon_Phase;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Real_Moon_Position;                                // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Real_Sun_Position;                                 // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value;                   // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value;                   // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_1;                 // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_2;                 // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_3;                 // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_4;                 // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Cached_Vector_Value;                  // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Cached_Vector_Value_1;                // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_1;       // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_5;                 // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_1;                 // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       CallFunc_Sun_Shadows_MIDs_Out;                     // 0x0190(0x0010)(ReferenceParm)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A64[0x3];                                     // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_1;                         // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A65[0x3];                                     // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_2;                         // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A66[0x3];                                     // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x01E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_2;       // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0210(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_3;       // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A67[0x7];                                     // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x0318(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0400(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x04E8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A68[0x7];                                     // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_3;           // 0x05D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x05F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Using_2D_Clouds_ReturnValue;              // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0609(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A69[0x2];                                     // 0x060A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x060C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_3;                         // 0x0611(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A6A[0x2];                                     // 0x0612(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0614(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_4;                         // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0619(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A6B[0x6];                                     // 0x061A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_4;           // 0x0620(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_2;   // 0x0638(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0648(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_1;     // 0x0730(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0818(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation) == 0x000820, "Wrong size on Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, Moon_Alignment) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::Moon_Alignment' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, Real_Moon_Phase) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::Real_Moon_Phase' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, Real_Moon_Position) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::Real_Moon_Position' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, Real_Sun_Position) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::Real_Sun_Position' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, Temp_int_Variable) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, Temp_int_Variable_1) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_GetForwardVector_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_GetForwardVector_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, Temp_int_Variable_2) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000BC, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Get_Cached_Color_Value) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Get_Cached_Color_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Get_Cached_Float_Value) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Get_Cached_Float_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Get_Cached_Color_Value_1) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Get_Cached_Color_Value_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Get_Cached_Color_Value_2) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Get_Cached_Color_Value_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Get_Cached_Color_Value_3) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Get_Cached_Color_Value_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Get_Cached_Color_Value_4) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Get_Cached_Color_Value_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Get_Cached_Vector_Value) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Get_Cached_Vector_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Get_Cached_Vector_Value_1) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Get_Cached_Vector_Value_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_VectorToRotator_ReturnValue_1) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_VectorToRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Get_Cached_Color_Value_5) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Get_Cached_Color_Value_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Get_Cached_Float_Value_1) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Get_Cached_Float_Value_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Sun_Shadows_MIDs_Out) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Sun_Shadows_MIDs_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Array_Get_Item) == 0x0001A0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Array_Length_ReturnValue) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Less_IntInt_ReturnValue) == 0x0001AC, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Array_Get_Item_1) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Array_Length_ReturnValue_1) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001BC, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Array_Get_Item_2) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Array_Length_ReturnValue_2) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001CC, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_GetForwardVector_ReturnValue_2) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_VectorToRotator_ReturnValue_2) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_VectorToRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_VectorToRotator_ReturnValue_3) == 0x0002F8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_VectorToRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000310, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000400, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x0004E8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BooleanOR_ReturnValue) == 0x0005D0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_GetForwardVector_ReturnValue_3) == 0x0005D8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_GetForwardVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0005F0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Using_2D_Clouds_ReturnValue) == 0x000608, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Using_2D_Clouds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_MakeLiteralByte_ReturnValue) == 0x000609, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00060C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000610, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Array_Get_Item_3) == 0x000611, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000614, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Array_Get_Item_4) == 0x000618, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BooleanOR_ReturnValue_1) == 0x000619, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_GetForwardVector_ReturnValue_4) == 0x000620, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_GetForwardVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_VectorToLinearColor_ReturnValue_2) == 0x000638, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_VectorToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000648, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_K2_SetWorldRotation_SweepHitResult_1) == 0x000730, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_K2_SetWorldRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000818, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Time of Day using Time Code
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code final
{
public:
	struct FTimecode                              Time_Code;                                         // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A6C[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A6D[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_H_M_S_MS_to_Time_of_Day_Time;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code, Time_Code) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code::Time_Code' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code, CallFunc_FTrunc_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code, CallFunc_H_M_S_MS_to_Time_of_Day_Time) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code::CallFunc_H_M_S_MS_to_Time_of_Day_Time' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Up Lens Flare
// 0x0790 (0x0790 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare final
{
public:
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x0000(0x0010)(NoDestructor)
	TArray<struct FWeightedBlendable>             K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
	struct FWeightedBlendables                    K2Node_MakeStruct_WeightedBlendables;              // 0x0020(0x0010)()
	struct FPostProcessSettings                   K2Node_MakeStruct_PostProcessSettings;             // 0x0030(0x06E0)()
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Lens_Flare_Parent_Material_Mat;           // 0x0710(0x0030)(HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0740(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0750(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0758(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0760(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A6E[0x7];                                     // 0x0761(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0768(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A6F[0x7];                                     // 0x0771(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0780(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0781(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A70[0x2];                                     // 0x0782(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x0784(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0788(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare) == 0x000010, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare) == 0x000790, "Wrong size on Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, K2Node_MakeStruct_WeightedBlendable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, K2Node_MakeArray_Array) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, K2Node_MakeStruct_WeightedBlendables) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::K2Node_MakeStruct_WeightedBlendables' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, K2Node_MakeStruct_PostProcessSettings) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::K2Node_MakeStruct_PostProcessSettings' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, CallFunc_Lens_Flare_Parent_Material_Mat) == 0x000710, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::CallFunc_Lens_Flare_Parent_Material_Mat' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000740, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000750, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, K2Node_DynamicCast_AsMaterial_Interface) == 0x000758, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, K2Node_DynamicCast_bSuccess) == 0x000760, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000768, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, CallFunc_Not_PreBool_ReturnValue) == 0x000770, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000778, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, CallFunc_Not_PreBool_ReturnValue_1) == 0x000780, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, CallFunc_BooleanAND_ReturnValue) == 0x000781, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x000784, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000788, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Up Overcast Turbulence
// 0x0070 (0x0070 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A71[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex; // 0x0010(0x0030)(HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A72[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence) == 0x000070, "Wrong size on Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, K2Node_DynamicCast_AsMaterial_Interface) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, K2Node_DynamicCast_AsTexture_2D) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000069, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, CallFunc_IsDedicatedServer_ReturnValue) == 0x00006A, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, CallFunc_Not_PreBool_ReturnValue) == 0x00006B, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, CallFunc_BooleanAND_ReturnValue) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, CallFunc_BooleanAND_ReturnValue_1) == 0x00006D, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Simplified Current Color
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Sky_C_Simplified_Current_Color final
{
public:
	struct FLinearColor                           Day_Color;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Dusk_Color;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Night_Color;                                       // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Out;                                               // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Simplified_Current_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Simplified_Current_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Simplified_Current_Color) == 0x000080, "Wrong size on Ultra_Dynamic_Sky_C_Simplified_Current_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Current_Color, Day_Color) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Simplified_Current_Color::Day_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Current_Color, Dusk_Color) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Simplified_Current_Color::Dusk_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Current_Color, Night_Color) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Simplified_Current_Color::Night_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Current_Color, Out) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Simplified_Current_Color::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Current_Color, CallFunc_Sun_Height_Z) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Simplified_Current_Color::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Current_Color, CallFunc_Night_Filter_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Simplified_Current_Color::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Current_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Simplified_Current_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Current_Color, CallFunc_LinearColorLerp_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Simplified_Current_Color::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Current_Color, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Simplified_Current_Color::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Current_Color, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Simplified_Current_Color::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Current_Color, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_Simplified_Current_Color::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Simplified Sun Glow Color
// 0x00D8 (0x00D8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color final
{
public:
	struct FLinearColor                           Out;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_1;   // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue;          // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2; // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3; // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLinearColorValue_InTime_ImplicitCast;  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color) == 0x0000D8, "Wrong size on Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_Sun_Height_Z) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_BreakVector_X) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_BreakVector_Y) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_BreakVector_Z) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_GetLinearColorValue_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_GetLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, K2Node_MakeStruct_LinearColor) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_GetLinearColorValue_InTime_ImplicitCast) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_GetLinearColorValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, K2Node_MakeStruct_A_ImplicitCast) == 0x0000D4, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Size Cache Arrays
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Sky_C_Size_Cache_Arrays final
{
public:
	int32                                         Size;                                              // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Size_Cache_Arrays) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Size_Cache_Arrays");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Size_Cache_Arrays) == 0x000008, "Wrong size on Ultra_Dynamic_Sky_C_Size_Cache_Arrays");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Size_Cache_Arrays, Size) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Size_Cache_Arrays::Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Size_Cache_Arrays, CallFunc_MakeLiteralInt_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Size_Cache_Arrays::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Sky Atmosphere Fog Contribution
// 0x00E0 (0x00E0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution final
{
public:
	double                                        Output;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue_1;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A73[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A74[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution) == 0x0000E0, "Wrong size on Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, Output) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::Output' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_BreakVector_X) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_BreakVector_Y) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_BreakVector_Z) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Abs_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Sun_Height_Z) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Night_Filter_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Lerp_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Night_Filter_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Night_Filter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_GetFloatValue_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Lerp_ReturnValue_1) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_SelectFloat_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Sky MID Cloud Density
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Using_2D_Clouds_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A75[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density, CallFunc_Using_2D_Clouds_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density::CallFunc_Using_2D_Clouds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Starting Cloud Formation
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Starting_Cloud_Formation final
{
public:
	struct FVector                                CallFunc_Cloud_Texture_Velocity_ReturnValue;       // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Starting_Cloud_Formation) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Starting_Cloud_Formation");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Starting_Cloud_Formation) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Starting_Cloud_Formation");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Starting_Cloud_Formation, CallFunc_Cloud_Texture_Velocity_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Starting_Cloud_Formation::CallFunc_Cloud_Texture_Velocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Starting_Cloud_Formation, CallFunc_RandomFloatInRange_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Starting_Cloud_Formation::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Starting_Cloud_Formation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Starting_Cloud_Formation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Starting_Cloud_Formation, CallFunc_SelectVector_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Starting_Cloud_Formation::CallFunc_SelectVector_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Static Clouds Parent Material
// 0x00D0 (0x00D0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      Material;                                          // 0x0000(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A76[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable;                          // 0x0038(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_1;                        // 0x0068(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A77[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default;                             // 0x00A0(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material) == 0x0000D0, "Wrong size on Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material, Material) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material::Material' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material, Temp_bool_Variable) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material, Temp_softobject_Variable) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material, Temp_softobject_Variable_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material, K2Node_Select_Default) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material::K2Node_Select_Default' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Static Clouds XYZ Masks
// 0x01B0 (0x01B0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks final
{
public:
	struct FLinearColor                           XY_Mask;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Z_Mask;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_3;                     // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_4;                     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_5;                     // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_6;                     // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_7;                     // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_8;                     // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_9;                     // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_10;                    // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast_1;                // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast_1;                // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast_1;                // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast_1;                // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks) == 0x0001B0, "Wrong size on Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, XY_Mask) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::XY_Mask' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, Z_Mask) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::Z_Mask' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_BreakVector_X) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_BreakVector_Y) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_BreakVector_Z) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_BreakVector_X_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_BreakVector_Y_1) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_BreakVector_Z_1) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_FClamp_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_FClamp_ReturnValue_1) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_FClamp_ReturnValue_2) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_FClamp_ReturnValue_3) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_FClamp_ReturnValue_4) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_FClamp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_FClamp_ReturnValue_5) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_FClamp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_FClamp_ReturnValue_6) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_FClamp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, K2Node_MakeStruct_LinearColor) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_Lerp_ReturnValue) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_FClamp_ReturnValue_7) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_FClamp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_FClamp_ReturnValue_8) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_FClamp_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_FClamp_ReturnValue_9) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_FClamp_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_FClamp_ReturnValue_10) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_FClamp_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, K2Node_MakeStruct_LinearColor_1) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_LinearColorLerp_ReturnValue) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, K2Node_MakeStruct_B_ImplicitCast) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, K2Node_MakeStruct_G_ImplicitCast) == 0x00018C, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, K2Node_MakeStruct_A_ImplicitCast) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, K2Node_MakeStruct_R_ImplicitCast) == 0x000194, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, K2Node_MakeStruct_B_ImplicitCast_1) == 0x00019C, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::K2Node_MakeStruct_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, K2Node_MakeStruct_G_ImplicitCast_1) == 0x0001A0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::K2Node_MakeStruct_G_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, K2Node_MakeStruct_A_ImplicitCast_1) == 0x0001A4, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::K2Node_MakeStruct_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, K2Node_MakeStruct_R_ImplicitCast_1) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::K2Node_MakeStruct_R_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Sun Height
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Sun_Height final
{
public:
	double                                        Z;                                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Sun_Height) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Sun_Height");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Sun_Height) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Sun_Height");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Height, Z) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Sun_Height::Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Height, CallFunc_BreakVector_X) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Sun_Height::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Height, CallFunc_BreakVector_Y) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Sun_Height::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Height, CallFunc_BreakVector_Z) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Sun_Height::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Height, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Sun_Height::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Height, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Sun_Height::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Sun Shadows MIDs
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs final
{
public:
	TArray<class UMaterialInstanceDynamic*>       Out;                                               // 0x0000(0x0010)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A78[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A79[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       K2Node_MakeArray_Array_1;                          // 0x0030(0x0010)(ReferenceParm)
	TArray<class UMaterialInstanceDynamic*>       K2Node_Select_Default;                             // 0x0040(0x0010)(ReferenceParm)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs, Temp_bool_Variable) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs, K2Node_MakeArray_Array) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs, K2Node_MakeArray_Array_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs, K2Node_Select_Default) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs::K2Node_Select_Default' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Three Time Floats
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Three_Time_Floats final
{
public:
	double                                        Param_Day;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Dusk;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Night;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Out;                                               // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Three_Time_Floats) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Three_Time_Floats");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Three_Time_Floats) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Three_Time_Floats");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Time_Floats, Param_Day) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Three_Time_Floats::Param_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Time_Floats, Dusk) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Three_Time_Floats::Dusk' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Time_Floats, Night) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Three_Time_Floats::Night' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Time_Floats, Out) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Three_Time_Floats::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Time_Floats, CallFunc_Sun_Height_Z) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Three_Time_Floats::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Time_Floats, CallFunc_Night_Filter_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Three_Time_Floats::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Time_Floats, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Three_Time_Floats::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Time_Floats, CallFunc_Lerp_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Three_Time_Floats::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Time_Floats, CallFunc_Lerp_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Three_Time_Floats::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Tick Time Transition
// 0x0088 (0x0088 - 0x0000)
struct Ultra_Dynamic_Sky_C_Tick_Time_Transition final
{
public:
	double                                        New_Time_of_Day;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A7A[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A7B[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A7C[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A7D[0x5];                                     // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A7E[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_ReturnValue;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Tick_Time_Transition) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Tick_Time_Transition");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Tick_Time_Transition) == 0x000088, "Wrong size on Ultra_Dynamic_Sky_C_Tick_Time_Transition");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, New_Time_of_Day) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::New_Time_of_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, Temp_int_Variable) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_HasAuthority_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_FFloor_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_FFloor_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Greater_IntInt_ReturnValue) == 0x000049, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_BooleanOR_ReturnValue) == 0x00004A, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_SelectFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_FClamp_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Ease_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Lerp_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Time of Day Offset
// 0x00B8 (0x00B8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Time_of_Day_Offset final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A7F[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Time_of_Day_Offset");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset) == 0x0000B8, "Wrong size on Ultra_Dynamic_Sky_C_Time_of_Day_Offset");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_GetForwardVector_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_BreakVector_X) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_BreakVector_Y) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_BreakVector_Z) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_SelectFloat_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_SelectFloat_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_SelectFloat_ReturnValue_2) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Total Time Elapsed
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Total_Time_Elapsed final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A80[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A81[0x5];                                     // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Total_Time_Elapsed");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Total_Time_Elapsed");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, CallFunc_BooleanOR_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, CallFunc_BooleanOR_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, CallFunc_BooleanAND_ReturnValue_1) == 0x00001A, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Transition Sky Light Intensity
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity final
{
public:
	double                                        New_Sky_Light_Intensity_Multiplier;                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Transition_Time;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity) == 0x000010, "Wrong size on Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity, New_Sky_Light_Intensity_Multiplier) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity::New_Sky_Light_Intensity_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity, Transition_Time) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity::Transition_Time' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Transition Time of Day
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Transition_Time_of_Day final
{
public:
	double                                        New_Time_of_Day;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Transition_Duration__Seconds_;                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEasingFunc                                   Easing_Function;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A82[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Easing_Exponent;                                   // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Allow_Time_Going_Backwards;                        // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A83[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Transition_Time_of_Day");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Transition_Time_of_Day");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, New_Time_of_Day) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::New_Time_of_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, Transition_Duration__Seconds_) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::Transition_Duration__Seconds_' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, Easing_Function) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::Easing_Function' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, Easing_Exponent) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::Easing_Exponent' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, Allow_Time_Going_Backwards) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::Allow_Time_Going_Backwards' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, CallFunc_HasAuthority_ReturnValue) == 0x000021, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000022, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, CallFunc_K2_SetTimer_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Twilight Brightness Falloff
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff final
{
public:
	double                                        Z;                                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Scale;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A84[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff, Z) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff::Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff, Scale) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff::Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Unfiltered Moon Light Intensity
// 0x00C8 (0x00C8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Directional_Light_Dimming_Out;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Moon_Phase_Multiplier_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Moon_Phase_Multiplier_Without_Light_Brightness; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A85[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A86[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A87[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity) == 0x0000C8, "Wrong size on Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_BreakVector_X) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_BreakVector_Y) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_BreakVector_Z) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_BreakVector_X_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_BreakVector_Y_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_BreakVector_Z_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_FClamp_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Directional_Light_Dimming_Out) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Directional_Light_Dimming_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Moon_Phase_Multiplier_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Moon_Phase_Multiplier_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Moon_Phase_Multiplier_Without_Light_Brightness) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Moon_Phase_Multiplier_Without_Light_Brightness' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_SelectFloat_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_GetFloatValue_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_SelectFloat_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Active Variables
// 0x0C20 (0x0C20 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Active_Variables final
{
public:
	struct FLinearColor                           Sun_Disk_Color_Current;                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Cloud_Dark_Color_Current;                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Cloud_Light_Color_Current;                         // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Zenith_Base_Color_Current;                         // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Horizon_Base_Color_Current;                        // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_12;                              // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_13;                              // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_14;                              // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_13;                // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_14;                // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_15;                              // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_16;                              // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_15;                // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_16;                // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_17;                              // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_18;                              // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_17;                // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_18;                // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_19;                              // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_20;                              // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_19;                // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_20;                // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_21;                              // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_22;                              // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_21;                // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_22;                // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_23;                              // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_24;                              // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_23;                // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_24;                // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_25;                              // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_26;                              // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_25;                // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_26;                // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_27;                              // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_28;                              // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_27;                // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_28;                // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x014B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x014E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x014F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_29;                              // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A88[0x3];                                     // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_29;                // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x015E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x015F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A89[0x2];                                     // 0x0162(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value;                   // 0x0164(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A8A[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value;                   // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A8B[0x3];                                     // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_1;                 // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_2;                 // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A8C[0x3];                                     // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_3;                 // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_4;                 // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_5;                 // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       CallFunc_Sun_Shadows_MIDs_Out;                     // 0x01F0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A8D[0x4];                                     // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Current_Sky_Atmosphere_Absorbtion_Scale_Scale; // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Clouds_Top_Bottom_Distribution_Out; // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_6;                 // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A8E[0x4];                                     // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_7;                 // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A8F[0x3];                                     // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_30;                              // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_30;                // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A90[0x3];                                     // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_8;                 // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A91[0x7];                                     // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_9;                 // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_10;                // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_1;                         // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_2;                         // 0x0285(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A92[0x2];                                     // 0x0286(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_4;                       // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_31;                              // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_31;                // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_3;                         // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A93[0x7];                                     // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Cloud_Shadows_Cloud_Density_ReturnValue;  // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Volumetric_Clouds_Density_ReturnValue; // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Increase_Tick_Frequency_ReturnValue;      // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A94[0x7];                                     // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_11;                // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_12;                // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_13;                // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_14;                // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_15;                // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_16;                // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_17;                // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_4;                         // 0x0320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A95[0x3];                                     // 0x032D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_18;                // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_19;                // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_20;                // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_21;                // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_1;                 // 0x0350(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_22;                // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_23;                // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_2;                 // 0x0370(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_3;                 // 0x0380(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_4;                 // 0x0390(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_5;                 // 0x03A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_24;                // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_25;                // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_6;                 // 0x03C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_7;                 // 0x03D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_8;                 // 0x03E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_26;                // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_27;                // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_28;                // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_29;                // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_9;                 // 0x0420(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A96[0x7];                                     // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_30;                // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_31;                // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_10;                // 0x0450(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_32;                // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_33;                // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_32;                              // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A97[0x4];                                     // 0x0474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_32;                // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A98[0x4];                                     // 0x0484(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_5;                         // 0x0488(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A99[0x3];                                     // 0x0491(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_11;                // 0x0494(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_12;                // 0x04A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_13;                // 0x04B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_14;                // 0x04C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9A[0x4];                                     // 0x04D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_34;                // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_15;                // 0x04E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_35;                // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_36;                // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_37;                // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_38;                // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9B[0x7];                                     // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_39;                // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_40;                // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_41;                // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_16;                // 0x0538(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_42;                // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_17;                // 0x0550(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_43;                // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_44;                // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0571(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9C[0x6];                                     // 0x0572(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_18;                // 0x0580(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_19;                // 0x0590(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_20;                // 0x05A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_21;                // 0x05B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_22;                // 0x05C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_23;                // 0x05D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_45;                // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9D[0x7];                                     // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_46;                // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_47;                // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_48;                // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z_1;                           // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z_2;                           // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       CallFunc_Both_Cloud_Shadows_MIDs_Out;              // 0x0630(0x0010)(ReferenceParm)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_6;                         // 0x0640(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x0648(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x064C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9E[0x3];                                     // 0x064D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       CallFunc_Both_Cloud_Shadows_MIDs_Out_1;            // 0x0650(0x0010)(ReferenceParm)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_7;                         // 0x0660(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x0668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x066C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9F[0x3];                                     // 0x066D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_33;                              // 0x0680(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_33;                // 0x0684(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_8;                         // 0x0688(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AA0[0x7];                                     // 0x0691(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_1;   // 0x06A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x06C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x06D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_9;                         // 0x06E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x06E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x06EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AA1[0x3];                                     // 0x06ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_10;                        // 0x06F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_12;              // 0x0700(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x0704(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AA2[0x3];                                     // 0x0705(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_11;                        // 0x0708(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_12;                        // 0x0710(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_13;              // 0x0718(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_14;              // 0x071C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x0720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_11;               // 0x0721(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AA3[0x6];                                     // 0x0722(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_13;                        // 0x0728(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_14;                        // 0x0730(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_15;              // 0x0738(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_16;              // 0x073C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_12;               // 0x0740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_13;               // 0x0741(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AA4[0x6];                                     // 0x0742(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_15;                        // 0x0748(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_16;                        // 0x0750(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_17;              // 0x0758(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_18;              // 0x075C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_14;               // 0x0760(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_15;               // 0x0761(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AA5[0x6];                                     // 0x0762(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_17;                        // 0x0768(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_18;                        // 0x0770(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_19;              // 0x0778(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_20;              // 0x077C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_16;               // 0x0780(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_17;               // 0x0781(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AA6[0x6];                                     // 0x0782(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_19;                        // 0x0788(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_20;                        // 0x0790(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_21;              // 0x0798(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_18;               // 0x079C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AA7[0x3];                                     // 0x079D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_22;              // 0x07A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_19;               // 0x07A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Location_Inside_Cloud_Layer_Inside;    // 0x07A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AA8[0x2];                                     // 0x07A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x07A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x07C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x07C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AA9[0x7];                                     // 0x07C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x07D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x07E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AAA[0x7];                                     // 0x07E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x07F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0808(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0820(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0838(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0920(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AAB[0x7];                                     // 0x0921(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Volumetric_Cloud_Layer_Height_Layer_Height; // 0x0928(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_21;                        // 0x0930(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_22;                        // 0x0938(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_23;              // 0x0940(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_24;              // 0x0944(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_20;               // 0x0948(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_21;               // 0x0949(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AAC[0x6];                                     // 0x094A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_23;                        // 0x0950(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_24;                        // 0x0958(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_25;              // 0x0960(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_22;               // 0x0964(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AAD[0x3];                                     // 0x0965(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_26;              // 0x0968(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_23;               // 0x096C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AAE[0x3];                                     // 0x096D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_25;                        // 0x0970(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_27;              // 0x0978(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_24;               // 0x097C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AAF[0x3];                                     // 0x097D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_26;                        // 0x0980(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_28;              // 0x0988(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_25;               // 0x098C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AB0[0x3];                                     // 0x098D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_27;                        // 0x0990(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_29;              // 0x0998(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_26;               // 0x099C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AB1[0x3];                                     // 0x099D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_28;                        // 0x09A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_30;              // 0x09A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_27;               // 0x09AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AB2[0x3];                                     // 0x09AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_29;                        // 0x09B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_31;              // 0x09B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_28;               // 0x09BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AB3[0x3];                                     // 0x09BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_30;                        // 0x09C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_32;              // 0x09C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_29;               // 0x09CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AB4[0x3];                                     // 0x09CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_31;                        // 0x09D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_33;              // 0x09D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_30;               // 0x09DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AB5[0x3];                                     // 0x09DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_32;                        // 0x09E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_34;              // 0x09E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_31;               // 0x09EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AB6[0x3];                                     // 0x09ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_33;                        // 0x09F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_35;              // 0x09F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_32;               // 0x09FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AB7[0x3];                                     // 0x09FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_34;                        // 0x0A00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_36;              // 0x0A08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_33;               // 0x0A0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AB8[0x3];                                     // 0x0A0D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Current_Overcast_Swirl_ReturnValue;       // 0x0A10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sky_MID_Cloud_Density_ReturnValue;        // 0x0A18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_2D_Cloud_Tint_ReturnValue;        // 0x0A20(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Gate_With_Current_Changes_ReturnValue;    // 0x0A30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Gate_With_Current_Changes_ReturnValue_1;  // 0x0A31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x0A32(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Gate_With_Current_Changes_ReturnValue_2;  // 0x0A33(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Gate_With_Current_Changes_ReturnValue_3;  // 0x0A34(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Gate_With_Current_Changes_ReturnValue_4;  // 0x0A35(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Using_2D_Clouds_ReturnValue;              // 0x0A36(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x0A37(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0A38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AB9[0x7];                                     // 0x0A39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Moon_Light_Volumetric_Scattering_Intensity_ReturnValue; // 0x0A40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0A48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ABA[0x3];                                     // 0x0A49(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_34;                              // 0x0A4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_34;                // 0x0A50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ABB[0x4];                                     // 0x0A54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_35;                        // 0x0A58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_34;               // 0x0A60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ABC[0x7];                                     // 0x0A61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0A68(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0A80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0A88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0A90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0A98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0A99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x0A9A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_9;          // 0x0A9B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x0A9C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_10;         // 0x0A9D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x0A9E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ABD[0x1];                                     // 0x0A9F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_35;                // 0x0AA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0AA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0AA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0AA9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ABE[0x6];                                     // 0x0AAA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x0AB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0AB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0ABC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_35;                              // 0x0AC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_36;                // 0x0AC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_36;                        // 0x0AC8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_35;               // 0x0AD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0AD1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0AD2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ABF[0x5];                                     // 0x0AD3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0AD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0AE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC0[0x3];                                     // 0x0AE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_36;                              // 0x0AE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_37;                // 0x0AE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC1[0x4];                                     // 0x0AEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_37;                        // 0x0AF0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_36;               // 0x0AF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0AF9(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0AFA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_13;                 // 0x0AFB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_14;                 // 0x0AFC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_15;                 // 0x0AFD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0AFE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_16;                 // 0x0AFF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_11;         // 0x0B00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_17;                 // 0x0B01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC2[0x2];                                     // 0x0B02(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetDirectionalInscatteringExponent_Value_ImplicitCast; // 0x0B04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x0B08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0B0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetViewSampleCountScale_NewValue_ImplicitCast; // 0x0B10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetShadowTracingDistance_NewValue_ImplicitCast; // 0x0B14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0B18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0B1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x0B20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetOtherAbsorptionScale_NewValue_ImplicitCast; // 0x0B24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_4; // 0x0B28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_5; // 0x0B2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_6; // 0x0B30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_7; // 0x0B34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_8; // 0x0B38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_9; // 0x0B3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_10; // 0x0B40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_11; // 0x0B44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_12; // 0x0B48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_13; // 0x0B4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_14; // 0x0B50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_15; // 0x0B54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_16; // 0x0B58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_17; // 0x0B5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_18; // 0x0B60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_19; // 0x0B64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_20; // 0x0B68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_21; // 0x0B6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_22; // 0x0B70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0B74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetTracingMaxDistance_NewValue_ImplicitCast; // 0x0B78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_23; // 0x0B7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMieScatteringScale_NewValue_ImplicitCast; // 0x0B80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMieAnisotropy_NewValue_ImplicitCast;   // 0x0B84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x0B88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLightSourceAngle_NewValue_ImplicitCast; // 0x0B8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSpecularScale_NewValue_ImplicitCast;   // 0x0B90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFogHeightFalloff_Value_ImplicitCast;   // 0x0B94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetStartDistance_Value_ImplicitCast;      // 0x0B98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightFogContribution_NewValue_ImplicitCast; // 0x0B9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_Height_Fog_Density_ImplicitCast; // 0x0BA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLightSourceAngle_NewValue_ImplicitCast_1; // 0x0BA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSpecularScale_NewValue_ImplicitCast_1; // 0x0BA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLightFunctionDisabledBrightness_NewValue_ImplicitCast; // 0x0BAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast_1; // 0x0BB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_24; // 0x0BB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_25; // 0x0BB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_26; // 0x0BBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_27; // 0x0BC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_28; // 0x0BC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_29; // 0x0BC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_30; // 0x0BCC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast_2; // 0x0BD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_31; // 0x0BD4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_32; // 0x0BD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_33; // 0x0BDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0BE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_34; // 0x0BE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast_1;      // 0x0BE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast; // 0x0BEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLightSourceSoftAngle_NewValue_ImplicitCast; // 0x0BF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLightSourceSoftAngle_NewValue_ImplicitCast_1; // 0x0BF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToLinearColor_InDouble_ImplicitCast; // 0x0BF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_35; // 0x0C00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLayerHeight_NewValue_ImplicitCast;     // 0x0C04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_36; // 0x0C08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_37; // 0x0C0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast_1; // 0x0C10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_38; // 0x0C14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_39; // 0x0C18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_40; // 0x0C1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Active_Variables) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Active_Variables");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Active_Variables) == 0x000C20, "Wrong size on Ultra_Dynamic_Sky_C_Update_Active_Variables");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Sun_Disk_Color_Current) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Sun_Disk_Color_Current' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Cloud_Dark_Color_Current) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Cloud_Dark_Color_Current' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Cloud_Light_Color_Current) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Cloud_Light_Color_Current' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Zenith_Base_Color_Current) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Zenith_Base_Color_Current' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Horizon_Base_Color_Current) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Horizon_Base_Color_Current' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_2) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_2) == 0x000074, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_3) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_4) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_3) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_4) == 0x000084, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_5) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_6) == 0x00008C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_5) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_6) == 0x000094, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_7) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_8) == 0x00009C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_7) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_8) == 0x0000A4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_9) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_10) == 0x0000AC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_9) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_10) == 0x0000B4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_11) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_12) == 0x0000BC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_11) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_12) == 0x0000C4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_13) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_14) == 0x0000CC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_13) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_14) == 0x0000D4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_15) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_16) == 0x0000DC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_15) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_16) == 0x0000E4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_17) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_18) == 0x0000EC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_17) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_18) == 0x0000F4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_19) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_20) == 0x0000FC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_19) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_20) == 0x000104, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_21) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_22) == 0x00010C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_21) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_22) == 0x000114, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_23) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_24) == 0x00011C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_23) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_24) == 0x000124, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_25) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_25' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_26) == 0x00012C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_26' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_25) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_26) == 0x000134, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_27) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_27' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_28) == 0x00013C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_28' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_27) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_28) == 0x000144, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue) == 0x000149, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00014A, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00014B, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_1) == 0x00014C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x00014D, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_2) == 0x00014E, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x00014F, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_29) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_29' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_3) == 0x000154, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_29) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x00015C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_4) == 0x00015D, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x00015E, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_5) == 0x00015F, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_6) == 0x000161, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value) == 0x000164, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Night_Filter_ReturnValue) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Lerp_ReturnValue) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue) == 0x00019C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001A0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_1) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_2) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_1) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001D4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_3) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_4) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_5) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Sun_Shadows_MIDs_Out) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Sun_Shadows_MIDs_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_2) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Sky_Atmosphere_Absorbtion_Scale_Scale) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Sky_Atmosphere_Absorbtion_Scale_Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Volumetric_Clouds_Top_Bottom_Distribution_Out) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Volumetric_Clouds_Top_Bottom_Distribution_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_6) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_3) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_7) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_4) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_MakeLiteralByte_ReturnValue) == 0x000234, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_30) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_30' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_30) == 0x00023C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000240, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x000244, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_8) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_7) == 0x000250, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_9) == 0x000258, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_10) == 0x000260, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_5) == 0x000268, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_6) == 0x00026C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_1) == 0x000270, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_MapRangeClamped_ReturnValue) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_7) == 0x000280, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_1) == 0x000284, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_2) == 0x000285, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Lerp_ReturnValue_1) == 0x000288, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Lerp_ReturnValue_2) == 0x000290, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Lerp_ReturnValue_3) == 0x000298, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Lerp_ReturnValue_4) == 0x0002A0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_31) == 0x0002A8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_31' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_31) == 0x0002AC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0002B0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_3) == 0x0002B8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_2) == 0x0002C0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Cloud_Shadows_Cloud_Density_ReturnValue) == 0x0002C8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Cloud_Shadows_Cloud_Density_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Volumetric_Clouds_Density_ReturnValue) == 0x0002D0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Volumetric_Clouds_Density_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Increase_Tick_Frequency_ReturnValue) == 0x0002D8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Increase_Tick_Frequency_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_11) == 0x0002E0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_12) == 0x0002E8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_13) == 0x0002F0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0002F8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_14) == 0x000300, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_15) == 0x000308, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_16) == 0x000310, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_17) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_4) == 0x000320, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_8) == 0x000328, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_3) == 0x00032C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_18) == 0x000330, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_19) == 0x000338, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_20) == 0x000340, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_21) == 0x000348, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_1) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_22) == 0x000360, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_23) == 0x000368, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_2) == 0x000370, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_3) == 0x000380, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_4) == 0x000390, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_5) == 0x0003A0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_24) == 0x0003B0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_25) == 0x0003B8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_25' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_6) == 0x0003C0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_7) == 0x0003D0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_8) == 0x0003E0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_26) == 0x0003F0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_26' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0003F8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000400, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_27) == 0x000408, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_27' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_28) == 0x000410, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_28' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_29) == 0x000418, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_29' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_9) == 0x000420, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000430, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_30) == 0x000438, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_30' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_31) == 0x000440, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_31' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000448, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_10) == 0x000450, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_32) == 0x000460, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_32' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_33) == 0x000468, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_33' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_32) == 0x000470, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_32' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000478, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_32) == 0x000480, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_5) == 0x000488, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_4) == 0x000490, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_11) == 0x000494, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_12) == 0x0004A4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_13) == 0x0004B4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_14) == 0x0004C4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_34) == 0x0004D8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_34' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_15) == 0x0004E0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_35) == 0x0004F0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_35' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_36) == 0x0004F8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_36' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_37) == 0x000500, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_37' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_38) == 0x000508, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_38' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000510, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000518, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_39) == 0x000520, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_39' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_40) == 0x000528, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_40' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_41) == 0x000530, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_41' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_16) == 0x000538, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_42) == 0x000548, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_42' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_17) == 0x000550, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_43) == 0x000560, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_43' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_44) == 0x000568, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_44' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000570, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000571, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SelectFloat_ReturnValue) == 0x000578, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_18) == 0x000580, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_19) == 0x000590, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_20) == 0x0005A0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_21) == 0x0005B0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_22) == 0x0005C0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_23) == 0x0005D0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_45) == 0x0005E0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_45' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Not_PreBool_ReturnValue) == 0x0005E8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0005F0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_46) == 0x0005F8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_46' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_47) == 0x000600, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_47' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_48) == 0x000608, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_48' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Sun_Height_Z) == 0x000610, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Sun_Height_Z_1) == 0x000618, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Sun_Height_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000620, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Sun_Height_Z_2) == 0x000628, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Sun_Height_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Both_Cloud_Shadows_MIDs_Out) == 0x000630, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Both_Cloud_Shadows_MIDs_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_6) == 0x000640, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_9) == 0x000648, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_5) == 0x00064C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Both_Cloud_Shadows_MIDs_Out_1) == 0x000650, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Both_Cloud_Shadows_MIDs_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_7) == 0x000660, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_10) == 0x000668, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_6) == 0x00066C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000670, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000678, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_33) == 0x000680, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_33' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_33) == 0x000684, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_8) == 0x000688, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_7) == 0x000690, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000698, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x0006A0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Conv_DoubleToLinearColor_ReturnValue_1) == 0x0006A8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Conv_DoubleToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_MapRangeClamped_ReturnValue_2) == 0x0006B8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x0006C0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x0006D0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_9) == 0x0006E0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_11) == 0x0006E8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_8) == 0x0006EC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x0006F0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_10) == 0x0006F8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_12) == 0x000700, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_9) == 0x000704, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_11) == 0x000708, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_12) == 0x000710, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_13) == 0x000718, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_14) == 0x00071C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_10) == 0x000720, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_11) == 0x000721, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_13) == 0x000728, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_14) == 0x000730, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_15) == 0x000738, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_16) == 0x00073C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_12) == 0x000740, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_13) == 0x000741, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_15) == 0x000748, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_16) == 0x000750, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_17) == 0x000758, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_18) == 0x00075C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_14) == 0x000760, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_15) == 0x000761, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_17) == 0x000768, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_18) == 0x000770, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_19) == 0x000778, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_20) == 0x00077C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_16) == 0x000780, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_17) == 0x000781, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_19) == 0x000788, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_20) == 0x000790, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_21) == 0x000798, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_18) == 0x00079C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_22) == 0x0007A0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_19) == 0x0007A4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Is_Location_Inside_Cloud_Layer_Inside) == 0x0007A5, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Is_Location_Inside_Cloud_Layer_Inside' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0007A8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BreakVector_X) == 0x0007B0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BreakVector_Y) == 0x0007B8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BreakVector_Z) == 0x0007C0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_IsValid_ReturnValue) == 0x0007C8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_GetCameraLocation_ReturnValue) == 0x0007D0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Not_PreBool_ReturnValue_1) == 0x0007E8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0007F0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BreakVector_X_1) == 0x000808, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BreakVector_Y_1) == 0x000810, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BreakVector_Z_1) == 0x000818, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_MakeVector_ReturnValue) == 0x000820, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000838, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanAND_ReturnValue) == 0x000920, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Volumetric_Cloud_Layer_Height_Layer_Height) == 0x000928, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Volumetric_Cloud_Layer_Height_Layer_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_21) == 0x000930, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_22) == 0x000938, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_23) == 0x000940, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_24) == 0x000944, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_20) == 0x000948, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_21) == 0x000949, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_23) == 0x000950, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_24) == 0x000958, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_25) == 0x000960, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_22) == 0x000964, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_26) == 0x000968, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_23) == 0x00096C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_25) == 0x000970, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_25' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_27) == 0x000978, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_24) == 0x00097C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_26) == 0x000980, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_26' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_28) == 0x000988, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_25) == 0x00098C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_27) == 0x000990, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_27' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_29) == 0x000998, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_26) == 0x00099C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_28) == 0x0009A0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_28' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_30) == 0x0009A8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_27) == 0x0009AC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_29) == 0x0009B0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_29' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_31) == 0x0009B8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_28) == 0x0009BC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_30) == 0x0009C0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_30' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_32) == 0x0009C8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_29) == 0x0009CC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_31) == 0x0009D0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_31' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_33) == 0x0009D8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_30) == 0x0009DC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_32) == 0x0009E0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_32' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_34) == 0x0009E8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_31) == 0x0009EC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_33) == 0x0009F0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_33' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_35) == 0x0009F8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_32) == 0x0009FC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_34) == 0x000A00, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_34' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_36) == 0x000A08, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_33) == 0x000A0C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Overcast_Swirl_ReturnValue) == 0x000A10, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Overcast_Swirl_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Sky_MID_Cloud_Density_ReturnValue) == 0x000A18, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Sky_MID_Cloud_Density_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_2D_Cloud_Tint_ReturnValue) == 0x000A20, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_2D_Cloud_Tint_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Gate_With_Current_Changes_ReturnValue) == 0x000A30, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Gate_With_Current_Changes_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Gate_With_Current_Changes_ReturnValue_1) == 0x000A31, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Gate_With_Current_Changes_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_8) == 0x000A32, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Gate_With_Current_Changes_ReturnValue_2) == 0x000A33, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Gate_With_Current_Changes_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Gate_With_Current_Changes_ReturnValue_3) == 0x000A34, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Gate_With_Current_Changes_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Gate_With_Current_Changes_ReturnValue_4) == 0x000A35, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Gate_With_Current_Changes_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Using_2D_Clouds_ReturnValue) == 0x000A36, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Using_2D_Clouds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_9) == 0x000A37, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000A38, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Moon_Light_Volumetric_Scattering_Intensity_ReturnValue) == 0x000A40, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Moon_Light_Volumetric_Scattering_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Not_PreBool_ReturnValue_2) == 0x000A48, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_34) == 0x000A4C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_34' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_34) == 0x000A50, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_35) == 0x000A58, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_35' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_34) == 0x000A60, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_GetForwardVector_ReturnValue) == 0x000A68, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BreakVector_X_2) == 0x000A80, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BreakVector_Y_2) == 0x000A88, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BreakVector_Z_2) == 0x000A90, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000A98, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanAND_ReturnValue_1) == 0x000A99, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_10) == 0x000A9A, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_9) == 0x000A9B, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_11) == 0x000A9C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_10) == 0x000A9D, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_12) == 0x000A9E, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_35) == 0x000AA0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Percent_IntInt_ReturnValue) == 0x000AA4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_IsDedicatedServer_ReturnValue) == 0x000AA8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Not_PreBool_ReturnValue_3) == 0x000AA9, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x000AB0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_GetFloatValue_ReturnValue) == 0x000AB8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_GetFloatValue_ReturnValue_1) == 0x000ABC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_35) == 0x000AC0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_35' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_36) == 0x000AC4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_36) == 0x000AC8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_36' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_35) == 0x000AD0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000AD1, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000AD2, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000AD8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000AE0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_36) == 0x000AE4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_36' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_37) == 0x000AE8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_37) == 0x000AF0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_37' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_36) == 0x000AF8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_bool_Variable) == 0x000AF9, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Contains_ReturnValue) == 0x000AFA, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_13) == 0x000AFB, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_14) == 0x000AFC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_15) == 0x000AFD, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000AFE, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_16) == 0x000AFF, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_11) == 0x000B00, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_17) == 0x000B01, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetDirectionalInscatteringExponent_Value_ImplicitCast) == 0x000B04, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetDirectionalInscatteringExponent_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x000B08, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000B0C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetViewSampleCountScale_NewValue_ImplicitCast) == 0x000B10, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetViewSampleCountScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetShadowTracingDistance_NewValue_ImplicitCast) == 0x000B14, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetShadowTracingDistance_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000B18, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000B1C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x000B20, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetOtherAbsorptionScale_NewValue_ImplicitCast) == 0x000B24, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetOtherAbsorptionScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_4) == 0x000B28, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_5) == 0x000B2C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_6) == 0x000B30, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_7) == 0x000B34, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_8) == 0x000B38, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_9) == 0x000B3C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_10) == 0x000B40, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_11) == 0x000B44, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_12) == 0x000B48, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_13) == 0x000B4C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_14) == 0x000B50, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_15) == 0x000B54, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_16) == 0x000B58, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_17) == 0x000B5C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_18) == 0x000B60, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_19) == 0x000B64, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_20) == 0x000B68, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_21) == 0x000B6C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_22) == 0x000B70, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000B74, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetTracingMaxDistance_NewValue_ImplicitCast) == 0x000B78, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetTracingMaxDistance_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_23) == 0x000B7C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetMieScatteringScale_NewValue_ImplicitCast) == 0x000B80, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetMieScatteringScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetMieAnisotropy_NewValue_ImplicitCast) == 0x000B84, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetMieAnisotropy_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x000B88, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetLightSourceAngle_NewValue_ImplicitCast) == 0x000B8C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetLightSourceAngle_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetSpecularScale_NewValue_ImplicitCast) == 0x000B90, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetSpecularScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetFogHeightFalloff_Value_ImplicitCast) == 0x000B94, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetFogHeightFalloff_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetStartDistance_Value_ImplicitCast) == 0x000B98, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetStartDistance_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetHeightFogContribution_NewValue_ImplicitCast) == 0x000B9C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetHeightFogContribution_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, K2Node_VariableSet_Height_Fog_Density_ImplicitCast) == 0x000BA0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::K2Node_VariableSet_Height_Fog_Density_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetLightSourceAngle_NewValue_ImplicitCast_1) == 0x000BA4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetLightSourceAngle_NewValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetSpecularScale_NewValue_ImplicitCast_1) == 0x000BA8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetSpecularScale_NewValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetLightFunctionDisabledBrightness_NewValue_ImplicitCast) == 0x000BAC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetLightFunctionDisabledBrightness_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetIntensity_NewIntensity_ImplicitCast_1) == 0x000BB0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetIntensity_NewIntensity_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_24) == 0x000BB4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_25) == 0x000BB8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_25' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_26) == 0x000BBC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_26' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_27) == 0x000BC0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_27' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_28) == 0x000BC4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_28' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_29) == 0x000BC8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_29' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_30) == 0x000BCC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_30' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetIntensity_NewIntensity_ImplicitCast_2) == 0x000BD0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetIntensity_NewIntensity_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_31) == 0x000BD4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_31' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_32) == 0x000BD8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_32' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_33) == 0x000BDC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_33' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000BE0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_34) == 0x000BE4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_34' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_GetFloatValue_InTime_ImplicitCast_1) == 0x000BE8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_GetFloatValue_InTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast) == 0x000BEC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetLightSourceSoftAngle_NewValue_ImplicitCast) == 0x000BF0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetLightSourceSoftAngle_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetLightSourceSoftAngle_NewValue_ImplicitCast_1) == 0x000BF4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetLightSourceSoftAngle_NewValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Conv_DoubleToLinearColor_InDouble_ImplicitCast) == 0x000BF8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Conv_DoubleToLinearColor_InDouble_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_35) == 0x000C00, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_35' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetLayerHeight_NewValue_ImplicitCast) == 0x000C04, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetLayerHeight_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_36) == 0x000C08, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_36' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_37) == 0x000C0C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_37' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast_1) == 0x000C10, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_38) == 0x000C14, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_38' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_39) == 0x000C18, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_39' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_40) == 0x000C1C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_40' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Current Volumetric Clouds MID
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC3[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC4[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, Temp_int_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, K2Node_Select_Default) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_SelectInt_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Directional Light Rotations
// 0x0230 (0x0230 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations final
{
public:
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC5[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC6[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC7[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0048(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC8[0x6];                                     // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_1;     // 0x0138(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC9[0x3];                                     // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_1;                         // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations) == 0x000230, "Wrong size on Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_MakeLiteralByte_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_Array_Get_Item) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_BooleanOR_ReturnValue) == 0x000029, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_BooleanOR_ReturnValue_1) == 0x000131, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_K2_SetWorldRotation_SweepHitResult_1) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_K2_SetWorldRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000224, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_Array_Get_Item_1) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_BooleanOR_ReturnValue_2) == 0x000229, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_BooleanOR_ReturnValue_3) == 0x00022A, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Dynamic Sky Light Multiplier
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier final
{
public:
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ACA[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_Constant_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier, CallFunc_FInterpTo_Constant_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Exposure Bias
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Exposure_Bias final
{
public:
	double                                        CallFunc_Get_Cached_Float_Value;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_SetFieldsInStruct_AutoExposureBias_ImplicitCast; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Exposure_Bias) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Exposure_Bias");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Exposure_Bias) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Update_Exposure_Bias");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Exposure_Bias, CallFunc_Get_Cached_Float_Value) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Exposure_Bias::CallFunc_Get_Cached_Float_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Exposure_Bias, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Exposure_Bias::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Exposure_Bias, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Exposure_Bias::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Exposure_Bias, K2Node_SetFieldsInStruct_AutoExposureBias_ImplicitCast) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Exposure_Bias::K2Node_SetFieldsInStruct_AutoExposureBias_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Forced Active Variables
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables final
{
public:
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ACB[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ACC[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables, CallFunc_BooleanOR_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables, CallFunc_Get_Cached_Float_Value) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables::CallFunc_Get_Cached_Float_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables, CallFunc_BooleanOR_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Lens Flare
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Lens_Flare final
{
public:
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Lens_Flare_Enabled_Yes;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Lens_Flare) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Lens_Flare");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Lens_Flare) == 0x000010, "Wrong size on Ultra_Dynamic_Sky_C_Update_Lens_Flare");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_Is_Lens_Flare_Enabled_Yes) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_Is_Lens_Flare_Enabled_Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_IsDedicatedServer_ReturnValue) == 0x00000A, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_Not_PreBool_ReturnValue) == 0x00000B, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Moon Parameters
// 0x00B8 (0x00B8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Moon_Parameters final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value;                   // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_1;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_1;                 // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_2;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_3;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_4;                 // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ACD[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ACE[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_2;                         // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ACF[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_3;                         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD0[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Moon_Parameters");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters) == 0x0000B8, "Wrong size on Ultra_Dynamic_Sky_C_Update_Moon_Parameters");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, Temp_int_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, Temp_int_Variable_1) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, Temp_int_Variable_2) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, Temp_int_Variable_3) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Add_IntInt_ReturnValue_2) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Add_IntInt_ReturnValue_3) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Get_Cached_Color_Value) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Get_Cached_Color_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Get_Cached_Float_Value) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Get_Cached_Float_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Get_Cached_Float_Value_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Get_Cached_Float_Value_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Get_Cached_Color_Value_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Get_Cached_Color_Value_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Get_Cached_Float_Value_2) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Get_Cached_Float_Value_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Get_Cached_Float_Value_3) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Get_Cached_Float_Value_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Get_Cached_Float_Value_4) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Get_Cached_Float_Value_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Array_Get_Item) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Less_IntInt_ReturnValue_1) == 0x000084, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Array_Get_Item_2) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Array_Length_ReturnValue_2) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Less_IntInt_ReturnValue_2) == 0x000094, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Array_Get_Item_3) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Array_Length_ReturnValue_3) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000A4, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x0000AC, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x0000B4, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Overcast Turbulence
// 0x00A8 (0x00A8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence final
{
public:
	double                                        Turbulence_Strength;                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeUnclamped_ReturnValue;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD1[0x2];                                     // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeUnclamped_Value_ImplicitCast;     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence) == 0x0000A8, "Wrong size on Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, Turbulence_Strength) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::Turbulence_Strength' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_Get_Cached_Float_Value) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_Get_Cached_Float_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_Add_VectorVector_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_SelectVector_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_MapRangeUnclamped_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_FClamp_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_IsValid_ReturnValue) == 0x000091, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000094, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_MapRangeUnclamped_Value_ImplicitCast) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_MapRangeUnclamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Post Process Blend Weights
// 0x0F50 (0x0F50 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights final
{
public:
	struct FUDS_Post_Process_Stage                Current_Component_Settings;                        // 0x0000(0x0710)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0714(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0718(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD2[0x4];                                     // 0x071C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x0750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_5;                // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_6;                // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_7;                // 0x0798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x07A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x07A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD3[0x2];                                     // 0x07A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x07A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue_1;             // 0x07A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD4[0x4];                                     // 0x07AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x07C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD5[0x7];                                     // 0x07C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_8;                // 0x07C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue_2;             // 0x07D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD6[0x4];                                     // 0x07D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x07D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x07E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Three_Time_Floats_Out;                    // 0x07F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0800(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD7[0x8];                                     // 0x0808(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUDS_Post_Process_Stage                CallFunc_Array_Get_Item;                           // 0x0810(0x0710)(HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0F20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0F28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD8[0x4];                                     // 0x0F2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPostProcessComponent*                  CallFunc_Array_Get_Item_1;                         // 0x0F30(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0F38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0F39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD9[0x2];                                     // 0x0F3A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_VariableSet_BlendWeight_ImplicitCast;       // 0x0F3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0F40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights) == 0x000010, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights) == 0x000F50, "Wrong size on Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, Current_Component_Settings) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::Current_Component_Settings' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, Temp_int_Array_Index_Variable) == 0x000710, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, Temp_int_Loop_Counter_Variable) == 0x000714, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Add_IntInt_ReturnValue) == 0x000718, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_SelectFloat_ReturnValue) == 0x000720, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000728, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_SelectFloat_ReturnValue_1) == 0x000730, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Lerp_ReturnValue) == 0x000738, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_SelectFloat_ReturnValue_2) == 0x000740, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_SelectFloat_ReturnValue_3) == 0x000748, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_SelectFloat_ReturnValue_4) == 0x000750, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000758, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_MapRangeClamped_ReturnValue) == 0x000760, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000768, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_SelectFloat_ReturnValue_5) == 0x000770, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000778, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_SelectFloat_ReturnValue_6) == 0x000780, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_SelectFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000788, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000790, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_SelectFloat_ReturnValue_7) == 0x000798, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_SelectFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Not_PreBool_ReturnValue) == 0x0007A0, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Not_PreBool_ReturnValue_1) == 0x0007A1, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Conv_BoolToInt_ReturnValue) == 0x0007A4, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Conv_BoolToInt_ReturnValue_1) == 0x0007A8, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Conv_BoolToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0007B0, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0007B8, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Not_PreBool_ReturnValue_2) == 0x0007C0, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_SelectFloat_ReturnValue_8) == 0x0007C8, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_SelectFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Conv_BoolToInt_ReturnValue_2) == 0x0007D0, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Conv_BoolToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0007D8, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x0007E0, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0007E8, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Three_Time_Floats_Out) == 0x0007F0, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Three_Time_Floats_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0007F8, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000800, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Array_Get_Item) == 0x000810, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000F20, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Array_Length_ReturnValue) == 0x000F28, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Array_Get_Item_1) == 0x000F30, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Less_IntInt_ReturnValue) == 0x000F38, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000F39, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, K2Node_VariableSet_BlendWeight_ImplicitCast) == 0x000F3C, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::K2Node_VariableSet_BlendWeight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000F40, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Settings Based On Platform And Scalability
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability final
{
public:
	bool                                          Requires_Updates;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ADA[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Effects_Quality;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue;   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ADB[0x1];                                     // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_SkyMode                                  CallFunc_Map_Find_Value;                           // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability, Requires_Updates) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability::Requires_Updates' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability, Effects_Quality) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability::Effects_Quality' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability, CallFunc_GetConsoleVariableIntValue_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability::CallFunc_GetConsoleVariableIntValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x00000D, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00000E, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability, CallFunc_GetPlatformName_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability, CallFunc_Array_Contains_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000021, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000022, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability, CallFunc_BooleanAND_ReturnValue) == 0x000023, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability, CallFunc_BooleanAND_ReturnValue_1) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability, CallFunc_BooleanAND_ReturnValue_2) == 0x000025, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability, CallFunc_Map_Find_Value) == 0x000026, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability, CallFunc_Map_Find_ReturnValue) == 0x000027, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_On_Platform_And_Scalability::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Static Clouds
// 0x0058 (0x0058 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Static_Clouds final
{
public:
	double                                        Shading_Intensity;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value;                   // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ADC[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_1;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_1;                 // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Static_Clouds) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Static_Clouds");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Static_Clouds) == 0x000058, "Wrong size on Ultra_Dynamic_Sky_C_Update_Static_Clouds");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, Shading_Intensity) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::Shading_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_Get_Cached_Color_Value) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_Get_Cached_Color_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_Get_Cached_Float_Value) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_Get_Cached_Float_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_Get_Cached_Float_Value_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_Get_Cached_Float_Value_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_Get_Cached_Color_Value_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_Get_Cached_Color_Value_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_Sun_Height_Z) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_GetFloatValue_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Static Variables
// 0x0D18 (0x0D18 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Static_Variables final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_12;                              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_13;                              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_13;                // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_14;                              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_14;                // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_15;                              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ADD[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_15;                // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ADE[0x2];                                     // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_16;                              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_17;                              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_16;                // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_17;                // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_18;                              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_19;                              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_18;                // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_19;                // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_20;                              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_21;                              // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_20;                // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_21;                // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_22;                              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ADF[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_22;                // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_23;                              // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_24;                              // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_23;                // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_24;                // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_25;                              // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AE0[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_25;                // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_26;                              // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AE1[0x3];                                     // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_26;                // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AE2[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AE3[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AE4[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_27;                              // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_28;                              // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_27;                // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_28;                // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_29;                              // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_30;                              // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_29;                // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_30;                // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_31;                              // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_32;                              // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_31;                // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_32;                // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_33;                              // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_33;                // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AE5[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_1;                 // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AE6[0x3];                                     // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_34;                              // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_34;                // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AE7[0x4];                                     // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_35;                              // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_36;                              // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_35;                // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_36;                // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_37;                              // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_37;                // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AE8[0x3];                                     // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x01C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AE9[0x3];                                     // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Volumetric_Clouds_SubNoise_Scales_High;   // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Volumetric_Clouds_SubNoise_Scales_Low;    // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Volumetric_Clouds_SubNoise_Scales_Medium; // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_38;                              // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_38;                // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AEA[0x3];                                     // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AEB[0x4];                                     // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_1;                         // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AEC[0x6];                                     // 0x024A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_2;                         // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_3;                         // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AED[0x6];                                     // 0x026A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_4;                         // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_5;                         // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AEE[0x6];                                     // 0x028A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_6;                         // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_7;                         // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AEF[0x6];                                     // 0x02AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_8;                         // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_9;                         // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AF0[0x6];                                     // 0x02CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_10;                        // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_11;                        // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_12;              // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_13;              // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_11;               // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AF1[0x6];                                     // 0x02EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_12;                        // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_13;                        // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_14;              // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_15;              // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_12;               // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_13;               // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AF2[0x6];                                     // 0x030A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_14;                        // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_15;                        // 0x0318(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_16;              // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_17;              // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_14;               // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_15;               // 0x0329(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AF3[0x6];                                     // 0x032A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_16;                        // 0x0330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_17;                        // 0x0338(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_18;              // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_19;              // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_16;               // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_17;               // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AF4[0x6];                                     // 0x034A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_18;                        // 0x0350(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_19;                        // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_20;              // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_21;              // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_18;               // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_19;               // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AF5[0x6];                                     // 0x036A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AF6[0x7];                                     // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x03E0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_BreakVector2D_X;                          // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Scale_Sample_Count_out;                   // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2; // 0x04E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3; // 0x04F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVolumeTexture*                         K2Node_DynamicCast_AsVolume_Texture;               // 0x04F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AF7[0x7];                                     // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVolumeTexture*                         K2Node_DynamicCast_AsVolume_Texture_1;             // 0x0508(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AF8[0x7];                                     // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4; // 0x0518(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVolumeTexture*                         K2Node_DynamicCast_AsVolume_Texture_2;             // 0x0528(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AF9[0x7];                                     // 0x0531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Scale_Sample_Count_out_1;                 // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0540(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Applied_Cloud_Top_and_Bottom_Bottom; // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Applied_Cloud_Top_and_Bottom_Top; // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_39;                              // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_39;                // 0x058C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_20;                        // 0x0590(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_20;               // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AFA[0x7];                                     // 0x0599(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       CallFunc_Both_Cloud_Shadows_MIDs_Out;              // 0x05C0(0x0010)(ReferenceParm)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_21;                        // 0x05D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_22;                        // 0x05D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_22;              // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_23;              // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_21;               // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_22;               // 0x05E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AFB[0x6];                                     // 0x05EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_23;                        // 0x05F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_24;              // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_23;               // 0x0604(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0605(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AFC[0x2];                                     // 0x0606(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue_1;         // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AFD[0x7];                                     // 0x0611(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_24;                        // 0x0618(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_25;              // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_24;               // 0x0624(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AFE[0x3];                                     // 0x0625(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_25;                        // 0x0628(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_26;                        // 0x0630(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_26;              // 0x0638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_27;              // 0x063C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_25;               // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_26;               // 0x0641(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AFF[0x6];                                     // 0x0642(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_27;                        // 0x0648(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_28;                        // 0x0650(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_28;              // 0x0658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_29;              // 0x065C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_27;               // 0x0660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_28;               // 0x0661(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B00[0x6];                                     // 0x0662(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_2D_Clouds_Base_Texture_Tex;               // 0x0668(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5; // 0x0698(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_2;                 // 0x06A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B01[0x7];                                     // 0x06A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_29;                        // 0x06B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_30;                        // 0x06B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_30;              // 0x06C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_31;              // 0x06C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_29;               // 0x06C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_30;               // 0x06C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B02[0x6];                                     // 0x06CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_31;                        // 0x06D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_32;              // 0x06D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_31;               // 0x06DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B03[0x3];                                     // 0x06DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_32;                        // 0x06E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_33;                        // 0x06E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_33;              // 0x06F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_34;              // 0x06F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_32;               // 0x06F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_33;               // 0x06F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B04[0x6];                                     // 0x06FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_34;                        // 0x0700(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_35;                        // 0x0708(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_35;              // 0x0710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_36;              // 0x0714(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_34;               // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_35;               // 0x0719(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B05[0x6];                                     // 0x071A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_2D_Clouds_Base_Texture_Tex_1;             // 0x0720(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_6; // 0x0750(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex; // 0x0758(0x0030)(HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_3;                 // 0x0788(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B06[0x7];                                     // 0x0791(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex_1; // 0x0798(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_7; // 0x07C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_4;                 // 0x07D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x07D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue_2;         // 0x07D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B07[0x6];                                     // 0x07DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x07E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x07F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue_3;         // 0x07F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B08[0x7];                                     // 0x07F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_36;                        // 0x0800(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0808(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B09[0x4];                                     // 0x080C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_37;              // 0x0818(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_36;               // 0x081C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x081D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B0A[0x2];                                     // 0x081E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_5;                // 0x0820(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0830(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0838(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue_4;         // 0x0848(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B0B[0x3];                                     // 0x0849(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x084C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x085C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B0C[0x3];                                     // 0x085D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_37;                        // 0x0860(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_38;                        // 0x0868(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_38;              // 0x0870(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_39;              // 0x0874(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_37;               // 0x0878(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_38;               // 0x0879(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B0D[0x6];                                     // 0x087A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Current_Base_Clouds_Scale_ReturnValue;    // 0x0880(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_39;                        // 0x0888(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_40;              // 0x0890(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_39;               // 0x0894(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B0E[0x3];                                     // 0x0895(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0898(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x08B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x08B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x08C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_6;                // 0x08C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_40;                              // 0x08D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_40;                // 0x08D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_40;                        // 0x08D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_40;               // 0x08E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B0F[0x7];                                     // 0x08E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x08E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x08F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_7;                // 0x08F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0900(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x0908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B10[0x7];                                     // 0x0911(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x0918(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0920(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0938(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0940(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0948(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_RGBToHSV_Vector_HSV;                      // 0x0950(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0960(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0964(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0968(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x096C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0970(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0978(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_HSVToRGB_ReturnValue;                     // 0x0980(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0990(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0991(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B11[0x6];                                     // 0x0992(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_5;        // 0x0998(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_8;                // 0x09A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x09A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x09B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_9;                // 0x09B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue_1;             // 0x09C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B12[0x4];                                     // 0x09C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x09C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x09D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x09D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B13[0x7];                                     // 0x09D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default_1;                           // 0x09E0(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_8; // 0x0A10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0A18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B14[0x7];                                     // 0x0A19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_5;                 // 0x0A20(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0A28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0A29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B15[0x6];                                     // 0x0A2A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_Select_Default_2;                           // 0x0A30(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_Conv_LinearColorToColor_ReturnValue;      // 0x0A38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_Conv_LinearColorToColor_ReturnValue_1;    // 0x0A3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0A40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0A41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B16[0x6];                                     // 0x0A42(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_12;     // 0x0A48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default_3;                           // 0x0A50(0x0030)(HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_10;               // 0x0A80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_9; // 0x0A88(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_6;                 // 0x0A90(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0A98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0A99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B17[0x6];                                     // 0x0A9A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_13;     // 0x0AA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0AA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B18[0x7];                                     // 0x0AA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_Select_Default_4;                           // 0x0AB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0AB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_5;                           // 0x0AD0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_6;                           // 0x0AD8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_6;        // 0x0AE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_7;                           // 0x0AE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_7;        // 0x0AF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0AF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x0B00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_6;           // 0x0B08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_7;           // 0x0B10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0B18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B19[0x7];                                     // 0x0B19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Scale_Sample_Count_out_2;                 // 0x0B20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_14;     // 0x0B28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0B30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_15;     // 0x0B48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0B50(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_8;           // 0x0B68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0B70(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0B88(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_16;     // 0x0B98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x0BA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0BA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0BA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0BAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x0BB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_4; // 0x0BB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_5; // 0x0BB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_6; // 0x0BBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_7; // 0x0BC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1A[0x4];                                     // 0x0BC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0BC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_8; // 0x0BD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_9; // 0x0BD4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_10; // 0x0BD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_11; // 0x0BDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_12; // 0x0BE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_13; // 0x0BE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_14; // 0x0BE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_15; // 0x0BEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetShadowReflectionViewSampleCountScale_NewValue_ImplicitCast; // 0x0BF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetReflectionViewSampleCountScale_NewValue_ImplicitCast; // 0x0BF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_16; // 0x0BF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_17; // 0x0BFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_18; // 0x0C00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_19; // 0x0C04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_20; // 0x0C08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_21; // 0x0C0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_22; // 0x0C10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAerialPespectiveViewDistanceScale_NewValue_ImplicitCast; // 0x0C14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_23; // 0x0C18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_24; // 0x0C1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_25; // 0x0C20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_26; // 0x0C24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_27; // 0x0C28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_28; // 0x0C2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_29; // 0x0C30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1B[0x4];                                     // 0x0C34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0C38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_HSVToRGB_H_ImplicitCast;                  // 0x0C40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_30; // 0x0C44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIndirectLightingIntensity_NewIntensity_ImplicitCast; // 0x0C48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_31; // 0x0C4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_32; // 0x0C50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_33; // 0x0C54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetBloomMaxBrightness_NewValue_ImplicitCast; // 0x0C58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetBloomScale_NewValue_ImplicitCast;      // 0x0C5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetBloomThreshold_NewValue_ImplicitCast;  // 0x0C60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetBloomMaxBrightness_NewValue_ImplicitCast_1; // 0x0C64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_34; // 0x0C68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetOcclusionExponent_InOcclusionExponent_ImplicitCast; // 0x0C6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMinOcclusion_InMinOcclusion_ImplicitCast; // 0x0C70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLayerBottomAltitude_NewValue_ImplicitCast; // 0x0C74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLayerHeight_NewValue_ImplicitCast;     // 0x0C78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetViewSampleCountScale_NewValue_ImplicitCast; // 0x0C7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_35; // 0x0C80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_36; // 0x0C84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_37; // 0x0C88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_38; // 0x0C8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetTracingStartMaxDistance_NewValue_ImplicitCast; // 0x0C90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_39; // 0x0C94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_40; // 0x0C98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_41; // 0x0C9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_42; // 0x0CA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_43; // 0x0CA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_44; // 0x0CA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_45; // 0x0CAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_46; // 0x0CB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_47; // 0x0CB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_48; // 0x0CB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_49; // 0x0CBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_50; // 0x0CC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_51; // 0x0CC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_52; // 0x0CC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_53; // 0x0CCC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_54; // 0x0CD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_55; // 0x0CD4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_56; // 0x0CD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_57; // 0x0CDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_58; // 0x0CE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_59; // 0x0CE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_60; // 0x0CE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_61; // 0x0CEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_62; // 0x0CF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_63; // 0x0CF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_64; // 0x0CF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast; // 0x0CFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetShadowViewSampleCountScale_NewValue_ImplicitCast; // 0x0D00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0D04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLayerBottomAltitude_NewValue_ImplicitCast_1; // 0x0D08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0D0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_65; // 0x0D10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Static_Variables) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Static_Variables");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Static_Variables) == 0x000D18, "Wrong size on Ultra_Dynamic_Sky_C_Update_Static_Variables");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_1) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_2) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_3) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_2) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_3) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_4) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_5) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_4) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_5) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_6) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_7) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_6) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_7) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_8) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_9) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_8) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_9) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_10) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_11) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_10) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_11) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_12) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_13) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_12) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_13) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_14) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_14) == 0x000074, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_15) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_bool_Variable) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_15) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_bool_Variable_1) == 0x000084, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_bool_Variable_2) == 0x000085, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_16) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_17) == 0x00008C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_16) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_17) == 0x000094, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_18) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_19) == 0x00009C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_18) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_19) == 0x0000A4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_20) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_21) == 0x0000AC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_20) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_21) == 0x0000B4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_22) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_bool_Variable_3) == 0x0000BC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_22) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_23) == 0x0000C4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_24) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_23) == 0x0000CC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_24) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_25) == 0x0000D4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_25' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_bool_Variable_4) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_25) == 0x0000DC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_26) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_26' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_bool_Variable_5) == 0x0000E4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_26) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_object_Variable) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_bool_Variable_6) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_object_Variable_1) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_bool_Variable_7) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_real_Variable) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_real_Variable_1) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_27) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_27' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_28) == 0x000124, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_28' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_27) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_28) == 0x00012C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_29) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_29' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_30) == 0x000134, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_30' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_29) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_30) == 0x00013C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_31) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_31' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_32) == 0x000144, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_32' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_31) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_32) == 0x00014C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_33) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_33' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_33) == 0x000154, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_AsTexture_2D) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_AsTexture_2D_1) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_AsTexture_2D_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_1) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_34) == 0x000184, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_34' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_34) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0001A0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_35) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_35' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_36) == 0x0001AC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_36' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_35) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_36) == 0x0001B4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_37) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_37' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_37) == 0x0001BC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_IsValid_ReturnValue) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x0001C4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_IsValid_ReturnValue_1) == 0x0001D4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Volumetric_Clouds_SubNoise_Scales_High) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Volumetric_Clouds_SubNoise_Scales_High' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Volumetric_Clouds_SubNoise_Scales_Low) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Volumetric_Clouds_SubNoise_Scales_Low' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Volumetric_Clouds_SubNoise_Scales_Medium) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Volumetric_Clouds_SubNoise_Scales_Medium' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_38) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_38' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue) == 0x000214, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_38) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x00021C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_1) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_1) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_2) == 0x000240, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_3) == 0x000244, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_1) == 0x000249, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_2) == 0x000250, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_3) == 0x000258, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_4) == 0x000260, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_5) == 0x000264, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_2) == 0x000268, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_3) == 0x000269, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_4) == 0x000270, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_5) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_6) == 0x000280, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_7) == 0x000284, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_4) == 0x000288, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_5) == 0x000289, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_6) == 0x000290, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_7) == 0x000298, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_8) == 0x0002A0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_9) == 0x0002A4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_6) == 0x0002A8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_7) == 0x0002A9, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_8) == 0x0002B0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_9) == 0x0002B8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_10) == 0x0002C0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_11) == 0x0002C4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_8) == 0x0002C8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_9) == 0x0002C9, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_10) == 0x0002D0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_11) == 0x0002D8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_12) == 0x0002E0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_13) == 0x0002E4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_10) == 0x0002E8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_11) == 0x0002E9, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_12) == 0x0002F0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_13) == 0x0002F8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_14) == 0x000300, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_15) == 0x000304, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_12) == 0x000308, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_13) == 0x000309, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_14) == 0x000310, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_15) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_16) == 0x000320, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_17) == 0x000324, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_14) == 0x000328, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_15) == 0x000329, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_16) == 0x000330, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_17) == 0x000338, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_18) == 0x000340, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_19) == 0x000344, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_16) == 0x000348, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_17) == 0x000349, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_18) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_19) == 0x000358, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_20) == 0x000360, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_21) == 0x000364, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_18) == 0x000368, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_19) == 0x000369, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000370, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000378, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakVector_X) == 0x000390, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakVector_Y) == 0x000398, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakVector_Z) == 0x0003A0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0003A8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_IsValid_ReturnValue_2) == 0x0003B0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0003B8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0003C0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_MakeVector_ReturnValue) == 0x0003C8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x0003E0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakVector2D_X) == 0x0004C8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakVector2D_Y) == 0x0004D0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue_1) == 0x0004D8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Scale_Sample_Count_out) == 0x0004E0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Scale_Sample_Count_out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2) == 0x0004E8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3) == 0x0004F0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_AsVolume_Texture) == 0x0004F8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_AsVolume_Texture' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_2) == 0x000500, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_AsVolume_Texture_1) == 0x000508, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_AsVolume_Texture_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_3) == 0x000510, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4) == 0x000518, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000520, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_AsVolume_Texture_2) == 0x000528, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_AsVolume_Texture_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_4) == 0x000530, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Scale_Sample_Count_out_1) == 0x000538, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Scale_Sample_Count_out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000540, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Current_Applied_Cloud_Top_and_Bottom_Bottom) == 0x000558, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Current_Applied_Cloud_Top_and_Bottom_Bottom' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Current_Applied_Cloud_Top_and_Bottom_Top) == 0x000560, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Current_Applied_Cloud_Top_and_Bottom_Top' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakVector_X_1) == 0x000568, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakVector_Y_1) == 0x000570, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakVector_Z_1) == 0x000578, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000580, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_39) == 0x000588, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_39' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_39) == 0x00058C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_20) == 0x000590, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_20) == 0x000598, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x0005A0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0005A8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0005B0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_FMax_ReturnValue) == 0x0005B8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Both_Cloud_Shadows_MIDs_Out) == 0x0005C0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Both_Cloud_Shadows_MIDs_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_21) == 0x0005D0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_22) == 0x0005D8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_22) == 0x0005E0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_23) == 0x0005E4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_21) == 0x0005E8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_22) == 0x0005E9, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue_2) == 0x0005F0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_23) == 0x0005F8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_24) == 0x000600, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_23) == 0x000604, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000605, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue_3) == 0x000608, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Use_Sky_Atmosphere_ReturnValue_1) == 0x000610, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Use_Sky_Atmosphere_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_24) == 0x000618, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_25) == 0x000620, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_24) == 0x000624, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_25) == 0x000628, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_25' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_26) == 0x000630, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_26' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_26) == 0x000638, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_27) == 0x00063C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_25) == 0x000640, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_26) == 0x000641, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_27) == 0x000648, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_27' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_28) == 0x000650, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_28' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_28) == 0x000658, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_29) == 0x00065C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_27) == 0x000660, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_28) == 0x000661, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_2D_Clouds_Base_Texture_Tex) == 0x000668, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_2D_Clouds_Base_Texture_Tex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5) == 0x000698, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_AsTexture_2D_2) == 0x0006A0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_AsTexture_2D_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_5) == 0x0006A8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_29) == 0x0006B0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_29' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_30) == 0x0006B8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_30' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_30) == 0x0006C0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_31) == 0x0006C4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_29) == 0x0006C8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_30) == 0x0006C9, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_31) == 0x0006D0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_31' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_32) == 0x0006D8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_31) == 0x0006DC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_32) == 0x0006E0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_32' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_33) == 0x0006E8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_33' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_33) == 0x0006F0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_34) == 0x0006F4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_32) == 0x0006F8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_33) == 0x0006F9, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_34) == 0x000700, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_34' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_35) == 0x000708, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_35' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_35) == 0x000710, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_36) == 0x000714, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_34) == 0x000718, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_35) == 0x000719, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_2D_Clouds_Base_Texture_Tex_1) == 0x000720, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_2D_Clouds_Base_Texture_Tex_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_6) == 0x000750, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex) == 0x000758, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_AsTexture_2D_3) == 0x000788, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_AsTexture_2D_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_6) == 0x000790, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex_1) == 0x000798, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_7) == 0x0007C8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_AsTexture_2D_4) == 0x0007D0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_AsTexture_2D_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_7) == 0x0007D8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Use_Sky_Atmosphere_ReturnValue_2) == 0x0007D9, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Use_Sky_Atmosphere_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0007E0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue_4) == 0x0007E8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Lerp_ReturnValue) == 0x0007F0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Use_Sky_Atmosphere_ReturnValue_3) == 0x0007F8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Use_Sky_Atmosphere_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_36) == 0x000800, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_36' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000808, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000810, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_37) == 0x000818, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_36) == 0x00081C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_IsValid_ReturnValue_3) == 0x00081D, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue_5) == 0x000820, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000828, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000830, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000838, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Use_Sky_Atmosphere_ReturnValue_4) == 0x000848, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Use_Sky_Atmosphere_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x00084C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Not_PreBool_ReturnValue) == 0x00085C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_37) == 0x000860, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_37' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_38) == 0x000868, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_38' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_38) == 0x000870, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_39) == 0x000874, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_37) == 0x000878, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_38) == 0x000879, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Current_Base_Clouds_Scale_ReturnValue) == 0x000880, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Current_Base_Clouds_Scale_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_39) == 0x000888, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_39' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_40) == 0x000890, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_39) == 0x000894, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000898, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakVector_X_2) == 0x0008B0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakVector_Y_2) == 0x0008B8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakVector_Z_2) == 0x0008C0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue_6) == 0x0008C8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_40) == 0x0008D0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_40' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_40) == 0x0008D4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_40) == 0x0008D8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_40' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_40) == 0x0008E0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0008E8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x0008F0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue_7) == 0x0008F8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000900, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x000908, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000910, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x000918, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000920, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakVector_X_3) == 0x000938, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakVector_Y_3) == 0x000940, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakVector_Z_3) == 0x000948, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_RGBToHSV_Vector_HSV) == 0x000950, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_RGBToHSV_Vector_HSV' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakColor_R) == 0x000960, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakColor_G) == 0x000964, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakColor_B) == 0x000968, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakColor_A) == 0x00096C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000970, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000978, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_HSVToRGB_ReturnValue) == 0x000980, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_HSVToRGB_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000990, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue) == 0x000991, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Divide_DoubleDouble_ReturnValue_5) == 0x000998, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Divide_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue_8) == 0x0009A0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x0009A8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_FClamp_ReturnValue) == 0x0009B0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue_9) == 0x0009B8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_BoolToInt_ReturnValue_1) == 0x0009C0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_BoolToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_Select_Default) == 0x0009C8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0009D0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_IsValid_ReturnValue_4) == 0x0009D8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_Select_Default_1) == 0x0009E0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_8) == 0x000A10, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000A18, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_AsTexture_2D_5) == 0x000A20, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_AsTexture_2D_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_8) == 0x000A28, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_1) == 0x000A29, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_Select_Default_2) == 0x000A30, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_LinearColorToColor_ReturnValue) == 0x000A38, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_LinearColorToColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_LinearColorToColor_ReturnValue_1) == 0x000A3C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_LinearColorToColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000A40, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000A41, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_12) == 0x000A48, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_Select_Default_3) == 0x000A50, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue_10) == 0x000A80, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_9) == 0x000A88, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_AsTexture_2D_6) == 0x000A90, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_AsTexture_2D_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_9) == 0x000A98, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_2) == 0x000A99, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_13) == 0x000AA0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_IsValid_ReturnValue_5) == 0x000AA8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_Select_Default_4) == 0x000AB0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_MakeVector_ReturnValue_1) == 0x000AB8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_Select_Default_5) == 0x000AD0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_Select_Default_6) == 0x000AD8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Divide_DoubleDouble_ReturnValue_6) == 0x000AE0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Divide_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_Select_Default_7) == 0x000AE8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Divide_DoubleDouble_ReturnValue_7) == 0x000AF0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Divide_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_MapRangeClamped_ReturnValue) == 0x000AF8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x000B00, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_DoubleDouble_ReturnValue_6) == 0x000B08, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_DoubleDouble_ReturnValue_7) == 0x000B10, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000B18, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Scale_Sample_Count_out_2) == 0x000B20, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Scale_Sample_Count_out_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_14) == 0x000B28, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_MakeRotator_ReturnValue) == 0x000B30, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_15) == 0x000B48, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000B50, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_DoubleDouble_ReturnValue_8) == 0x000B68, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000B70, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000B88, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_16) == 0x000B98, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x000BA0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000BA4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000BA8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000BAC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x000BB0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_4) == 0x000BB4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_5) == 0x000BB8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_6) == 0x000BBC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_7) == 0x000BC0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000BC8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_8) == 0x000BD0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_9) == 0x000BD4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_10) == 0x000BD8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_11) == 0x000BDC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_12) == 0x000BE0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_13) == 0x000BE4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_14) == 0x000BE8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_15) == 0x000BEC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetShadowReflectionViewSampleCountScale_NewValue_ImplicitCast) == 0x000BF0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetShadowReflectionViewSampleCountScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetReflectionViewSampleCountScale_NewValue_ImplicitCast) == 0x000BF4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetReflectionViewSampleCountScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_16) == 0x000BF8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_17) == 0x000BFC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_18) == 0x000C00, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_19) == 0x000C04, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_20) == 0x000C08, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_21) == 0x000C0C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_22) == 0x000C10, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetAerialPespectiveViewDistanceScale_NewValue_ImplicitCast) == 0x000C14, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetAerialPespectiveViewDistanceScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_23) == 0x000C18, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_24) == 0x000C1C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_25) == 0x000C20, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_25' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_26) == 0x000C24, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_26' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_27) == 0x000C28, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_27' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_28) == 0x000C2C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_28' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_29) == 0x000C30, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_29' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000C38, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_HSVToRGB_H_ImplicitCast) == 0x000C40, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_HSVToRGB_H_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_30) == 0x000C44, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_30' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetIndirectLightingIntensity_NewIntensity_ImplicitCast) == 0x000C48, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetIndirectLightingIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_31) == 0x000C4C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_31' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_32) == 0x000C50, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_32' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_33) == 0x000C54, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_33' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetBloomMaxBrightness_NewValue_ImplicitCast) == 0x000C58, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetBloomMaxBrightness_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetBloomScale_NewValue_ImplicitCast) == 0x000C5C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetBloomScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetBloomThreshold_NewValue_ImplicitCast) == 0x000C60, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetBloomThreshold_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetBloomMaxBrightness_NewValue_ImplicitCast_1) == 0x000C64, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetBloomMaxBrightness_NewValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_34) == 0x000C68, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_34' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetOcclusionExponent_InOcclusionExponent_ImplicitCast) == 0x000C6C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetOcclusionExponent_InOcclusionExponent_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetMinOcclusion_InMinOcclusion_ImplicitCast) == 0x000C70, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetMinOcclusion_InMinOcclusion_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetLayerBottomAltitude_NewValue_ImplicitCast) == 0x000C74, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetLayerBottomAltitude_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetLayerHeight_NewValue_ImplicitCast) == 0x000C78, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetLayerHeight_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetViewSampleCountScale_NewValue_ImplicitCast) == 0x000C7C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetViewSampleCountScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_35) == 0x000C80, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_35' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_36) == 0x000C84, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_36' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_37) == 0x000C88, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_37' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_38) == 0x000C8C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_38' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetTracingStartMaxDistance_NewValue_ImplicitCast) == 0x000C90, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetTracingStartMaxDistance_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_39) == 0x000C94, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_39' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_40) == 0x000C98, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_40' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_41) == 0x000C9C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_41' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_42) == 0x000CA0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_42' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_43) == 0x000CA4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_43' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_44) == 0x000CA8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_44' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_45) == 0x000CAC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_45' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_46) == 0x000CB0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_46' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_47) == 0x000CB4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_47' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_48) == 0x000CB8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_48' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_49) == 0x000CBC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_49' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_50) == 0x000CC0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_50' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_51) == 0x000CC4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_51' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_52) == 0x000CC8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_52' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_53) == 0x000CCC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_53' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_54) == 0x000CD0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_54' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_55) == 0x000CD4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_55' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_56) == 0x000CD8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_56' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_57) == 0x000CDC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_57' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_58) == 0x000CE0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_58' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_59) == 0x000CE4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_59' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_60) == 0x000CE8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_60' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_61) == 0x000CEC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_61' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_62) == 0x000CF0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_62' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_63) == 0x000CF4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_63' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_64) == 0x000CF8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_64' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast) == 0x000CFC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetShadowViewSampleCountScale_NewValue_ImplicitCast) == 0x000D00, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetShadowViewSampleCountScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000D04, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetLayerBottomAltitude_NewValue_ImplicitCast_1) == 0x000D08, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetLayerBottomAltitude_NewValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000D0C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_65) == 0x000D10, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_65' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Variables Controlled By Weather
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather final
{
public:
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0008(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1C[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1D[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1E[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Intended_Cloud_Direction_Intended_Cloud_Direction; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1F[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Intended_Cloud_Speed_Intended_Cloud_Speed; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather) == 0x000078, "Wrong size on Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, CallFunc_GetGameMode_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, CallFunc_Array_Get_Item) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000029, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, CallFunc_Get_Intended_Cloud_Direction_Intended_Cloud_Direction) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::CallFunc_Get_Intended_Cloud_Direction_Intended_Cloud_Direction' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, CallFunc_Get_Intended_Cloud_Speed_Intended_Cloud_Speed) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::CallFunc_Get_Intended_Cloud_Speed_Intended_Cloud_Speed' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, CallFunc_Not_PreBool_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000071, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x000072, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, CallFunc_IsValid_ReturnValue_1) == 0x000073, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Use Sky Atmosphere
// 0x0002 (0x0002 - 0x0000)
struct Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere) == 0x000002, "Wrong size on Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Using 2D Clouds
// 0x0002 (0x0002 - 0x0000)
struct Ultra_Dynamic_Sky_C_Using_2D_Clouds final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Using_2D_Clouds) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Using_2D_Clouds");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Using_2D_Clouds) == 0x000002, "Wrong size on Ultra_Dynamic_Sky_C_Using_2D_Clouds");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Using_2D_Clouds, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Using_2D_Clouds::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Using_2D_Clouds, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Using_2D_Clouds::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Cloud Base Cloud Height
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height final
{
public:
	double                                        Param_Base_Cloud_Height;                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height, Param_Base_Cloud_Height) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height::Param_Base_Cloud_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height, CallFunc_FClamp_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Cloud Floor Variation
// 0x0090 (0x0090 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation final
{
public:
	double                                        Height;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Color;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_ReturnValue;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation) == 0x000090, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, Height) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, Color) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_BreakVector_X) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_BreakVector_Y) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_BreakVector_Z) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Abs_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Abs_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_MapRangeClamped_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Ease_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Lerp_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Lerp_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Cloud Layer Height
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height final
{
public:
	double                                        Layer_Height;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height, Layer_Height) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height::Layer_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height, CallFunc_SelectFloat_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Cloud Layer Scale
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale final
{
public:
	double                                        Layer_Scale;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale, Layer_Scale) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale::Layer_Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale, CallFunc_SelectFloat_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Cloud Shadows Altitude
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude final
{
public:
	double                                        Cloud_Shadows_Altitude;                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_Floor_Variation_Height;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_Floor_Variation_Color;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude) == 0x000060, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude, Cloud_Shadows_Altitude) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude::Cloud_Shadows_Altitude' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude, CallFunc_Volumetric_Cloud_Floor_Variation_Height) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude::CallFunc_Volumetric_Cloud_Floor_Variation_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude, CallFunc_Volumetric_Cloud_Floor_Variation_Color) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude::CallFunc_Volumetric_Cloud_Floor_Variation_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Cloud Top Altitude
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude final
{
public:
	double                                        Cloud_Top_Altitude;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude, Cloud_Top_Altitude) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude::Cloud_Top_Altitude' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Clouds Base Clouds Texture
// 0x0168 (0x0168 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture final
{
public:
	TSoftObjectPtr<class UTexture2D>              Tex;                                               // 0x0000(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B20[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable;                          // 0x0038(0x0030)(HasGetValueTypeHash)
	EUDS_NoiseType                                Temp_byte_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B21[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_1;                        // 0x0070(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_2;                        // 0x00A0(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x00D0(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B22[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default;                             // 0x0108(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default_1;                           // 0x0138(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture) == 0x000168, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture, Tex) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture::Tex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture, Temp_bool_Variable) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture, Temp_softobject_Variable) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture, Temp_byte_Variable) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture, Temp_softobject_Variable_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture, Temp_softobject_Variable_2) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture, CallFunc_IsValid_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture, K2Node_Select_Default) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture, K2Node_Select_Default_1) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture::K2Node_Select_Default_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Clouds Parent Materials
// 0x0190 (0x0190 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      Simplified;                                        // 0x0000(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Complex;                                           // 0x0030(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B23[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable;                          // 0x0068(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_1;                        // 0x0098(0x0030)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B24[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_2;                        // 0x00D0(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_3;                        // 0x0100(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default;                             // 0x0130(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default_1;                           // 0x0160(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials) == 0x000190, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Simplified) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Simplified' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Complex) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Complex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_bool_Variable) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_softobject_Variable) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_softobject_Variable_1) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_bool_Variable_1) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_softobject_Variable_2) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_softobject_Variable_3) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_softobject_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, K2Node_Select_Default) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, K2Node_Select_Default_1) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::K2Node_Select_Default_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Clouds SubNoise Scales
// 0x00C0 (0x00C0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales final
{
public:
	struct FLinearColor                           High;                                              // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Low;                                               // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Medium;                                            // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_2;   // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales) == 0x0000C0, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales, High) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales::High' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales, Low) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales::Low' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales, Medium) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales::Medium' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales, CallFunc_MakeVector_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales, CallFunc_Conv_VectorToLinearColor_ReturnValue_2) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales::CallFunc_Conv_VectorToLinearColor_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Clouds Top Bottom Distribution
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Clouds_Top_Bottom_Distribution final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Dimming_Directional_Lights_ReturnValue;   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B25[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Top_Bottom_Distribution) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Clouds_Top_Bottom_Distribution");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Top_Bottom_Distribution) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Clouds_Top_Bottom_Distribution");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Top_Bottom_Distribution, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Top_Bottom_Distribution::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Top_Bottom_Distribution, CallFunc_Dimming_Directional_Lights_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Top_Bottom_Distribution::CallFunc_Dimming_Directional_Lights_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Top_Bottom_Distribution, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000009, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Top_Bottom_Distribution::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Top_Bottom_Distribution, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Top_Bottom_Distribution::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Top_Bottom_Distribution, CallFunc_BooleanAND_ReturnValue) == 0x00000B, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Top_Bottom_Distribution::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Top_Bottom_Distribution, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Top_Bottom_Distribution::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Top_Bottom_Distribution, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Top_Bottom_Distribution::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

}

