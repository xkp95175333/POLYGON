#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HorizonUI

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "HorizonUI_structs.hpp"
#include "Slate_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// DelegateFunction HorizonUI.HorizonButton.OnHorizonButtonEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct HorizonButton_OnHorizonButtonEvent__DelegateSignature final
{
public:
	class UHorizonButton*                         Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonButton_OnHorizonButtonEvent__DelegateSignature) == 0x000008, "Wrong alignment on HorizonButton_OnHorizonButtonEvent__DelegateSignature");
static_assert(sizeof(HorizonButton_OnHorizonButtonEvent__DelegateSignature) == 0x000008, "Wrong size on HorizonButton_OnHorizonButtonEvent__DelegateSignature");
static_assert(offsetof(HorizonButton_OnHorizonButtonEvent__DelegateSignature, Button) == 0x000000, "Member 'HorizonButton_OnHorizonButtonEvent__DelegateSignature::Button' has a wrong offset!");

// DelegateFunction HorizonUI.HorizonButtonUserWidget.OnHorizonButtonEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct HorizonButtonUserWidget_OnHorizonButtonEvent__DelegateSignature final
{
public:
	class UHorizonButtonUserWidget*               InButton;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonButtonUserWidget_OnHorizonButtonEvent__DelegateSignature) == 0x000008, "Wrong alignment on HorizonButtonUserWidget_OnHorizonButtonEvent__DelegateSignature");
static_assert(sizeof(HorizonButtonUserWidget_OnHorizonButtonEvent__DelegateSignature) == 0x000008, "Wrong size on HorizonButtonUserWidget_OnHorizonButtonEvent__DelegateSignature");
static_assert(offsetof(HorizonButtonUserWidget_OnHorizonButtonEvent__DelegateSignature, InButton) == 0x000000, "Member 'HorizonButtonUserWidget_OnHorizonButtonEvent__DelegateSignature::InButton' has a wrong offset!");

// DelegateFunction HorizonUI.HorizonButtonUserWidget.OnHorizonButtonFocusEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct HorizonButtonUserWidget_OnHorizonButtonFocusEvent__DelegateSignature final
{
public:
	class UHorizonButtonUserWidget*               InButton;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonButtonUserWidget_OnHorizonButtonFocusEvent__DelegateSignature) == 0x000008, "Wrong alignment on HorizonButtonUserWidget_OnHorizonButtonFocusEvent__DelegateSignature");
static_assert(sizeof(HorizonButtonUserWidget_OnHorizonButtonFocusEvent__DelegateSignature) == 0x000010, "Wrong size on HorizonButtonUserWidget_OnHorizonButtonFocusEvent__DelegateSignature");
static_assert(offsetof(HorizonButtonUserWidget_OnHorizonButtonFocusEvent__DelegateSignature, InButton) == 0x000000, "Member 'HorizonButtonUserWidget_OnHorizonButtonFocusEvent__DelegateSignature::InButton' has a wrong offset!");
static_assert(offsetof(HorizonButtonUserWidget_OnHorizonButtonFocusEvent__DelegateSignature, InFocusEvent) == 0x000008, "Member 'HorizonButtonUserWidget_OnHorizonButtonFocusEvent__DelegateSignature::InFocusEvent' has a wrong offset!");

// Function HorizonUI.HorizonButtonUserWidget.ReceiveOnButtonFocus
// 0x0008 (0x0008 - 0x0000)
struct HorizonButtonUserWidget_ReceiveOnButtonFocus final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonButtonUserWidget_ReceiveOnButtonFocus) == 0x000004, "Wrong alignment on HorizonButtonUserWidget_ReceiveOnButtonFocus");
static_assert(sizeof(HorizonButtonUserWidget_ReceiveOnButtonFocus) == 0x000008, "Wrong size on HorizonButtonUserWidget_ReceiveOnButtonFocus");
static_assert(offsetof(HorizonButtonUserWidget_ReceiveOnButtonFocus, InFocusEvent) == 0x000000, "Member 'HorizonButtonUserWidget_ReceiveOnButtonFocus::InFocusEvent' has a wrong offset!");

// Function HorizonUI.HorizonButtonUserWidget.ReceiveOnOnButtonFocusLost
// 0x0008 (0x0008 - 0x0000)
struct HorizonButtonUserWidget_ReceiveOnOnButtonFocusLost final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonButtonUserWidget_ReceiveOnOnButtonFocusLost) == 0x000004, "Wrong alignment on HorizonButtonUserWidget_ReceiveOnOnButtonFocusLost");
static_assert(sizeof(HorizonButtonUserWidget_ReceiveOnOnButtonFocusLost) == 0x000008, "Wrong size on HorizonButtonUserWidget_ReceiveOnOnButtonFocusLost");
static_assert(offsetof(HorizonButtonUserWidget_ReceiveOnOnButtonFocusLost, InFocusEvent) == 0x000000, "Member 'HorizonButtonUserWidget_ReceiveOnOnButtonFocusLost::InFocusEvent' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgDecorator.BuildSegment
// 0x0298 (0x0298 - 0x0000)
struct HorizonDialogueMsgDecorator_BuildSegment final
{
public:
	class UHorizonDialogueMsgTextBlock*           InMsgTextBlock;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InCurrentSegInfoIndex;                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1151[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHorizonDialogueSegmentInfo            InCurrentSegInfo;                                  // 0x0010(0x0270)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FHorizonDialogueSegmentInfo>    InSegInfos;                                        // 0x0280(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0290(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1152[0x7];                                     // 0x0291(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HorizonDialogueMsgDecorator_BuildSegment) == 0x000008, "Wrong alignment on HorizonDialogueMsgDecorator_BuildSegment");
static_assert(sizeof(HorizonDialogueMsgDecorator_BuildSegment) == 0x000298, "Wrong size on HorizonDialogueMsgDecorator_BuildSegment");
static_assert(offsetof(HorizonDialogueMsgDecorator_BuildSegment, InMsgTextBlock) == 0x000000, "Member 'HorizonDialogueMsgDecorator_BuildSegment::InMsgTextBlock' has a wrong offset!");
static_assert(offsetof(HorizonDialogueMsgDecorator_BuildSegment, InCurrentSegInfoIndex) == 0x000008, "Member 'HorizonDialogueMsgDecorator_BuildSegment::InCurrentSegInfoIndex' has a wrong offset!");
static_assert(offsetof(HorizonDialogueMsgDecorator_BuildSegment, InCurrentSegInfo) == 0x000010, "Member 'HorizonDialogueMsgDecorator_BuildSegment::InCurrentSegInfo' has a wrong offset!");
static_assert(offsetof(HorizonDialogueMsgDecorator_BuildSegment, InSegInfos) == 0x000280, "Member 'HorizonDialogueMsgDecorator_BuildSegment::InSegInfos' has a wrong offset!");
static_assert(offsetof(HorizonDialogueMsgDecorator_BuildSegment, ReturnValue) == 0x000290, "Member 'HorizonDialogueMsgDecorator_BuildSegment::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgDecorator.PreRun
// 0x02E8 (0x02E8 - 0x0000)
struct HorizonDialogueMsgDecorator_PreRun final
{
public:
	class UHorizonDialogueMsgTextBlock*           InMsgTextBlock;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHorizonDialogueBlockInfo              InDialogueBlockInfo;                               // 0x0008(0x0068)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FHorizonDialogueSegmentInfo            InSegInfo;                                         // 0x0070(0x0270)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x02E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1153[0x7];                                     // 0x02E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HorizonDialogueMsgDecorator_PreRun) == 0x000008, "Wrong alignment on HorizonDialogueMsgDecorator_PreRun");
static_assert(sizeof(HorizonDialogueMsgDecorator_PreRun) == 0x0002E8, "Wrong size on HorizonDialogueMsgDecorator_PreRun");
static_assert(offsetof(HorizonDialogueMsgDecorator_PreRun, InMsgTextBlock) == 0x000000, "Member 'HorizonDialogueMsgDecorator_PreRun::InMsgTextBlock' has a wrong offset!");
static_assert(offsetof(HorizonDialogueMsgDecorator_PreRun, InDialogueBlockInfo) == 0x000008, "Member 'HorizonDialogueMsgDecorator_PreRun::InDialogueBlockInfo' has a wrong offset!");
static_assert(offsetof(HorizonDialogueMsgDecorator_PreRun, InSegInfo) == 0x000070, "Member 'HorizonDialogueMsgDecorator_PreRun::InSegInfo' has a wrong offset!");
static_assert(offsetof(HorizonDialogueMsgDecorator_PreRun, ReturnValue) == 0x0002E0, "Member 'HorizonDialogueMsgDecorator_PreRun::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgDecorator.Run
// 0x02E8 (0x02E8 - 0x0000)
struct HorizonDialogueMsgDecorator_Run final
{
public:
	class UHorizonDialogueMsgTextBlock*           InMsgTextBlock;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHorizonDialogueBlockInfo              InDialogueBlockInfo;                               // 0x0008(0x0068)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FHorizonDialogueSegmentInfo            InSegInfo;                                         // 0x0070(0x0270)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x02E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1154[0x7];                                     // 0x02E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HorizonDialogueMsgDecorator_Run) == 0x000008, "Wrong alignment on HorizonDialogueMsgDecorator_Run");
static_assert(sizeof(HorizonDialogueMsgDecorator_Run) == 0x0002E8, "Wrong size on HorizonDialogueMsgDecorator_Run");
static_assert(offsetof(HorizonDialogueMsgDecorator_Run, InMsgTextBlock) == 0x000000, "Member 'HorizonDialogueMsgDecorator_Run::InMsgTextBlock' has a wrong offset!");
static_assert(offsetof(HorizonDialogueMsgDecorator_Run, InDialogueBlockInfo) == 0x000008, "Member 'HorizonDialogueMsgDecorator_Run::InDialogueBlockInfo' has a wrong offset!");
static_assert(offsetof(HorizonDialogueMsgDecorator_Run, InSegInfo) == 0x000070, "Member 'HorizonDialogueMsgDecorator_Run::InSegInfo' has a wrong offset!");
static_assert(offsetof(HorizonDialogueMsgDecorator_Run, ReturnValue) == 0x0002E0, "Member 'HorizonDialogueMsgDecorator_Run::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.GetCurrentPageIndex
// 0x0004 (0x0004 - 0x0000)
struct HorizonDialogueMsgTextBlock_GetCurrentPageIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_GetCurrentPageIndex) == 0x000004, "Wrong alignment on HorizonDialogueMsgTextBlock_GetCurrentPageIndex");
static_assert(sizeof(HorizonDialogueMsgTextBlock_GetCurrentPageIndex) == 0x000004, "Wrong size on HorizonDialogueMsgTextBlock_GetCurrentPageIndex");
static_assert(offsetof(HorizonDialogueMsgTextBlock_GetCurrentPageIndex, ReturnValue) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_GetCurrentPageIndex::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.NextDialogueMsgPage
// 0x0001 (0x0001 - 0x0000)
struct HorizonDialogueMsgTextBlock_NextDialogueMsgPage final
{
public:
	bool                                          bShouldStartTick;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_NextDialogueMsgPage) == 0x000001, "Wrong alignment on HorizonDialogueMsgTextBlock_NextDialogueMsgPage");
static_assert(sizeof(HorizonDialogueMsgTextBlock_NextDialogueMsgPage) == 0x000001, "Wrong size on HorizonDialogueMsgTextBlock_NextDialogueMsgPage");
static_assert(offsetof(HorizonDialogueMsgTextBlock_NextDialogueMsgPage, bShouldStartTick) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_NextDialogueMsgPage::bShouldStartTick' has a wrong offset!");

// DelegateFunction HorizonUI.HorizonDialogueMsgTextBlock.OnHorizonDialogueCharAdvancedEvent__DelegateSignature
// 0x0068 (0x0068 - 0x0000)
struct HorizonDialogueMsgTextBlock_OnHorizonDialogueCharAdvancedEvent__DelegateSignature final
{
public:
	struct FHorizonDialogueBlockInfo              InCurrentBlockInfo;                                // 0x0000(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_OnHorizonDialogueCharAdvancedEvent__DelegateSignature) == 0x000008, "Wrong alignment on HorizonDialogueMsgTextBlock_OnHorizonDialogueCharAdvancedEvent__DelegateSignature");
static_assert(sizeof(HorizonDialogueMsgTextBlock_OnHorizonDialogueCharAdvancedEvent__DelegateSignature) == 0x000068, "Wrong size on HorizonDialogueMsgTextBlock_OnHorizonDialogueCharAdvancedEvent__DelegateSignature");
static_assert(offsetof(HorizonDialogueMsgTextBlock_OnHorizonDialogueCharAdvancedEvent__DelegateSignature, InCurrentBlockInfo) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_OnHorizonDialogueCharAdvancedEvent__DelegateSignature::InCurrentBlockInfo' has a wrong offset!");

// DelegateFunction HorizonUI.HorizonDialogueMsgTextBlock.OnHorizonDialogueCustomEvent__DelegateSignature
// 0x0280 (0x0280 - 0x0000)
struct HorizonDialogueMsgTextBlock_OnHorizonDialogueCustomEvent__DelegateSignature final
{
public:
	class FString                                 InEventName;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHorizonDialogueSegmentInfo            InSegInfo;                                         // 0x0010(0x0270)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_OnHorizonDialogueCustomEvent__DelegateSignature) == 0x000008, "Wrong alignment on HorizonDialogueMsgTextBlock_OnHorizonDialogueCustomEvent__DelegateSignature");
static_assert(sizeof(HorizonDialogueMsgTextBlock_OnHorizonDialogueCustomEvent__DelegateSignature) == 0x000280, "Wrong size on HorizonDialogueMsgTextBlock_OnHorizonDialogueCustomEvent__DelegateSignature");
static_assert(offsetof(HorizonDialogueMsgTextBlock_OnHorizonDialogueCustomEvent__DelegateSignature, InEventName) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_OnHorizonDialogueCustomEvent__DelegateSignature::InEventName' has a wrong offset!");
static_assert(offsetof(HorizonDialogueMsgTextBlock_OnHorizonDialogueCustomEvent__DelegateSignature, InSegInfo) == 0x000010, "Member 'HorizonDialogueMsgTextBlock_OnHorizonDialogueCustomEvent__DelegateSignature::InSegInfo' has a wrong offset!");

// DelegateFunction HorizonUI.HorizonDialogueMsgTextBlock.OnHorizonDialoguePageEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct HorizonDialogueMsgTextBlock_OnHorizonDialoguePageEvent__DelegateSignature final
{
public:
	struct FHorizonDialogueDialoguePageResult     InResult;                                          // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_OnHorizonDialoguePageEvent__DelegateSignature) == 0x000004, "Wrong alignment on HorizonDialogueMsgTextBlock_OnHorizonDialoguePageEvent__DelegateSignature");
static_assert(sizeof(HorizonDialogueMsgTextBlock_OnHorizonDialoguePageEvent__DelegateSignature) == 0x000004, "Wrong size on HorizonDialogueMsgTextBlock_OnHorizonDialoguePageEvent__DelegateSignature");
static_assert(offsetof(HorizonDialogueMsgTextBlock_OnHorizonDialoguePageEvent__DelegateSignature, InResult) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_OnHorizonDialoguePageEvent__DelegateSignature::InResult' has a wrong offset!");

// DelegateFunction HorizonUI.HorizonDialogueMsgTextBlock.OnHorizonHypertextEvent__DelegateSignature
// 0x0078 (0x0078 - 0x0000)
struct HorizonDialogueMsgTextBlock_OnHorizonHypertextEvent__DelegateSignature final
{
public:
	struct FHorizonDialogueHypertextResult        InResult;                                          // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_OnHorizonHypertextEvent__DelegateSignature) == 0x000008, "Wrong alignment on HorizonDialogueMsgTextBlock_OnHorizonHypertextEvent__DelegateSignature");
static_assert(sizeof(HorizonDialogueMsgTextBlock_OnHorizonHypertextEvent__DelegateSignature) == 0x000078, "Wrong size on HorizonDialogueMsgTextBlock_OnHorizonHypertextEvent__DelegateSignature");
static_assert(offsetof(HorizonDialogueMsgTextBlock_OnHorizonHypertextEvent__DelegateSignature, InResult) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_OnHorizonHypertextEvent__DelegateSignature::InResult' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.PrevDialogueMsgPage
// 0x0001 (0x0001 - 0x0000)
struct HorizonDialogueMsgTextBlock_PrevDialogueMsgPage final
{
public:
	bool                                          bShouldStartTick;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_PrevDialogueMsgPage) == 0x000001, "Wrong alignment on HorizonDialogueMsgTextBlock_PrevDialogueMsgPage");
static_assert(sizeof(HorizonDialogueMsgTextBlock_PrevDialogueMsgPage) == 0x000001, "Wrong size on HorizonDialogueMsgTextBlock_PrevDialogueMsgPage");
static_assert(offsetof(HorizonDialogueMsgTextBlock_PrevDialogueMsgPage, bShouldStartTick) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_PrevDialogueMsgPage::bShouldStartTick' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.SetAutoNextDialogueMsgPageIntervalRate
// 0x0004 (0x0004 - 0x0000)
struct HorizonDialogueMsgTextBlock_SetAutoNextDialogueMsgPageIntervalRate final
{
public:
	float                                         InAutoNextDialogueMsgPageIntervalRate;             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_SetAutoNextDialogueMsgPageIntervalRate) == 0x000004, "Wrong alignment on HorizonDialogueMsgTextBlock_SetAutoNextDialogueMsgPageIntervalRate");
static_assert(sizeof(HorizonDialogueMsgTextBlock_SetAutoNextDialogueMsgPageIntervalRate) == 0x000004, "Wrong size on HorizonDialogueMsgTextBlock_SetAutoNextDialogueMsgPageIntervalRate");
static_assert(offsetof(HorizonDialogueMsgTextBlock_SetAutoNextDialogueMsgPageIntervalRate, InAutoNextDialogueMsgPageIntervalRate) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_SetAutoNextDialogueMsgPageIntervalRate::InAutoNextDialogueMsgPageIntervalRate' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.SetColorAndOpacity
// 0x0014 (0x0014 - 0x0000)
struct HorizonDialogueMsgTextBlock_SetColorAndOpacity final
{
public:
	struct FSlateColor                            InColorAndOpacity;                                 // 0x0000(0x0014)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_SetColorAndOpacity) == 0x000004, "Wrong alignment on HorizonDialogueMsgTextBlock_SetColorAndOpacity");
static_assert(sizeof(HorizonDialogueMsgTextBlock_SetColorAndOpacity) == 0x000014, "Wrong size on HorizonDialogueMsgTextBlock_SetColorAndOpacity");
static_assert(offsetof(HorizonDialogueMsgTextBlock_SetColorAndOpacity, InColorAndOpacity) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_SetColorAndOpacity::InColorAndOpacity' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.SetDialogueMsgPage
// 0x0008 (0x0008 - 0x0000)
struct HorizonDialogueMsgTextBlock_SetDialogueMsgPage final
{
public:
	int32                                         InPageIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldStartTick;                                  // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_116D[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HorizonDialogueMsgTextBlock_SetDialogueMsgPage) == 0x000004, "Wrong alignment on HorizonDialogueMsgTextBlock_SetDialogueMsgPage");
static_assert(sizeof(HorizonDialogueMsgTextBlock_SetDialogueMsgPage) == 0x000008, "Wrong size on HorizonDialogueMsgTextBlock_SetDialogueMsgPage");
static_assert(offsetof(HorizonDialogueMsgTextBlock_SetDialogueMsgPage, InPageIndex) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_SetDialogueMsgPage::InPageIndex' has a wrong offset!");
static_assert(offsetof(HorizonDialogueMsgTextBlock_SetDialogueMsgPage, bShouldStartTick) == 0x000004, "Member 'HorizonDialogueMsgTextBlock_SetDialogueMsgPage::bShouldStartTick' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.SetDialogueMsgSpeed
// 0x0008 (0x0008 - 0x0000)
struct HorizonDialogueMsgTextBlock_SetDialogueMsgSpeed final
{
public:
	float                                         Speed;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForce;                                            // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_116E[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HorizonDialogueMsgTextBlock_SetDialogueMsgSpeed) == 0x000004, "Wrong alignment on HorizonDialogueMsgTextBlock_SetDialogueMsgSpeed");
static_assert(sizeof(HorizonDialogueMsgTextBlock_SetDialogueMsgSpeed) == 0x000008, "Wrong size on HorizonDialogueMsgTextBlock_SetDialogueMsgSpeed");
static_assert(offsetof(HorizonDialogueMsgTextBlock_SetDialogueMsgSpeed, Speed) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_SetDialogueMsgSpeed::Speed' has a wrong offset!");
static_assert(offsetof(HorizonDialogueMsgTextBlock_SetDialogueMsgSpeed, bForce) == 0x000004, "Member 'HorizonDialogueMsgTextBlock_SetDialogueMsgSpeed::bForce' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.SetFont
// 0x0060 (0x0060 - 0x0000)
struct HorizonDialogueMsgTextBlock_SetFont final
{
public:
	struct FSlateFontInfo                         InFontInfo;                                        // 0x0000(0x0058)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForce;                                            // 0x0058(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_116F[0x7];                                     // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HorizonDialogueMsgTextBlock_SetFont) == 0x000008, "Wrong alignment on HorizonDialogueMsgTextBlock_SetFont");
static_assert(sizeof(HorizonDialogueMsgTextBlock_SetFont) == 0x000060, "Wrong size on HorizonDialogueMsgTextBlock_SetFont");
static_assert(offsetof(HorizonDialogueMsgTextBlock_SetFont, InFontInfo) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_SetFont::InFontInfo' has a wrong offset!");
static_assert(offsetof(HorizonDialogueMsgTextBlock_SetFont, bForce) == 0x000058, "Member 'HorizonDialogueMsgTextBlock_SetFont::bForce' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.SetFontSize
// 0x0004 (0x0004 - 0x0000)
struct HorizonDialogueMsgTextBlock_SetFontSize final
{
public:
	int32                                         FontSize;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_SetFontSize) == 0x000004, "Wrong alignment on HorizonDialogueMsgTextBlock_SetFontSize");
static_assert(sizeof(HorizonDialogueMsgTextBlock_SetFontSize) == 0x000004, "Wrong size on HorizonDialogueMsgTextBlock_SetFontSize");
static_assert(offsetof(HorizonDialogueMsgTextBlock_SetFontSize, FontSize) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_SetFontSize::FontSize' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.SetIsAutoNextDialogueMsgPage
// 0x0001 (0x0001 - 0x0000)
struct HorizonDialogueMsgTextBlock_SetIsAutoNextDialogueMsgPage final
{
public:
	bool                                          B;                                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_SetIsAutoNextDialogueMsgPage) == 0x000001, "Wrong alignment on HorizonDialogueMsgTextBlock_SetIsAutoNextDialogueMsgPage");
static_assert(sizeof(HorizonDialogueMsgTextBlock_SetIsAutoNextDialogueMsgPage) == 0x000001, "Wrong size on HorizonDialogueMsgTextBlock_SetIsAutoNextDialogueMsgPage");
static_assert(offsetof(HorizonDialogueMsgTextBlock_SetIsAutoNextDialogueMsgPage, B) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_SetIsAutoNextDialogueMsgPage::B' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.SetIsDialogueMsgText
// 0x0001 (0x0001 - 0x0000)
struct HorizonDialogueMsgTextBlock_SetIsDialogueMsgText final
{
public:
	bool                                          B;                                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_SetIsDialogueMsgText) == 0x000001, "Wrong alignment on HorizonDialogueMsgTextBlock_SetIsDialogueMsgText");
static_assert(sizeof(HorizonDialogueMsgTextBlock_SetIsDialogueMsgText) == 0x000001, "Wrong size on HorizonDialogueMsgTextBlock_SetIsDialogueMsgText");
static_assert(offsetof(HorizonDialogueMsgTextBlock_SetIsDialogueMsgText, B) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_SetIsDialogueMsgText::B' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.SetIsRepeatDialogueMsg
// 0x0001 (0x0001 - 0x0000)
struct HorizonDialogueMsgTextBlock_SetIsRepeatDialogueMsg final
{
public:
	bool                                          B;                                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_SetIsRepeatDialogueMsg) == 0x000001, "Wrong alignment on HorizonDialogueMsgTextBlock_SetIsRepeatDialogueMsg");
static_assert(sizeof(HorizonDialogueMsgTextBlock_SetIsRepeatDialogueMsg) == 0x000001, "Wrong size on HorizonDialogueMsgTextBlock_SetIsRepeatDialogueMsg");
static_assert(offsetof(HorizonDialogueMsgTextBlock_SetIsRepeatDialogueMsg, B) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_SetIsRepeatDialogueMsg::B' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.SetIsStartTickDialogueMsg
// 0x0002 (0x0002 - 0x0000)
struct HorizonDialogueMsgTextBlock_SetIsStartTickDialogueMsg final
{
public:
	bool                                          bShouldStartTick;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldResetDialogue;                              // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_SetIsStartTickDialogueMsg) == 0x000001, "Wrong alignment on HorizonDialogueMsgTextBlock_SetIsStartTickDialogueMsg");
static_assert(sizeof(HorizonDialogueMsgTextBlock_SetIsStartTickDialogueMsg) == 0x000002, "Wrong size on HorizonDialogueMsgTextBlock_SetIsStartTickDialogueMsg");
static_assert(offsetof(HorizonDialogueMsgTextBlock_SetIsStartTickDialogueMsg, bShouldStartTick) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_SetIsStartTickDialogueMsg::bShouldStartTick' has a wrong offset!");
static_assert(offsetof(HorizonDialogueMsgTextBlock_SetIsStartTickDialogueMsg, bShouldResetDialogue) == 0x000001, "Member 'HorizonDialogueMsgTextBlock_SetIsStartTickDialogueMsg::bShouldResetDialogue' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.SetJustification
// 0x0002 (0x0002 - 0x0000)
struct HorizonDialogueMsgTextBlock_SetJustification final
{
public:
	ETextJustify                                  InJustification;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForce;                                            // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_SetJustification) == 0x000001, "Wrong alignment on HorizonDialogueMsgTextBlock_SetJustification");
static_assert(sizeof(HorizonDialogueMsgTextBlock_SetJustification) == 0x000002, "Wrong size on HorizonDialogueMsgTextBlock_SetJustification");
static_assert(offsetof(HorizonDialogueMsgTextBlock_SetJustification, InJustification) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_SetJustification::InJustification' has a wrong offset!");
static_assert(offsetof(HorizonDialogueMsgTextBlock_SetJustification, bForce) == 0x000001, "Member 'HorizonDialogueMsgTextBlock_SetJustification::bForce' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.SetOpacity
// 0x0004 (0x0004 - 0x0000)
struct HorizonDialogueMsgTextBlock_SetOpacity final
{
public:
	float                                         InOpacity;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_SetOpacity) == 0x000004, "Wrong alignment on HorizonDialogueMsgTextBlock_SetOpacity");
static_assert(sizeof(HorizonDialogueMsgTextBlock_SetOpacity) == 0x000004, "Wrong size on HorizonDialogueMsgTextBlock_SetOpacity");
static_assert(offsetof(HorizonDialogueMsgTextBlock_SetOpacity, InOpacity) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_SetOpacity::InOpacity' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.SetRepeatDialogueMsgInterval
// 0x0004 (0x0004 - 0x0000)
struct HorizonDialogueMsgTextBlock_SetRepeatDialogueMsgInterval final
{
public:
	float                                         Interval;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_SetRepeatDialogueMsgInterval) == 0x000004, "Wrong alignment on HorizonDialogueMsgTextBlock_SetRepeatDialogueMsgInterval");
static_assert(sizeof(HorizonDialogueMsgTextBlock_SetRepeatDialogueMsgInterval) == 0x000004, "Wrong size on HorizonDialogueMsgTextBlock_SetRepeatDialogueMsgInterval");
static_assert(offsetof(HorizonDialogueMsgTextBlock_SetRepeatDialogueMsgInterval, Interval) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_SetRepeatDialogueMsgInterval::Interval' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.SetShadowColorAndOpacity
// 0x0014 (0x0014 - 0x0000)
struct HorizonDialogueMsgTextBlock_SetShadowColorAndOpacity final
{
public:
	struct FLinearColor                           InShadowColorAndOpacity;                           // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForce;                                            // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1170[0x3];                                     // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HorizonDialogueMsgTextBlock_SetShadowColorAndOpacity) == 0x000004, "Wrong alignment on HorizonDialogueMsgTextBlock_SetShadowColorAndOpacity");
static_assert(sizeof(HorizonDialogueMsgTextBlock_SetShadowColorAndOpacity) == 0x000014, "Wrong size on HorizonDialogueMsgTextBlock_SetShadowColorAndOpacity");
static_assert(offsetof(HorizonDialogueMsgTextBlock_SetShadowColorAndOpacity, InShadowColorAndOpacity) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_SetShadowColorAndOpacity::InShadowColorAndOpacity' has a wrong offset!");
static_assert(offsetof(HorizonDialogueMsgTextBlock_SetShadowColorAndOpacity, bForce) == 0x000010, "Member 'HorizonDialogueMsgTextBlock_SetShadowColorAndOpacity::bForce' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.SetShadowOffset
// 0x0018 (0x0018 - 0x0000)
struct HorizonDialogueMsgTextBlock_SetShadowOffset final
{
public:
	struct FVector2D                              InShadowOffset;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bForce;                                            // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1171[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HorizonDialogueMsgTextBlock_SetShadowOffset) == 0x000008, "Wrong alignment on HorizonDialogueMsgTextBlock_SetShadowOffset");
static_assert(sizeof(HorizonDialogueMsgTextBlock_SetShadowOffset) == 0x000018, "Wrong size on HorizonDialogueMsgTextBlock_SetShadowOffset");
static_assert(offsetof(HorizonDialogueMsgTextBlock_SetShadowOffset, InShadowOffset) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_SetShadowOffset::InShadowOffset' has a wrong offset!");
static_assert(offsetof(HorizonDialogueMsgTextBlock_SetShadowOffset, bForce) == 0x000010, "Member 'HorizonDialogueMsgTextBlock_SetShadowOffset::bForce' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.SetTextAndRebuildDialogue
// 0x0018 (0x0018 - 0x0000)
struct HorizonDialogueMsgTextBlock_SetTextAndRebuildDialogue final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_SetTextAndRebuildDialogue) == 0x000008, "Wrong alignment on HorizonDialogueMsgTextBlock_SetTextAndRebuildDialogue");
static_assert(sizeof(HorizonDialogueMsgTextBlock_SetTextAndRebuildDialogue) == 0x000018, "Wrong size on HorizonDialogueMsgTextBlock_SetTextAndRebuildDialogue");
static_assert(offsetof(HorizonDialogueMsgTextBlock_SetTextAndRebuildDialogue, InText) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_SetTextAndRebuildDialogue::InText' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.SetTextAndRebuildDialogueImmediately
// 0x0018 (0x0018 - 0x0000)
struct HorizonDialogueMsgTextBlock_SetTextAndRebuildDialogueImmediately final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_SetTextAndRebuildDialogueImmediately) == 0x000008, "Wrong alignment on HorizonDialogueMsgTextBlock_SetTextAndRebuildDialogueImmediately");
static_assert(sizeof(HorizonDialogueMsgTextBlock_SetTextAndRebuildDialogueImmediately) == 0x000018, "Wrong size on HorizonDialogueMsgTextBlock_SetTextAndRebuildDialogueImmediately");
static_assert(offsetof(HorizonDialogueMsgTextBlock_SetTextAndRebuildDialogueImmediately, InText) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_SetTextAndRebuildDialogueImmediately::InText' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.SetTextOverflowWrapMethod
// 0x0001 (0x0001 - 0x0000)
struct HorizonDialogueMsgTextBlock_SetTextOverflowWrapMethod final
{
public:
	EHorizonDialogueTextOverflowWrapMethod        InOverflowWrapMethod;                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_SetTextOverflowWrapMethod) == 0x000001, "Wrong alignment on HorizonDialogueMsgTextBlock_SetTextOverflowWrapMethod");
static_assert(sizeof(HorizonDialogueMsgTextBlock_SetTextOverflowWrapMethod) == 0x000001, "Wrong size on HorizonDialogueMsgTextBlock_SetTextOverflowWrapMethod");
static_assert(offsetof(HorizonDialogueMsgTextBlock_SetTextOverflowWrapMethod, InOverflowWrapMethod) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_SetTextOverflowWrapMethod::InOverflowWrapMethod' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.GetBlinkCursorWidget
// 0x0008 (0x0008 - 0x0000)
struct HorizonDialogueMsgTextBlock_GetBlinkCursorWidget final
{
public:
	class UHorizonFlipbookWidget*                 ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_GetBlinkCursorWidget) == 0x000008, "Wrong alignment on HorizonDialogueMsgTextBlock_GetBlinkCursorWidget");
static_assert(sizeof(HorizonDialogueMsgTextBlock_GetBlinkCursorWidget) == 0x000008, "Wrong size on HorizonDialogueMsgTextBlock_GetBlinkCursorWidget");
static_assert(offsetof(HorizonDialogueMsgTextBlock_GetBlinkCursorWidget, ReturnValue) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_GetBlinkCursorWidget::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.GetCurrentPageTextLength
// 0x0004 (0x0004 - 0x0000)
struct HorizonDialogueMsgTextBlock_GetCurrentPageTextLength final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_GetCurrentPageTextLength) == 0x000004, "Wrong alignment on HorizonDialogueMsgTextBlock_GetCurrentPageTextLength");
static_assert(sizeof(HorizonDialogueMsgTextBlock_GetCurrentPageTextLength) == 0x000004, "Wrong size on HorizonDialogueMsgTextBlock_GetCurrentPageTextLength");
static_assert(offsetof(HorizonDialogueMsgTextBlock_GetCurrentPageTextLength, ReturnValue) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_GetCurrentPageTextLength::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.GetJustification
// 0x0001 (0x0001 - 0x0000)
struct HorizonDialogueMsgTextBlock_GetJustification final
{
public:
	ETextJustify                                  ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_GetJustification) == 0x000001, "Wrong alignment on HorizonDialogueMsgTextBlock_GetJustification");
static_assert(sizeof(HorizonDialogueMsgTextBlock_GetJustification) == 0x000001, "Wrong size on HorizonDialogueMsgTextBlock_GetJustification");
static_assert(offsetof(HorizonDialogueMsgTextBlock_GetJustification, ReturnValue) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_GetJustification::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.GetNumLine
// 0x0004 (0x0004 - 0x0000)
struct HorizonDialogueMsgTextBlock_GetNumLine final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_GetNumLine) == 0x000004, "Wrong alignment on HorizonDialogueMsgTextBlock_GetNumLine");
static_assert(sizeof(HorizonDialogueMsgTextBlock_GetNumLine) == 0x000004, "Wrong size on HorizonDialogueMsgTextBlock_GetNumLine");
static_assert(offsetof(HorizonDialogueMsgTextBlock_GetNumLine, ReturnValue) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_GetNumLine::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.GetNumPage
// 0x0004 (0x0004 - 0x0000)
struct HorizonDialogueMsgTextBlock_GetNumPage final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_GetNumPage) == 0x000004, "Wrong alignment on HorizonDialogueMsgTextBlock_GetNumPage");
static_assert(sizeof(HorizonDialogueMsgTextBlock_GetNumPage) == 0x000004, "Wrong size on HorizonDialogueMsgTextBlock_GetNumPage");
static_assert(offsetof(HorizonDialogueMsgTextBlock_GetNumPage, ReturnValue) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_GetNumPage::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.GetPageTextByIndex
// 0x0020 (0x0020 - 0x0000)
struct HorizonDialogueMsgTextBlock_GetPageTextByIndex final
{
public:
	int32                                         PageIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1172[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_GetPageTextByIndex) == 0x000008, "Wrong alignment on HorizonDialogueMsgTextBlock_GetPageTextByIndex");
static_assert(sizeof(HorizonDialogueMsgTextBlock_GetPageTextByIndex) == 0x000020, "Wrong size on HorizonDialogueMsgTextBlock_GetPageTextByIndex");
static_assert(offsetof(HorizonDialogueMsgTextBlock_GetPageTextByIndex, PageIndex) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_GetPageTextByIndex::PageIndex' has a wrong offset!");
static_assert(offsetof(HorizonDialogueMsgTextBlock_GetPageTextByIndex, ReturnValue) == 0x000008, "Member 'HorizonDialogueMsgTextBlock_GetPageTextByIndex::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.GetText
// 0x0018 (0x0018 - 0x0000)
struct HorizonDialogueMsgTextBlock_GetText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_GetText) == 0x000008, "Wrong alignment on HorizonDialogueMsgTextBlock_GetText");
static_assert(sizeof(HorizonDialogueMsgTextBlock_GetText) == 0x000018, "Wrong size on HorizonDialogueMsgTextBlock_GetText");
static_assert(offsetof(HorizonDialogueMsgTextBlock_GetText, ReturnValue) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_GetText::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.GetTextLength
// 0x0004 (0x0004 - 0x0000)
struct HorizonDialogueMsgTextBlock_GetTextLength final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_GetTextLength) == 0x000004, "Wrong alignment on HorizonDialogueMsgTextBlock_GetTextLength");
static_assert(sizeof(HorizonDialogueMsgTextBlock_GetTextLength) == 0x000004, "Wrong size on HorizonDialogueMsgTextBlock_GetTextLength");
static_assert(offsetof(HorizonDialogueMsgTextBlock_GetTextLength, ReturnValue) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_GetTextLength::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.GetTextOverflowWrapMethod
// 0x0001 (0x0001 - 0x0000)
struct HorizonDialogueMsgTextBlock_GetTextOverflowWrapMethod final
{
public:
	EHorizonDialogueTextOverflowWrapMethod        ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_GetTextOverflowWrapMethod) == 0x000001, "Wrong alignment on HorizonDialogueMsgTextBlock_GetTextOverflowWrapMethod");
static_assert(sizeof(HorizonDialogueMsgTextBlock_GetTextOverflowWrapMethod) == 0x000001, "Wrong size on HorizonDialogueMsgTextBlock_GetTextOverflowWrapMethod");
static_assert(offsetof(HorizonDialogueMsgTextBlock_GetTextOverflowWrapMethod, ReturnValue) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_GetTextOverflowWrapMethod::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.IsDialogueMsgCompleted
// 0x0001 (0x0001 - 0x0000)
struct HorizonDialogueMsgTextBlock_IsDialogueMsgCompleted final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_IsDialogueMsgCompleted) == 0x000001, "Wrong alignment on HorizonDialogueMsgTextBlock_IsDialogueMsgCompleted");
static_assert(sizeof(HorizonDialogueMsgTextBlock_IsDialogueMsgCompleted) == 0x000001, "Wrong size on HorizonDialogueMsgTextBlock_IsDialogueMsgCompleted");
static_assert(offsetof(HorizonDialogueMsgTextBlock_IsDialogueMsgCompleted, ReturnValue) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_IsDialogueMsgCompleted::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonDialogueMsgTextBlock.IsDialogueMsgPageEnd
// 0x0001 (0x0001 - 0x0000)
struct HorizonDialogueMsgTextBlock_IsDialogueMsgPageEnd final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonDialogueMsgTextBlock_IsDialogueMsgPageEnd) == 0x000001, "Wrong alignment on HorizonDialogueMsgTextBlock_IsDialogueMsgPageEnd");
static_assert(sizeof(HorizonDialogueMsgTextBlock_IsDialogueMsgPageEnd) == 0x000001, "Wrong size on HorizonDialogueMsgTextBlock_IsDialogueMsgPageEnd");
static_assert(offsetof(HorizonDialogueMsgTextBlock_IsDialogueMsgPageEnd, ReturnValue) == 0x000000, "Member 'HorizonDialogueMsgTextBlock_IsDialogueMsgPageEnd::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonFileSystem.GetInstance
// 0x0008 (0x0008 - 0x0000)
struct HorizonFileSystem_GetInstance final
{
public:
	class UHorizonFileSystem*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonFileSystem_GetInstance) == 0x000008, "Wrong alignment on HorizonFileSystem_GetInstance");
static_assert(sizeof(HorizonFileSystem_GetInstance) == 0x000008, "Wrong size on HorizonFileSystem_GetInstance");
static_assert(offsetof(HorizonFileSystem_GetInstance, ReturnValue) == 0x000000, "Member 'HorizonFileSystem_GetInstance::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonFileSystem.CreateDirectoryRecursively
// 0x0010 (0x0010 - 0x0000)
struct HorizonFileSystem_CreateDirectoryRecursively final
{
public:
	class FString                                 InFolderToMake;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonFileSystem_CreateDirectoryRecursively) == 0x000008, "Wrong alignment on HorizonFileSystem_CreateDirectoryRecursively");
static_assert(sizeof(HorizonFileSystem_CreateDirectoryRecursively) == 0x000010, "Wrong size on HorizonFileSystem_CreateDirectoryRecursively");
static_assert(offsetof(HorizonFileSystem_CreateDirectoryRecursively, InFolderToMake) == 0x000000, "Member 'HorizonFileSystem_CreateDirectoryRecursively::InFolderToMake' has a wrong offset!");

// Function HorizonUI.HorizonFileSystem.LoadFont
// 0x0018 (0x0018 - 0x0000)
struct HorizonFileSystem_LoadFont final
{
public:
	class FString                                 InPackageFilePath;                                 // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFont*                                  ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonFileSystem_LoadFont) == 0x000008, "Wrong alignment on HorizonFileSystem_LoadFont");
static_assert(sizeof(HorizonFileSystem_LoadFont) == 0x000018, "Wrong size on HorizonFileSystem_LoadFont");
static_assert(offsetof(HorizonFileSystem_LoadFont, InPackageFilePath) == 0x000000, "Member 'HorizonFileSystem_LoadFont::InPackageFilePath' has a wrong offset!");
static_assert(offsetof(HorizonFileSystem_LoadFont, ReturnValue) == 0x000010, "Member 'HorizonFileSystem_LoadFont::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonFileSystem.LoadMaterial
// 0x0018 (0x0018 - 0x0000)
struct HorizonFileSystem_LoadMaterial final
{
public:
	class FString                                 InPackageFilePath;                                 // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterial*                              ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonFileSystem_LoadMaterial) == 0x000008, "Wrong alignment on HorizonFileSystem_LoadMaterial");
static_assert(sizeof(HorizonFileSystem_LoadMaterial) == 0x000018, "Wrong size on HorizonFileSystem_LoadMaterial");
static_assert(offsetof(HorizonFileSystem_LoadMaterial, InPackageFilePath) == 0x000000, "Member 'HorizonFileSystem_LoadMaterial::InPackageFilePath' has a wrong offset!");
static_assert(offsetof(HorizonFileSystem_LoadMaterial, ReturnValue) == 0x000010, "Member 'HorizonFileSystem_LoadMaterial::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonFileSystem.LoadPaperFlipbook
// 0x0018 (0x0018 - 0x0000)
struct HorizonFileSystem_LoadPaperFlipbook final
{
public:
	class FString                                 InPackageFilePath;                                 // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPaperFlipbook*                         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonFileSystem_LoadPaperFlipbook) == 0x000008, "Wrong alignment on HorizonFileSystem_LoadPaperFlipbook");
static_assert(sizeof(HorizonFileSystem_LoadPaperFlipbook) == 0x000018, "Wrong size on HorizonFileSystem_LoadPaperFlipbook");
static_assert(offsetof(HorizonFileSystem_LoadPaperFlipbook, InPackageFilePath) == 0x000000, "Member 'HorizonFileSystem_LoadPaperFlipbook::InPackageFilePath' has a wrong offset!");
static_assert(offsetof(HorizonFileSystem_LoadPaperFlipbook, ReturnValue) == 0x000010, "Member 'HorizonFileSystem_LoadPaperFlipbook::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonFileSystem.LoadSound
// 0x0018 (0x0018 - 0x0000)
struct HorizonFileSystem_LoadSound final
{
public:
	class FString                                 InPackageFilePath;                                 // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                             ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonFileSystem_LoadSound) == 0x000008, "Wrong alignment on HorizonFileSystem_LoadSound");
static_assert(sizeof(HorizonFileSystem_LoadSound) == 0x000018, "Wrong size on HorizonFileSystem_LoadSound");
static_assert(offsetof(HorizonFileSystem_LoadSound, InPackageFilePath) == 0x000000, "Member 'HorizonFileSystem_LoadSound::InPackageFilePath' has a wrong offset!");
static_assert(offsetof(HorizonFileSystem_LoadSound, ReturnValue) == 0x000010, "Member 'HorizonFileSystem_LoadSound::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonFileSystem.LoadTexture2D
// 0x0020 (0x0020 - 0x0000)
struct HorizonFileSystem_LoadTexture2D final
{
public:
	class FString                                 InPackageFilePath;                                 // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutWidth;                                          // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutHeight;                                         // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonFileSystem_LoadTexture2D) == 0x000008, "Wrong alignment on HorizonFileSystem_LoadTexture2D");
static_assert(sizeof(HorizonFileSystem_LoadTexture2D) == 0x000020, "Wrong size on HorizonFileSystem_LoadTexture2D");
static_assert(offsetof(HorizonFileSystem_LoadTexture2D, InPackageFilePath) == 0x000000, "Member 'HorizonFileSystem_LoadTexture2D::InPackageFilePath' has a wrong offset!");
static_assert(offsetof(HorizonFileSystem_LoadTexture2D, OutWidth) == 0x000010, "Member 'HorizonFileSystem_LoadTexture2D::OutWidth' has a wrong offset!");
static_assert(offsetof(HorizonFileSystem_LoadTexture2D, OutHeight) == 0x000014, "Member 'HorizonFileSystem_LoadTexture2D::OutHeight' has a wrong offset!");
static_assert(offsetof(HorizonFileSystem_LoadTexture2D, ReturnValue) == 0x000018, "Member 'HorizonFileSystem_LoadTexture2D::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonFileSystem.LoadUAsset
// 0x0018 (0x0018 - 0x0000)
struct HorizonFileSystem_LoadUAsset final
{
public:
	class FString                                 InPackageFilePath;                                 // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonFileSystem_LoadUAsset) == 0x000008, "Wrong alignment on HorizonFileSystem_LoadUAsset");
static_assert(sizeof(HorizonFileSystem_LoadUAsset) == 0x000018, "Wrong size on HorizonFileSystem_LoadUAsset");
static_assert(offsetof(HorizonFileSystem_LoadUAsset, InPackageFilePath) == 0x000000, "Member 'HorizonFileSystem_LoadUAsset::InPackageFilePath' has a wrong offset!");
static_assert(offsetof(HorizonFileSystem_LoadUAsset, ReturnValue) == 0x000010, "Member 'HorizonFileSystem_LoadUAsset::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonFlipbookWidget.GetCurrentAnimationDuration
// 0x0004 (0x0004 - 0x0000)
struct HorizonFlipbookWidget_GetCurrentAnimationDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonFlipbookWidget_GetCurrentAnimationDuration) == 0x000004, "Wrong alignment on HorizonFlipbookWidget_GetCurrentAnimationDuration");
static_assert(sizeof(HorizonFlipbookWidget_GetCurrentAnimationDuration) == 0x000004, "Wrong size on HorizonFlipbookWidget_GetCurrentAnimationDuration");
static_assert(offsetof(HorizonFlipbookWidget_GetCurrentAnimationDuration, ReturnValue) == 0x000000, "Member 'HorizonFlipbookWidget_GetCurrentAnimationDuration::ReturnValue' has a wrong offset!");

// DelegateFunction HorizonUI.HorizonFlipbookWidget.OnHorizonFlipbookStartEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct HorizonFlipbookWidget_OnHorizonFlipbookStartEvent__DelegateSignature final
{
public:
	int32                                         InCurrentNumOfLoop;                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonFlipbookWidget_OnHorizonFlipbookStartEvent__DelegateSignature) == 0x000004, "Wrong alignment on HorizonFlipbookWidget_OnHorizonFlipbookStartEvent__DelegateSignature");
static_assert(sizeof(HorizonFlipbookWidget_OnHorizonFlipbookStartEvent__DelegateSignature) == 0x000004, "Wrong size on HorizonFlipbookWidget_OnHorizonFlipbookStartEvent__DelegateSignature");
static_assert(offsetof(HorizonFlipbookWidget_OnHorizonFlipbookStartEvent__DelegateSignature, InCurrentNumOfLoop) == 0x000000, "Member 'HorizonFlipbookWidget_OnHorizonFlipbookStartEvent__DelegateSignature::InCurrentNumOfLoop' has a wrong offset!");

// Function HorizonUI.HorizonFlipbookWidget.SetCurrentAnimationDuration
// 0x0004 (0x0004 - 0x0000)
struct HorizonFlipbookWidget_SetCurrentAnimationDuration final
{
public:
	float                                         InDuration;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonFlipbookWidget_SetCurrentAnimationDuration) == 0x000004, "Wrong alignment on HorizonFlipbookWidget_SetCurrentAnimationDuration");
static_assert(sizeof(HorizonFlipbookWidget_SetCurrentAnimationDuration) == 0x000004, "Wrong size on HorizonFlipbookWidget_SetCurrentAnimationDuration");
static_assert(offsetof(HorizonFlipbookWidget_SetCurrentAnimationDuration, InDuration) == 0x000000, "Member 'HorizonFlipbookWidget_SetCurrentAnimationDuration::InDuration' has a wrong offset!");

// Function HorizonUI.HorizonFlipbookWidget.SetFlipbook
// 0x0008 (0x0008 - 0x0000)
struct HorizonFlipbookWidget_SetFlipbook final
{
public:
	class UPaperFlipbook*                         InFlipbook;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonFlipbookWidget_SetFlipbook) == 0x000008, "Wrong alignment on HorizonFlipbookWidget_SetFlipbook");
static_assert(sizeof(HorizonFlipbookWidget_SetFlipbook) == 0x000008, "Wrong size on HorizonFlipbookWidget_SetFlipbook");
static_assert(offsetof(HorizonFlipbookWidget_SetFlipbook, InFlipbook) == 0x000000, "Member 'HorizonFlipbookWidget_SetFlipbook::InFlipbook' has a wrong offset!");

// Function HorizonUI.HorizonMultiToggleButtonWidget.GetCurrentStateIndex
// 0x0004 (0x0004 - 0x0000)
struct HorizonMultiToggleButtonWidget_GetCurrentStateIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonMultiToggleButtonWidget_GetCurrentStateIndex) == 0x000004, "Wrong alignment on HorizonMultiToggleButtonWidget_GetCurrentStateIndex");
static_assert(sizeof(HorizonMultiToggleButtonWidget_GetCurrentStateIndex) == 0x000004, "Wrong size on HorizonMultiToggleButtonWidget_GetCurrentStateIndex");
static_assert(offsetof(HorizonMultiToggleButtonWidget_GetCurrentStateIndex, ReturnValue) == 0x000000, "Member 'HorizonMultiToggleButtonWidget_GetCurrentStateIndex::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonMultiToggleButtonWidget.GetLoopToggleState
// 0x0001 (0x0001 - 0x0000)
struct HorizonMultiToggleButtonWidget_GetLoopToggleState final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonMultiToggleButtonWidget_GetLoopToggleState) == 0x000001, "Wrong alignment on HorizonMultiToggleButtonWidget_GetLoopToggleState");
static_assert(sizeof(HorizonMultiToggleButtonWidget_GetLoopToggleState) == 0x000001, "Wrong size on HorizonMultiToggleButtonWidget_GetLoopToggleState");
static_assert(offsetof(HorizonMultiToggleButtonWidget_GetLoopToggleState, ReturnValue) == 0x000000, "Member 'HorizonMultiToggleButtonWidget_GetLoopToggleState::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonMultiToggleButtonWidget.GetToggleState_NextIndex
// 0x0004 (0x0004 - 0x0000)
struct HorizonMultiToggleButtonWidget_GetToggleState_NextIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonMultiToggleButtonWidget_GetToggleState_NextIndex) == 0x000004, "Wrong alignment on HorizonMultiToggleButtonWidget_GetToggleState_NextIndex");
static_assert(sizeof(HorizonMultiToggleButtonWidget_GetToggleState_NextIndex) == 0x000004, "Wrong size on HorizonMultiToggleButtonWidget_GetToggleState_NextIndex");
static_assert(offsetof(HorizonMultiToggleButtonWidget_GetToggleState_NextIndex, ReturnValue) == 0x000000, "Member 'HorizonMultiToggleButtonWidget_GetToggleState_NextIndex::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonMultiToggleButtonWidget.GetToggleState_PrevIndex
// 0x0004 (0x0004 - 0x0000)
struct HorizonMultiToggleButtonWidget_GetToggleState_PrevIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonMultiToggleButtonWidget_GetToggleState_PrevIndex) == 0x000004, "Wrong alignment on HorizonMultiToggleButtonWidget_GetToggleState_PrevIndex");
static_assert(sizeof(HorizonMultiToggleButtonWidget_GetToggleState_PrevIndex) == 0x000004, "Wrong size on HorizonMultiToggleButtonWidget_GetToggleState_PrevIndex");
static_assert(offsetof(HorizonMultiToggleButtonWidget_GetToggleState_PrevIndex, ReturnValue) == 0x000000, "Member 'HorizonMultiToggleButtonWidget_GetToggleState_PrevIndex::ReturnValue' has a wrong offset!");

// DelegateFunction HorizonUI.HorizonMultiToggleButtonWidget.OnHorizonMultiToggleButtonEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct HorizonMultiToggleButtonWidget_OnHorizonMultiToggleButtonEvent__DelegateSignature final
{
public:
	int32                                         InCurrentStateIndex;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InToStateIndex;                                    // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonMultiToggleButtonWidget_OnHorizonMultiToggleButtonEvent__DelegateSignature) == 0x000004, "Wrong alignment on HorizonMultiToggleButtonWidget_OnHorizonMultiToggleButtonEvent__DelegateSignature");
static_assert(sizeof(HorizonMultiToggleButtonWidget_OnHorizonMultiToggleButtonEvent__DelegateSignature) == 0x000008, "Wrong size on HorizonMultiToggleButtonWidget_OnHorizonMultiToggleButtonEvent__DelegateSignature");
static_assert(offsetof(HorizonMultiToggleButtonWidget_OnHorizonMultiToggleButtonEvent__DelegateSignature, InCurrentStateIndex) == 0x000000, "Member 'HorizonMultiToggleButtonWidget_OnHorizonMultiToggleButtonEvent__DelegateSignature::InCurrentStateIndex' has a wrong offset!");
static_assert(offsetof(HorizonMultiToggleButtonWidget_OnHorizonMultiToggleButtonEvent__DelegateSignature, InToStateIndex) == 0x000004, "Member 'HorizonMultiToggleButtonWidget_OnHorizonMultiToggleButtonEvent__DelegateSignature::InToStateIndex' has a wrong offset!");

// DelegateFunction HorizonUI.HorizonMultiToggleButtonWidget.OnHorizonMultiToggleButtonSyncEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct HorizonMultiToggleButtonWidget_OnHorizonMultiToggleButtonSyncEvent__DelegateSignature final
{
public:
	int32                                         InCurrentStateIndex;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonMultiToggleButtonWidget_OnHorizonMultiToggleButtonSyncEvent__DelegateSignature) == 0x000004, "Wrong alignment on HorizonMultiToggleButtonWidget_OnHorizonMultiToggleButtonSyncEvent__DelegateSignature");
static_assert(sizeof(HorizonMultiToggleButtonWidget_OnHorizonMultiToggleButtonSyncEvent__DelegateSignature) == 0x000004, "Wrong size on HorizonMultiToggleButtonWidget_OnHorizonMultiToggleButtonSyncEvent__DelegateSignature");
static_assert(offsetof(HorizonMultiToggleButtonWidget_OnHorizonMultiToggleButtonSyncEvent__DelegateSignature, InCurrentStateIndex) == 0x000000, "Member 'HorizonMultiToggleButtonWidget_OnHorizonMultiToggleButtonSyncEvent__DelegateSignature::InCurrentStateIndex' has a wrong offset!");

// Function HorizonUI.HorizonMultiToggleButtonWidget.SetCurrentStateIndex
// 0x0004 (0x0004 - 0x0000)
struct HorizonMultiToggleButtonWidget_SetCurrentStateIndex final
{
public:
	int32                                         InStateIndex;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonMultiToggleButtonWidget_SetCurrentStateIndex) == 0x000004, "Wrong alignment on HorizonMultiToggleButtonWidget_SetCurrentStateIndex");
static_assert(sizeof(HorizonMultiToggleButtonWidget_SetCurrentStateIndex) == 0x000004, "Wrong size on HorizonMultiToggleButtonWidget_SetCurrentStateIndex");
static_assert(offsetof(HorizonMultiToggleButtonWidget_SetCurrentStateIndex, InStateIndex) == 0x000000, "Member 'HorizonMultiToggleButtonWidget_SetCurrentStateIndex::InStateIndex' has a wrong offset!");

// Function HorizonUI.HorizonMultiToggleButtonWidget.SetLoopToggleState
// 0x0001 (0x0001 - 0x0000)
struct HorizonMultiToggleButtonWidget_SetLoopToggleState final
{
public:
	bool                                          InLoopToggleState;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonMultiToggleButtonWidget_SetLoopToggleState) == 0x000001, "Wrong alignment on HorizonMultiToggleButtonWidget_SetLoopToggleState");
static_assert(sizeof(HorizonMultiToggleButtonWidget_SetLoopToggleState) == 0x000001, "Wrong size on HorizonMultiToggleButtonWidget_SetLoopToggleState");
static_assert(offsetof(HorizonMultiToggleButtonWidget_SetLoopToggleState, InLoopToggleState) == 0x000000, "Member 'HorizonMultiToggleButtonWidget_SetLoopToggleState::InLoopToggleState' has a wrong offset!");

// Function HorizonUI.HorizonRadioButtonUserWidget.BP_OnCheckStateChanged
// 0x0001 (0x0001 - 0x0000)
struct HorizonRadioButtonUserWidget_BP_OnCheckStateChanged final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonRadioButtonUserWidget_BP_OnCheckStateChanged) == 0x000001, "Wrong alignment on HorizonRadioButtonUserWidget_BP_OnCheckStateChanged");
static_assert(sizeof(HorizonRadioButtonUserWidget_BP_OnCheckStateChanged) == 0x000001, "Wrong size on HorizonRadioButtonUserWidget_BP_OnCheckStateChanged");
static_assert(offsetof(HorizonRadioButtonUserWidget_BP_OnCheckStateChanged, bIsChecked) == 0x000000, "Member 'HorizonRadioButtonUserWidget_BP_OnCheckStateChanged::bIsChecked' has a wrong offset!");

// Function HorizonUI.HorizonRadioButtonUserWidget.NativeOnCheckStateChanged
// 0x0001 (0x0001 - 0x0000)
struct HorizonRadioButtonUserWidget_NativeOnCheckStateChanged final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonRadioButtonUserWidget_NativeOnCheckStateChanged) == 0x000001, "Wrong alignment on HorizonRadioButtonUserWidget_NativeOnCheckStateChanged");
static_assert(sizeof(HorizonRadioButtonUserWidget_NativeOnCheckStateChanged) == 0x000001, "Wrong size on HorizonRadioButtonUserWidget_NativeOnCheckStateChanged");
static_assert(offsetof(HorizonRadioButtonUserWidget_NativeOnCheckStateChanged, bIsChecked) == 0x000000, "Member 'HorizonRadioButtonUserWidget_NativeOnCheckStateChanged::bIsChecked' has a wrong offset!");

// Function HorizonUI.HorizonTextBlock.GetJustification
// 0x0001 (0x0001 - 0x0000)
struct HorizonTextBlock_GetJustification final
{
public:
	ETextJustify                                  ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonTextBlock_GetJustification) == 0x000001, "Wrong alignment on HorizonTextBlock_GetJustification");
static_assert(sizeof(HorizonTextBlock_GetJustification) == 0x000001, "Wrong size on HorizonTextBlock_GetJustification");
static_assert(offsetof(HorizonTextBlock_GetJustification, ReturnValue) == 0x000000, "Member 'HorizonTextBlock_GetJustification::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonTileView.BP_GetEntryWidgetFromItem
// 0x0010 (0x0010 - 0x0000)
struct HorizonTileView_BP_GetEntryWidgetFromItem final
{
public:
	class UObject*                                InItem;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHorizonListViewItemWidget*             ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonTileView_BP_GetEntryWidgetFromItem) == 0x000008, "Wrong alignment on HorizonTileView_BP_GetEntryWidgetFromItem");
static_assert(sizeof(HorizonTileView_BP_GetEntryWidgetFromItem) == 0x000010, "Wrong size on HorizonTileView_BP_GetEntryWidgetFromItem");
static_assert(offsetof(HorizonTileView_BP_GetEntryWidgetFromItem, InItem) == 0x000000, "Member 'HorizonTileView_BP_GetEntryWidgetFromItem::InItem' has a wrong offset!");
static_assert(offsetof(HorizonTileView_BP_GetEntryWidgetFromItem, ReturnValue) == 0x000008, "Member 'HorizonTileView_BP_GetEntryWidgetFromItem::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonTileView.GetNumGeneratedChildren
// 0x0004 (0x0004 - 0x0000)
struct HorizonTileView_GetNumGeneratedChildren final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonTileView_GetNumGeneratedChildren) == 0x000004, "Wrong alignment on HorizonTileView_GetNumGeneratedChildren");
static_assert(sizeof(HorizonTileView_GetNumGeneratedChildren) == 0x000004, "Wrong size on HorizonTileView_GetNumGeneratedChildren");
static_assert(offsetof(HorizonTileView_GetNumGeneratedChildren, ReturnValue) == 0x000000, "Member 'HorizonTileView_GetNumGeneratedChildren::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonTileView.IsFocusable
// 0x0001 (0x0001 - 0x0000)
struct HorizonTileView_IsFocusable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonTileView_IsFocusable) == 0x000001, "Wrong alignment on HorizonTileView_IsFocusable");
static_assert(sizeof(HorizonTileView_IsFocusable) == 0x000001, "Wrong size on HorizonTileView_IsFocusable");
static_assert(offsetof(HorizonTileView_IsFocusable, ReturnValue) == 0x000000, "Member 'HorizonTileView_IsFocusable::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonTileView.IsPendingRefresh
// 0x0001 (0x0001 - 0x0000)
struct HorizonTileView_IsPendingRefresh final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonTileView_IsPendingRefresh) == 0x000001, "Wrong alignment on HorizonTileView_IsPendingRefresh");
static_assert(sizeof(HorizonTileView_IsPendingRefresh) == 0x000001, "Wrong size on HorizonTileView_IsPendingRefresh");
static_assert(offsetof(HorizonTileView_IsPendingRefresh, ReturnValue) == 0x000000, "Member 'HorizonTileView_IsPendingRefresh::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonTileView.NavigateToAndSelectIndex
// 0x0004 (0x0004 - 0x0000)
struct HorizonTileView_NavigateToAndSelectIndex final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonTileView_NavigateToAndSelectIndex) == 0x000004, "Wrong alignment on HorizonTileView_NavigateToAndSelectIndex");
static_assert(sizeof(HorizonTileView_NavigateToAndSelectIndex) == 0x000004, "Wrong size on HorizonTileView_NavigateToAndSelectIndex");
static_assert(offsetof(HorizonTileView_NavigateToAndSelectIndex, InIndex) == 0x000000, "Member 'HorizonTileView_NavigateToAndSelectIndex::InIndex' has a wrong offset!");

// DelegateFunction HorizonUI.HorizonTileView.OnInitListItemEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct HorizonTileView_OnInitListItemEvent__DelegateSignature final
{
public:
	class UHorizonTileView*                       InTileView;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonTileView_OnInitListItemEvent__DelegateSignature) == 0x000008, "Wrong alignment on HorizonTileView_OnInitListItemEvent__DelegateSignature");
static_assert(sizeof(HorizonTileView_OnInitListItemEvent__DelegateSignature) == 0x000008, "Wrong size on HorizonTileView_OnInitListItemEvent__DelegateSignature");
static_assert(offsetof(HorizonTileView_OnInitListItemEvent__DelegateSignature, InTileView) == 0x000000, "Member 'HorizonTileView_OnInitListItemEvent__DelegateSignature::InTileView' has a wrong offset!");

// DelegateFunction HorizonUI.HorizonTileView.OnItemEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct HorizonTileView_OnItemEvent__DelegateSignature final
{
public:
	class UObject*                                InItem;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonTileView_OnItemEvent__DelegateSignature) == 0x000008, "Wrong alignment on HorizonTileView_OnItemEvent__DelegateSignature");
static_assert(sizeof(HorizonTileView_OnItemEvent__DelegateSignature) == 0x000008, "Wrong size on HorizonTileView_OnItemEvent__DelegateSignature");
static_assert(offsetof(HorizonTileView_OnItemEvent__DelegateSignature, InItem) == 0x000000, "Member 'HorizonTileView_OnItemEvent__DelegateSignature::InItem' has a wrong offset!");

// Function HorizonUI.HorizonTileView.RerouteItemClicked
// 0x0008 (0x0008 - 0x0000)
struct HorizonTileView_RerouteItemClicked final
{
public:
	class UObject*                                InItem;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonTileView_RerouteItemClicked) == 0x000008, "Wrong alignment on HorizonTileView_RerouteItemClicked");
static_assert(sizeof(HorizonTileView_RerouteItemClicked) == 0x000008, "Wrong size on HorizonTileView_RerouteItemClicked");
static_assert(offsetof(HorizonTileView_RerouteItemClicked, InItem) == 0x000000, "Member 'HorizonTileView_RerouteItemClicked::InItem' has a wrong offset!");

// Function HorizonUI.HorizonTileView.RerouteItemHovered
// 0x0008 (0x0008 - 0x0000)
struct HorizonTileView_RerouteItemHovered final
{
public:
	class UObject*                                InItem;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonTileView_RerouteItemHovered) == 0x000008, "Wrong alignment on HorizonTileView_RerouteItemHovered");
static_assert(sizeof(HorizonTileView_RerouteItemHovered) == 0x000008, "Wrong size on HorizonTileView_RerouteItemHovered");
static_assert(offsetof(HorizonTileView_RerouteItemHovered, InItem) == 0x000000, "Member 'HorizonTileView_RerouteItemHovered::InItem' has a wrong offset!");

// Function HorizonUI.HorizonTileView.RerouteItemPressed
// 0x0008 (0x0008 - 0x0000)
struct HorizonTileView_RerouteItemPressed final
{
public:
	class UObject*                                InItem;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonTileView_RerouteItemPressed) == 0x000008, "Wrong alignment on HorizonTileView_RerouteItemPressed");
static_assert(sizeof(HorizonTileView_RerouteItemPressed) == 0x000008, "Wrong size on HorizonTileView_RerouteItemPressed");
static_assert(offsetof(HorizonTileView_RerouteItemPressed, InItem) == 0x000000, "Member 'HorizonTileView_RerouteItemPressed::InItem' has a wrong offset!");

// Function HorizonUI.HorizonTileView.RerouteItemReleased
// 0x0008 (0x0008 - 0x0000)
struct HorizonTileView_RerouteItemReleased final
{
public:
	class UObject*                                InItem;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonTileView_RerouteItemReleased) == 0x000008, "Wrong alignment on HorizonTileView_RerouteItemReleased");
static_assert(sizeof(HorizonTileView_RerouteItemReleased) == 0x000008, "Wrong size on HorizonTileView_RerouteItemReleased");
static_assert(offsetof(HorizonTileView_RerouteItemReleased, InItem) == 0x000000, "Member 'HorizonTileView_RerouteItemReleased::InItem' has a wrong offset!");

// Function HorizonUI.HorizonTileView.RerouteItemUnhovered
// 0x0008 (0x0008 - 0x0000)
struct HorizonTileView_RerouteItemUnhovered final
{
public:
	class UObject*                                InItem;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonTileView_RerouteItemUnhovered) == 0x000008, "Wrong alignment on HorizonTileView_RerouteItemUnhovered");
static_assert(sizeof(HorizonTileView_RerouteItemUnhovered) == 0x000008, "Wrong size on HorizonTileView_RerouteItemUnhovered");
static_assert(offsetof(HorizonTileView_RerouteItemUnhovered, InItem) == 0x000000, "Member 'HorizonTileView_RerouteItemUnhovered::InItem' has a wrong offset!");

// Function HorizonUI.HorizonWidgetFunctionLibrary.GetInputMode
// 0x0010 (0x0010 - 0x0000)
struct HorizonWidgetFunctionLibrary_GetInputMode final
{
public:
	const class APlayerController*                InPC;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHorizonUIInputMode                           ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1186[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HorizonWidgetFunctionLibrary_GetInputMode) == 0x000008, "Wrong alignment on HorizonWidgetFunctionLibrary_GetInputMode");
static_assert(sizeof(HorizonWidgetFunctionLibrary_GetInputMode) == 0x000010, "Wrong size on HorizonWidgetFunctionLibrary_GetInputMode");
static_assert(offsetof(HorizonWidgetFunctionLibrary_GetInputMode, InPC) == 0x000000, "Member 'HorizonWidgetFunctionLibrary_GetInputMode::InPC' has a wrong offset!");
static_assert(offsetof(HorizonWidgetFunctionLibrary_GetInputMode, ReturnValue) == 0x000008, "Member 'HorizonWidgetFunctionLibrary_GetInputMode::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonWidgetFunctionLibrary.GetParentCanvasPanelSlot
// 0x0010 (0x0010 - 0x0000)
struct HorizonWidgetFunctionLibrary_GetParentCanvasPanelSlot final
{
public:
	class UWidget*                                PWidget;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanelSlot*                       ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonWidgetFunctionLibrary_GetParentCanvasPanelSlot) == 0x000008, "Wrong alignment on HorizonWidgetFunctionLibrary_GetParentCanvasPanelSlot");
static_assert(sizeof(HorizonWidgetFunctionLibrary_GetParentCanvasPanelSlot) == 0x000010, "Wrong size on HorizonWidgetFunctionLibrary_GetParentCanvasPanelSlot");
static_assert(offsetof(HorizonWidgetFunctionLibrary_GetParentCanvasPanelSlot, PWidget) == 0x000000, "Member 'HorizonWidgetFunctionLibrary_GetParentCanvasPanelSlot::PWidget' has a wrong offset!");
static_assert(offsetof(HorizonWidgetFunctionLibrary_GetParentCanvasPanelSlot, ReturnValue) == 0x000008, "Member 'HorizonWidgetFunctionLibrary_GetParentCanvasPanelSlot::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonWidgetFunctionLibrary.GetUserIndex
// 0x0010 (0x0010 - 0x0000)
struct HorizonWidgetFunctionLibrary_GetUserIndex final
{
public:
	class UWidget*                                InWidget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1187[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HorizonWidgetFunctionLibrary_GetUserIndex) == 0x000008, "Wrong alignment on HorizonWidgetFunctionLibrary_GetUserIndex");
static_assert(sizeof(HorizonWidgetFunctionLibrary_GetUserIndex) == 0x000010, "Wrong size on HorizonWidgetFunctionLibrary_GetUserIndex");
static_assert(offsetof(HorizonWidgetFunctionLibrary_GetUserIndex, InWidget) == 0x000000, "Member 'HorizonWidgetFunctionLibrary_GetUserIndex::InWidget' has a wrong offset!");
static_assert(offsetof(HorizonWidgetFunctionLibrary_GetUserIndex, ReturnValue) == 0x000008, "Member 'HorizonWidgetFunctionLibrary_GetUserIndex::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonWidgetFunctionLibrary.GetUserWidgetAnimation
// 0x0018 (0x0018 - 0x0000)
struct HorizonWidgetFunctionLibrary_GetUserWidgetAnimation final
{
public:
	class UUserWidget*                            PUserWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AnimeName;                                         // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                       ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonWidgetFunctionLibrary_GetUserWidgetAnimation) == 0x000008, "Wrong alignment on HorizonWidgetFunctionLibrary_GetUserWidgetAnimation");
static_assert(sizeof(HorizonWidgetFunctionLibrary_GetUserWidgetAnimation) == 0x000018, "Wrong size on HorizonWidgetFunctionLibrary_GetUserWidgetAnimation");
static_assert(offsetof(HorizonWidgetFunctionLibrary_GetUserWidgetAnimation, PUserWidget) == 0x000000, "Member 'HorizonWidgetFunctionLibrary_GetUserWidgetAnimation::PUserWidget' has a wrong offset!");
static_assert(offsetof(HorizonWidgetFunctionLibrary_GetUserWidgetAnimation, AnimeName) == 0x000008, "Member 'HorizonWidgetFunctionLibrary_GetUserWidgetAnimation::AnimeName' has a wrong offset!");
static_assert(offsetof(HorizonWidgetFunctionLibrary_GetUserWidgetAnimation, ReturnValue) == 0x000010, "Member 'HorizonWidgetFunctionLibrary_GetUserWidgetAnimation::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonWidgetFunctionLibrary.GetWidgetFromNameRecursively
// 0x0018 (0x0018 - 0x0000)
struct HorizonWidgetFunctionLibrary_GetWidgetFromNameRecursively final
{
public:
	class UUserWidget*                            PUserWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   InWidgetName;                                      // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                ReturnValue;                                       // 0x0010(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonWidgetFunctionLibrary_GetWidgetFromNameRecursively) == 0x000008, "Wrong alignment on HorizonWidgetFunctionLibrary_GetWidgetFromNameRecursively");
static_assert(sizeof(HorizonWidgetFunctionLibrary_GetWidgetFromNameRecursively) == 0x000018, "Wrong size on HorizonWidgetFunctionLibrary_GetWidgetFromNameRecursively");
static_assert(offsetof(HorizonWidgetFunctionLibrary_GetWidgetFromNameRecursively, PUserWidget) == 0x000000, "Member 'HorizonWidgetFunctionLibrary_GetWidgetFromNameRecursively::PUserWidget' has a wrong offset!");
static_assert(offsetof(HorizonWidgetFunctionLibrary_GetWidgetFromNameRecursively, InWidgetName) == 0x000008, "Member 'HorizonWidgetFunctionLibrary_GetWidgetFromNameRecursively::InWidgetName' has a wrong offset!");
static_assert(offsetof(HorizonWidgetFunctionLibrary_GetWidgetFromNameRecursively, ReturnValue) == 0x000010, "Member 'HorizonWidgetFunctionLibrary_GetWidgetFromNameRecursively::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonWidgetFunctionLibrary.IsAlphabetic
// 0x0008 (0x0008 - 0x0000)
struct HorizonWidgetFunctionLibrary_IsAlphabetic final
{
public:
	int32                                         InCodePoint;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1188[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HorizonWidgetFunctionLibrary_IsAlphabetic) == 0x000004, "Wrong alignment on HorizonWidgetFunctionLibrary_IsAlphabetic");
static_assert(sizeof(HorizonWidgetFunctionLibrary_IsAlphabetic) == 0x000008, "Wrong size on HorizonWidgetFunctionLibrary_IsAlphabetic");
static_assert(offsetof(HorizonWidgetFunctionLibrary_IsAlphabetic, InCodePoint) == 0x000000, "Member 'HorizonWidgetFunctionLibrary_IsAlphabetic::InCodePoint' has a wrong offset!");
static_assert(offsetof(HorizonWidgetFunctionLibrary_IsAlphabetic, ReturnValue) == 0x000004, "Member 'HorizonWidgetFunctionLibrary_IsAlphabetic::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonWidgetFunctionLibrary.IsIdeographic
// 0x0008 (0x0008 - 0x0000)
struct HorizonWidgetFunctionLibrary_IsIdeographic final
{
public:
	int32                                         InCodePoint;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1189[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HorizonWidgetFunctionLibrary_IsIdeographic) == 0x000004, "Wrong alignment on HorizonWidgetFunctionLibrary_IsIdeographic");
static_assert(sizeof(HorizonWidgetFunctionLibrary_IsIdeographic) == 0x000008, "Wrong size on HorizonWidgetFunctionLibrary_IsIdeographic");
static_assert(offsetof(HorizonWidgetFunctionLibrary_IsIdeographic, InCodePoint) == 0x000000, "Member 'HorizonWidgetFunctionLibrary_IsIdeographic::InCodePoint' has a wrong offset!");
static_assert(offsetof(HorizonWidgetFunctionLibrary_IsIdeographic, ReturnValue) == 0x000004, "Member 'HorizonWidgetFunctionLibrary_IsIdeographic::ReturnValue' has a wrong offset!");

// Function HorizonUI.HorizonWidgetFunctionLibrary.SetInputMode
// 0x0020 (0x0020 - 0x0000)
struct HorizonWidgetFunctionLibrary_SetInputMode final
{
public:
	class APlayerController*                      InPC;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHorizonUIInputMode                           InInputMode;                                       // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_118A[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                InWidgetToFocus;                                   // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMouseLockMode                                InMouseLockMode;                                   // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInHideCursorDuringCapture;                        // 0x0019(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_118B[0x6];                                     // 0x001A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HorizonWidgetFunctionLibrary_SetInputMode) == 0x000008, "Wrong alignment on HorizonWidgetFunctionLibrary_SetInputMode");
static_assert(sizeof(HorizonWidgetFunctionLibrary_SetInputMode) == 0x000020, "Wrong size on HorizonWidgetFunctionLibrary_SetInputMode");
static_assert(offsetof(HorizonWidgetFunctionLibrary_SetInputMode, InPC) == 0x000000, "Member 'HorizonWidgetFunctionLibrary_SetInputMode::InPC' has a wrong offset!");
static_assert(offsetof(HorizonWidgetFunctionLibrary_SetInputMode, InInputMode) == 0x000008, "Member 'HorizonWidgetFunctionLibrary_SetInputMode::InInputMode' has a wrong offset!");
static_assert(offsetof(HorizonWidgetFunctionLibrary_SetInputMode, InWidgetToFocus) == 0x000010, "Member 'HorizonWidgetFunctionLibrary_SetInputMode::InWidgetToFocus' has a wrong offset!");
static_assert(offsetof(HorizonWidgetFunctionLibrary_SetInputMode, InMouseLockMode) == 0x000018, "Member 'HorizonWidgetFunctionLibrary_SetInputMode::InMouseLockMode' has a wrong offset!");
static_assert(offsetof(HorizonWidgetFunctionLibrary_SetInputMode, bInHideCursorDuringCapture) == 0x000019, "Member 'HorizonWidgetFunctionLibrary_SetInputMode::bInHideCursorDuringCapture' has a wrong offset!");

// Function HorizonUI.HorizonWidgetFunctionLibrary.SetWidgetVisibility
// 0x0020 (0x0020 - 0x0000)
struct HorizonWidgetFunctionLibrary_SetWidgetVisibility final
{
public:
	class UUserWidget*                            UserWidget;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   WidgetName;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESlateVisibility                              EVisiblity;                                        // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_118C[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0018(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HorizonWidgetFunctionLibrary_SetWidgetVisibility) == 0x000008, "Wrong alignment on HorizonWidgetFunctionLibrary_SetWidgetVisibility");
static_assert(sizeof(HorizonWidgetFunctionLibrary_SetWidgetVisibility) == 0x000020, "Wrong size on HorizonWidgetFunctionLibrary_SetWidgetVisibility");
static_assert(offsetof(HorizonWidgetFunctionLibrary_SetWidgetVisibility, UserWidget) == 0x000000, "Member 'HorizonWidgetFunctionLibrary_SetWidgetVisibility::UserWidget' has a wrong offset!");
static_assert(offsetof(HorizonWidgetFunctionLibrary_SetWidgetVisibility, WidgetName) == 0x000008, "Member 'HorizonWidgetFunctionLibrary_SetWidgetVisibility::WidgetName' has a wrong offset!");
static_assert(offsetof(HorizonWidgetFunctionLibrary_SetWidgetVisibility, EVisiblity) == 0x000010, "Member 'HorizonWidgetFunctionLibrary_SetWidgetVisibility::EVisiblity' has a wrong offset!");
static_assert(offsetof(HorizonWidgetFunctionLibrary_SetWidgetVisibility, ReturnValue) == 0x000018, "Member 'HorizonWidgetFunctionLibrary_SetWidgetVisibility::ReturnValue' has a wrong offset!");

}

