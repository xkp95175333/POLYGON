#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Button

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Button.UI_Button_C
// 0x00A0 (0x0320 - 0x0280)
class UUI_Button_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                Button;                                            // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_SelectedBackground;                          // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Name;                                    // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Name_UI_Button_C;                                  // 0x02A0(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	FMulticastInlineDelegateProperty_             OnClick;                                           // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         FontSize;                                          // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsSelected;                                        // 0x02CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          AlwaysDisplayBackground;                           // 0x02CD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3CB3[0x2];                                     // 0x02CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   GeneralColorID;                                    // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FName                                   SelectColorID;                                     // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FName                                   DisableColorID;                                    // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FName                                   HoveredColorID;                                    // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FLinearColor                           SelectColor;                                       // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FLinearColor                           DisableColor;                                      // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FMargin                                TextPadding;                                       // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void BndEvt__Button_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Button_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__Button_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void Click();
	void ExecuteUbergraph_UI_Button(int32 EntryPoint);
	void OnClick__DelegateSignature(class UUI_Button_C* Param_Button);
	void PreConstruct(bool IsDesignTime);
	void Set_Color();
	void SetSelectButton(bool Param_IsSelected);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Button_C">();
	}
	static class UUI_Button_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Button_C>();
	}
};
static_assert(alignof(UUI_Button_C) == 0x000008, "Wrong alignment on UUI_Button_C");
static_assert(sizeof(UUI_Button_C) == 0x000320, "Wrong size on UUI_Button_C");
static_assert(offsetof(UUI_Button_C, UberGraphFrame) == 0x000280, "Member 'UUI_Button_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Button_C, Button) == 0x000288, "Member 'UUI_Button_C::Button' has a wrong offset!");
static_assert(offsetof(UUI_Button_C, Image_SelectedBackground) == 0x000290, "Member 'UUI_Button_C::Image_SelectedBackground' has a wrong offset!");
static_assert(offsetof(UUI_Button_C, TextBlock_Name) == 0x000298, "Member 'UUI_Button_C::TextBlock_Name' has a wrong offset!");
static_assert(offsetof(UUI_Button_C, Name_UI_Button_C) == 0x0002A0, "Member 'UUI_Button_C::Name_UI_Button_C' has a wrong offset!");
static_assert(offsetof(UUI_Button_C, OnClick) == 0x0002B8, "Member 'UUI_Button_C::OnClick' has a wrong offset!");
static_assert(offsetof(UUI_Button_C, FontSize) == 0x0002C8, "Member 'UUI_Button_C::FontSize' has a wrong offset!");
static_assert(offsetof(UUI_Button_C, IsSelected) == 0x0002CC, "Member 'UUI_Button_C::IsSelected' has a wrong offset!");
static_assert(offsetof(UUI_Button_C, AlwaysDisplayBackground) == 0x0002CD, "Member 'UUI_Button_C::AlwaysDisplayBackground' has a wrong offset!");
static_assert(offsetof(UUI_Button_C, GeneralColorID) == 0x0002D0, "Member 'UUI_Button_C::GeneralColorID' has a wrong offset!");
static_assert(offsetof(UUI_Button_C, SelectColorID) == 0x0002D8, "Member 'UUI_Button_C::SelectColorID' has a wrong offset!");
static_assert(offsetof(UUI_Button_C, DisableColorID) == 0x0002E0, "Member 'UUI_Button_C::DisableColorID' has a wrong offset!");
static_assert(offsetof(UUI_Button_C, HoveredColorID) == 0x0002E8, "Member 'UUI_Button_C::HoveredColorID' has a wrong offset!");
static_assert(offsetof(UUI_Button_C, SelectColor) == 0x0002F0, "Member 'UUI_Button_C::SelectColor' has a wrong offset!");
static_assert(offsetof(UUI_Button_C, DisableColor) == 0x000300, "Member 'UUI_Button_C::DisableColor' has a wrong offset!");
static_assert(offsetof(UUI_Button_C, TextPadding) == 0x000310, "Member 'UUI_Button_C::TextPadding' has a wrong offset!");

}

