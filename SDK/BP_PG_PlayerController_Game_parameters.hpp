#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PG_PlayerController_Game

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "UMG_structs.hpp"
#include "POLYGON_structs.hpp"


namespace SDK::Params
{

// Function BP_PG_PlayerController_Game.BP_PG_PlayerController_Game_C.DisplayMessageToChatEvent
// 0x0020 (0x0020 - 0x0000)
struct BP_PG_PlayerController_Game_C_DisplayMessageToChatEvent final
{
public:
	struct FGameChatMessage                       Message;                                           // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_PG_PlayerController_Game_C_DisplayMessageToChatEvent) == 0x000008, "Wrong alignment on BP_PG_PlayerController_Game_C_DisplayMessageToChatEvent");
static_assert(sizeof(BP_PG_PlayerController_Game_C_DisplayMessageToChatEvent) == 0x000020, "Wrong size on BP_PG_PlayerController_Game_C_DisplayMessageToChatEvent");
static_assert(offsetof(BP_PG_PlayerController_Game_C_DisplayMessageToChatEvent, Message) == 0x000000, "Member 'BP_PG_PlayerController_Game_C_DisplayMessageToChatEvent::Message' has a wrong offset!");

// Function BP_PG_PlayerController_Game.BP_PG_PlayerController_Game_C.ExecuteUbergraph_BP_PG_PlayerController_Game
// 0x0260 (0x0260 - 0x0000)
struct BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x0020(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x0040(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EFE[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_3;                     // 0x0060(0x0018)(HasGetValueTypeHash)
	class UUI_GeneralGameScreen_C*                CallFunc_Create_ReturnValue;                       // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EFF[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FScoreInfoBlueprint>            K2Node_CustomEvent_ScoreInfos;                     // 0x0088(0x0010)(ConstParm, ReferenceParm)
	class APG_PlayerState_Game*                   K2Node_DynamicCast_AsPG_Player_State_Game;         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F00[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScoreInfoBlueprint                    CallFunc_Array_Get_Item;                           // 0x00A8(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F01[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00E4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00F4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F02[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_4;                     // 0x0108(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F03[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x0128(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F04[0x6];                                     // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_InteractionTime_C*                  CallFunc_Create_ReturnValue_1;                     // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TArray<struct FScoreInfoBlueprint>& ScoreInfos)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0150(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameChatMessage                       K2Node_Event_message;                              // 0x0160(0x0020)()
	TDelegate<void(class APawn* OldPawn, class APawn* NewPawn)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0180(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_interactionTime;                      // 0x0190(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WithEditor_ReturnValue;                   // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasUserFocus_ReturnValue;                 // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0196(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0197(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0198(0x0018)(HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_OldPawn;                        // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_NewPawn;                        // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AItem_Gun_General*                      K2Node_Event_gun;                                  // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PG_Game_Character_C*                K2Node_DynamicCast_AsBP_PG_Game_Character;         // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F05[0x5];                                     // 0x01DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x01E0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x01F8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F06[0x7];                                     // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PG_Game_Character_C*                K2Node_DynamicCast_AsBP_PG_Game_Character_1;       // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F07[0x3];                                     // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F08[0x6];                                     // 0x0232(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_2;                 // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F09[0x3];                                     // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0244(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F0A[0x4];                                     // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SetDoublePropertyByName_Value_ImplicitCast; // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game) == 0x000008, "Wrong alignment on BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game");
static_assert(sizeof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game) == 0x000260, "Wrong size on BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, EntryPoint) == 0x000000, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, K2Node_InputActionEvent_Key_1) == 0x000008, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, K2Node_InputActionEvent_Key_2) == 0x000020, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, Temp_struct_Variable) == 0x000040, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, K2Node_InputActionEvent_Key_3) == 0x000060, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::K2Node_InputActionEvent_Key_3' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, CallFunc_Create_ReturnValue) == 0x000078, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, CallFunc_IsValid_ReturnValue_1) == 0x000080, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, K2Node_CustomEvent_ScoreInfos) == 0x000088, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::K2Node_CustomEvent_ScoreInfos' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, K2Node_DynamicCast_AsPG_Player_State_Game) == 0x000098, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::K2Node_DynamicCast_AsPG_Player_State_Game' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000BC, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, CallFunc_Less_IntInt_ReturnValue) == 0x0000BD, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000BE, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, CallFunc_BooleanOR_ReturnValue) == 0x0000BF, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, K2Node_CreateDelegate_OutputDelegate) == 0x0000C0, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, Temp_int_Variable) == 0x0000D0, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, Temp_int_Variable_1) == 0x0000D4, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, CallFunc_PlayAnimationForward_ReturnValue) == 0x0000D8, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, Temp_bool_Variable) == 0x0000E0, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000E4, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000F4, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, K2Node_InputActionEvent_Key_4) == 0x000108, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::K2Node_InputActionEvent_Key_4' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, CallFunc_IsValid_ReturnValue_2) == 0x000120, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, K2Node_InputKeyEvent_Key_2) == 0x000128, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, CallFunc_HasAuthority_ReturnValue) == 0x000140, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, CallFunc_IsValid_ReturnValue_3) == 0x000141, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, CallFunc_Create_ReturnValue_1) == 0x000148, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, K2Node_CreateDelegate_OutputDelegate_3) == 0x000150, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, K2Node_Event_message) == 0x000160, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::K2Node_Event_message' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, K2Node_CreateDelegate_OutputDelegate_4) == 0x000180, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, K2Node_Event_interactionTime) == 0x000190, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::K2Node_Event_interactionTime' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, CallFunc_WithEditor_ReturnValue) == 0x000194, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::CallFunc_WithEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, CallFunc_HasUserFocus_ReturnValue) == 0x000195, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::CallFunc_HasUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, CallFunc_Not_PreBool_ReturnValue) == 0x000196, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, CallFunc_IsVisible_ReturnValue) == 0x000197, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, K2Node_InputKeyEvent_Key) == 0x000198, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, K2Node_CustomEvent_OldPawn) == 0x0001B0, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::K2Node_CustomEvent_OldPawn' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, K2Node_CustomEvent_NewPawn) == 0x0001B8, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::K2Node_CustomEvent_NewPawn' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, K2Node_Event_gun) == 0x0001C0, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::K2Node_Event_gun' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, CallFunc_K2_GetPawn_ReturnValue) == 0x0001C8, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, K2Node_DynamicCast_AsBP_PG_Game_Character) == 0x0001D0, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::K2Node_DynamicCast_AsBP_PG_Game_Character' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, K2Node_DynamicCast_bSuccess_1) == 0x0001D8, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, CallFunc_IsValid_ReturnValue_4) == 0x0001D9, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, CallFunc_IsValid_ReturnValue_5) == 0x0001DA, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, K2Node_InputKeyEvent_Key_1) == 0x0001E0, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, K2Node_InputActionEvent_Key) == 0x0001F8, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, CallFunc_IsValid_ReturnValue_6) == 0x000210, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000218, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, K2Node_DynamicCast_AsBP_PG_Game_Character_1) == 0x000220, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::K2Node_DynamicCast_AsBP_PG_Game_Character_1' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, K2Node_DynamicCast_bSuccess_2) == 0x000228, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, K2Node_Select_Default) == 0x00022C, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, CallFunc_IsDedicatedServer_ReturnValue) == 0x000230, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, CallFunc_Not_PreBool_ReturnValue_1) == 0x000231, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, CallFunc_K2_GetPawn_ReturnValue_2) == 0x000238, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::CallFunc_K2_GetPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, CallFunc_IsValid_ReturnValue_7) == 0x000240, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, K2Node_CreateDelegate_OutputDelegate_5) == 0x000244, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game, CallFunc_SetDoublePropertyByName_Value_ImplicitCast) == 0x000258, "Member 'BP_PG_PlayerController_Game_C_ExecuteUbergraph_BP_PG_PlayerController_Game::CallFunc_SetDoublePropertyByName_Value_ImplicitCast' has a wrong offset!");

// Function BP_PG_PlayerController_Game.BP_PG_PlayerController_Game_C.InpActEvt_ChatAll_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_PG_PlayerController_Game_C_InpActEvt_ChatAll_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PG_PlayerController_Game_C_InpActEvt_ChatAll_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on BP_PG_PlayerController_Game_C_InpActEvt_ChatAll_K2Node_InputActionEvent_2");
static_assert(sizeof(BP_PG_PlayerController_Game_C_InpActEvt_ChatAll_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on BP_PG_PlayerController_Game_C_InpActEvt_ChatAll_K2Node_InputActionEvent_2");
static_assert(offsetof(BP_PG_PlayerController_Game_C_InpActEvt_ChatAll_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'BP_PG_PlayerController_Game_C_InpActEvt_ChatAll_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function BP_PG_PlayerController_Game.BP_PG_PlayerController_Game_C.InpActEvt_ChatTeam_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_PG_PlayerController_Game_C_InpActEvt_ChatTeam_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PG_PlayerController_Game_C_InpActEvt_ChatTeam_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on BP_PG_PlayerController_Game_C_InpActEvt_ChatTeam_K2Node_InputActionEvent_1");
static_assert(sizeof(BP_PG_PlayerController_Game_C_InpActEvt_ChatTeam_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on BP_PG_PlayerController_Game_C_InpActEvt_ChatTeam_K2Node_InputActionEvent_1");
static_assert(offsetof(BP_PG_PlayerController_Game_C_InpActEvt_ChatTeam_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'BP_PG_PlayerController_Game_C_InpActEvt_ChatTeam_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function BP_PG_PlayerController_Game.BP_PG_PlayerController_Game_C.InpActEvt_Escape_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_PG_PlayerController_Game_C_InpActEvt_Escape_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PG_PlayerController_Game_C_InpActEvt_Escape_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on BP_PG_PlayerController_Game_C_InpActEvt_Escape_K2Node_InputKeyEvent_2");
static_assert(sizeof(BP_PG_PlayerController_Game_C_InpActEvt_Escape_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on BP_PG_PlayerController_Game_C_InpActEvt_Escape_K2Node_InputKeyEvent_2");
static_assert(offsetof(BP_PG_PlayerController_Game_C_InpActEvt_Escape_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'BP_PG_PlayerController_Game_C_InpActEvt_Escape_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function BP_PG_PlayerController_Game.BP_PG_PlayerController_Game_C.InpActEvt_HideInterface_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_PG_PlayerController_Game_C_InpActEvt_HideInterface_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PG_PlayerController_Game_C_InpActEvt_HideInterface_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_PG_PlayerController_Game_C_InpActEvt_HideInterface_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_PG_PlayerController_Game_C_InpActEvt_HideInterface_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_PG_PlayerController_Game_C_InpActEvt_HideInterface_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_PG_PlayerController_Game_C_InpActEvt_HideInterface_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_PG_PlayerController_Game_C_InpActEvt_HideInterface_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_PG_PlayerController_Game.BP_PG_PlayerController_Game_C.InpActEvt_MiddleMouseButton_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_PG_PlayerController_Game_C_InpActEvt_MiddleMouseButton_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PG_PlayerController_Game_C_InpActEvt_MiddleMouseButton_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on BP_PG_PlayerController_Game_C_InpActEvt_MiddleMouseButton_K2Node_InputKeyEvent_0");
static_assert(sizeof(BP_PG_PlayerController_Game_C_InpActEvt_MiddleMouseButton_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on BP_PG_PlayerController_Game_C_InpActEvt_MiddleMouseButton_K2Node_InputKeyEvent_0");
static_assert(offsetof(BP_PG_PlayerController_Game_C_InpActEvt_MiddleMouseButton_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'BP_PG_PlayerController_Game_C_InpActEvt_MiddleMouseButton_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function BP_PG_PlayerController_Game.BP_PG_PlayerController_Game_C.InpActEvt_N_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_PG_PlayerController_Game_C_InpActEvt_N_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PG_PlayerController_Game_C_InpActEvt_N_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on BP_PG_PlayerController_Game_C_InpActEvt_N_K2Node_InputKeyEvent_1");
static_assert(sizeof(BP_PG_PlayerController_Game_C_InpActEvt_N_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on BP_PG_PlayerController_Game_C_InpActEvt_N_K2Node_InputKeyEvent_1");
static_assert(offsetof(BP_PG_PlayerController_Game_C_InpActEvt_N_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'BP_PG_PlayerController_Game_C_InpActEvt_N_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function BP_PG_PlayerController_Game.BP_PG_PlayerController_Game_C.InpActEvt_Scoreboard_K2Node_InputActionEvent_3
// 0x0018 (0x0018 - 0x0000)
struct BP_PG_PlayerController_Game_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PG_PlayerController_Game_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_3) == 0x000008, "Wrong alignment on BP_PG_PlayerController_Game_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_3");
static_assert(sizeof(BP_PG_PlayerController_Game_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_3) == 0x000018, "Wrong size on BP_PG_PlayerController_Game_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_3");
static_assert(offsetof(BP_PG_PlayerController_Game_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_3, Key) == 0x000000, "Member 'BP_PG_PlayerController_Game_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_3::Key' has a wrong offset!");

// Function BP_PG_PlayerController_Game.BP_PG_PlayerController_Game_C.InpActEvt_Scoreboard_K2Node_InputActionEvent_4
// 0x0018 (0x0018 - 0x0000)
struct BP_PG_PlayerController_Game_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PG_PlayerController_Game_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_4) == 0x000008, "Wrong alignment on BP_PG_PlayerController_Game_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_4");
static_assert(sizeof(BP_PG_PlayerController_Game_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_4) == 0x000018, "Wrong size on BP_PG_PlayerController_Game_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_4");
static_assert(offsetof(BP_PG_PlayerController_Game_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_4, Key) == 0x000000, "Member 'BP_PG_PlayerController_Game_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_4::Key' has a wrong offset!");

// Function BP_PG_PlayerController_Game.BP_PG_PlayerController_Game_C.NotifyPossibilityUnlockModule
// 0x0008 (0x0008 - 0x0000)
struct BP_PG_PlayerController_Game_C_NotifyPossibilityUnlockModule final
{
public:
	class AItem_Gun_General*                      Gun;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PG_PlayerController_Game_C_NotifyPossibilityUnlockModule) == 0x000008, "Wrong alignment on BP_PG_PlayerController_Game_C_NotifyPossibilityUnlockModule");
static_assert(sizeof(BP_PG_PlayerController_Game_C_NotifyPossibilityUnlockModule) == 0x000008, "Wrong size on BP_PG_PlayerController_Game_C_NotifyPossibilityUnlockModule");
static_assert(offsetof(BP_PG_PlayerController_Game_C_NotifyPossibilityUnlockModule, Gun) == 0x000000, "Member 'BP_PG_PlayerController_Game_C_NotifyPossibilityUnlockModule::Gun' has a wrong offset!");

// Function BP_PG_PlayerController_Game.BP_PG_PlayerController_Game_C.OnAddedGameScore_Event
// 0x0010 (0x0010 - 0x0000)
struct BP_PG_PlayerController_Game_C_OnAddedGameScore_Event final
{
public:
	TArray<struct FScoreInfoBlueprint>            ScoreInfos;                                        // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_PG_PlayerController_Game_C_OnAddedGameScore_Event) == 0x000008, "Wrong alignment on BP_PG_PlayerController_Game_C_OnAddedGameScore_Event");
static_assert(sizeof(BP_PG_PlayerController_Game_C_OnAddedGameScore_Event) == 0x000010, "Wrong size on BP_PG_PlayerController_Game_C_OnAddedGameScore_Event");
static_assert(offsetof(BP_PG_PlayerController_Game_C_OnAddedGameScore_Event, ScoreInfos) == 0x000000, "Member 'BP_PG_PlayerController_Game_C_OnAddedGameScore_Event::ScoreInfos' has a wrong offset!");

// Function BP_PG_PlayerController_Game.BP_PG_PlayerController_Game_C.OnPossessedPawnChanged_Event
// 0x0010 (0x0010 - 0x0000)
struct BP_PG_PlayerController_Game_C_OnPossessedPawnChanged_Event final
{
public:
	class APawn*                                  OldPawn;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  NewPawn;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PG_PlayerController_Game_C_OnPossessedPawnChanged_Event) == 0x000008, "Wrong alignment on BP_PG_PlayerController_Game_C_OnPossessedPawnChanged_Event");
static_assert(sizeof(BP_PG_PlayerController_Game_C_OnPossessedPawnChanged_Event) == 0x000010, "Wrong size on BP_PG_PlayerController_Game_C_OnPossessedPawnChanged_Event");
static_assert(offsetof(BP_PG_PlayerController_Game_C_OnPossessedPawnChanged_Event, OldPawn) == 0x000000, "Member 'BP_PG_PlayerController_Game_C_OnPossessedPawnChanged_Event::OldPawn' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_OnPossessedPawnChanged_Event, NewPawn) == 0x000008, "Member 'BP_PG_PlayerController_Game_C_OnPossessedPawnChanged_Event::NewPawn' has a wrong offset!");

// Function BP_PG_PlayerController_Game.BP_PG_PlayerController_Game_C.Reset
// 0x0004 (0x0004 - 0x0000)
struct BP_PG_PlayerController_Game_C_Reset final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PG_PlayerController_Game_C_Reset) == 0x000001, "Wrong alignment on BP_PG_PlayerController_Game_C_Reset");
static_assert(sizeof(BP_PG_PlayerController_Game_C_Reset) == 0x000004, "Wrong size on BP_PG_PlayerController_Game_C_Reset");
static_assert(offsetof(BP_PG_PlayerController_Game_C_Reset, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PG_PlayerController_Game_C_Reset::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_Reset, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_PG_PlayerController_Game_C_Reset::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_Reset, CallFunc_IsValid_ReturnValue_2) == 0x000002, "Member 'BP_PG_PlayerController_Game_C_Reset::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_Reset, CallFunc_IsValid_ReturnValue_3) == 0x000003, "Member 'BP_PG_PlayerController_Game_C_Reset::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_PG_PlayerController_Game.BP_PG_PlayerController_Game_C.StartInteractionEvent
// 0x0004 (0x0004 - 0x0000)
struct BP_PG_PlayerController_Game_C_StartInteractionEvent final
{
public:
	float                                         InteractionTime;                                   // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PG_PlayerController_Game_C_StartInteractionEvent) == 0x000004, "Wrong alignment on BP_PG_PlayerController_Game_C_StartInteractionEvent");
static_assert(sizeof(BP_PG_PlayerController_Game_C_StartInteractionEvent) == 0x000004, "Wrong size on BP_PG_PlayerController_Game_C_StartInteractionEvent");
static_assert(offsetof(BP_PG_PlayerController_Game_C_StartInteractionEvent, InteractionTime) == 0x000000, "Member 'BP_PG_PlayerController_Game_C_StartInteractionEvent::InteractionTime' has a wrong offset!");

// Function BP_PG_PlayerController_Game.BP_PG_PlayerController_Game_C.ToggleVisibilityInterface
// 0x00B0 (0x00B0 - 0x0000)
struct BP_PG_PlayerController_Game_C_ToggleVisibilityInterface final
{
public:
	bool                                          ForceVisible;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          L_Visible;                                         // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F0B[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F0C[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F0D[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUI_TeamBaseMarker_C*>           CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUI_TeamBaseMarker_C*                   CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F0E[0x1];                                     // 0x005F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUI_ControlPointMarker_C*>       CallFunc_GetAllWidgetsOfClass_FoundWidgets_1;      // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUI_ControlPointMarker_C*               CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F0F[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F10[0x1];                                     // 0x0087(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUI_PlayerMarker_C*>             CallFunc_GetAllWidgetsOfClass_FoundWidgets_2;      // 0x0088(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUI_PlayerMarker_C*                     CallFunc_Array_Get_Item_2;                         // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface) == 0x000008, "Wrong alignment on BP_PG_PlayerController_Game_C_ToggleVisibilityInterface");
static_assert(sizeof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface) == 0x0000B0, "Wrong size on BP_PG_PlayerController_Game_C_ToggleVisibilityInterface");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, ForceVisible) == 0x000000, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::ForceVisible' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, L_Visible) == 0x000001, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::L_Visible' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, Temp_byte_Variable) == 0x000002, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, Temp_byte_Variable_1) == 0x000003, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, Temp_bool_Variable) == 0x000004, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, Temp_byte_Variable_2) == 0x000005, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, Temp_byte_Variable_3) == 0x000006, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, Temp_bool_Variable_1) == 0x000007, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, Temp_byte_Variable_4) == 0x000008, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, Temp_byte_Variable_5) == 0x000009, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, Temp_bool_Variable_2) == 0x00000A, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, Temp_byte_Variable_6) == 0x00000B, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, Temp_byte_Variable_7) == 0x00000C, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, Temp_bool_Variable_3) == 0x000024, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, Temp_int_Loop_Counter_Variable_2) == 0x00002C, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, CallFunc_Add_IntInt_ReturnValue_2) == 0x000030, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, Temp_int_Array_Index_Variable_2) == 0x000034, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, Temp_byte_Variable_8) == 0x000038, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000040, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, K2Node_Select_Default) == 0x00005C, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, CallFunc_Less_IntInt_ReturnValue) == 0x00005D, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, Temp_byte_Variable_9) == 0x00005E, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, CallFunc_GetAllWidgetsOfClass_FoundWidgets_1) == 0x000060, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::CallFunc_GetAllWidgetsOfClass_FoundWidgets_1' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, K2Node_Select_Default_1) == 0x000078, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, CallFunc_Array_Length_ReturnValue_1) == 0x00007C, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, CallFunc_Less_IntInt_ReturnValue_1) == 0x000080, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, K2Node_Select_Default_2) == 0x000081, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, Temp_bool_Variable_4) == 0x000082, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, K2Node_Select_Default_3) == 0x000083, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, K2Node_Select_Default_4) == 0x000084, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, CallFunc_IsDedicatedServer_ReturnValue) == 0x000085, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, CallFunc_Not_PreBool_ReturnValue) == 0x000086, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, CallFunc_GetAllWidgetsOfClass_FoundWidgets_2) == 0x000088, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::CallFunc_GetAllWidgetsOfClass_FoundWidgets_2' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, CallFunc_Array_Get_Item_2) == 0x000098, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, CallFunc_Array_Length_ReturnValue_2) == 0x0000A0, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000A4, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, CallFunc_IsValid_ReturnValue) == 0x0000A5, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, CallFunc_IsVisible_ReturnValue) == 0x0000A6, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000A7, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PG_PlayerController_Game_C_ToggleVisibilityInterface, CallFunc_BooleanOR_ReturnValue) == 0x0000A8, "Member 'BP_PG_PlayerController_Game_C_ToggleVisibilityInterface::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

