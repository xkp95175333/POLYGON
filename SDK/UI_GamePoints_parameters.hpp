#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_GamePoints

#include "Basic.hpp"

#include "POLYGON_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UI_GamePoints.UI_GamePoints_C.AddNewPointMessage
// 0x0010 (0x0010 - 0x0000)
struct UI_GamePoints_C_AddNewPointMessage final
{
public:
	int32                                         AddPoint;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAccrualTypeGameScore                         AddGameScoreType;                                  // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11DA[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Instigator;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GamePoints_C_AddNewPointMessage) == 0x000008, "Wrong alignment on UI_GamePoints_C_AddNewPointMessage");
static_assert(sizeof(UI_GamePoints_C_AddNewPointMessage) == 0x000010, "Wrong size on UI_GamePoints_C_AddNewPointMessage");
static_assert(offsetof(UI_GamePoints_C_AddNewPointMessage, AddPoint) == 0x000000, "Member 'UI_GamePoints_C_AddNewPointMessage::AddPoint' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_AddNewPointMessage, AddGameScoreType) == 0x000004, "Member 'UI_GamePoints_C_AddNewPointMessage::AddGameScoreType' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_AddNewPointMessage, Instigator) == 0x000008, "Member 'UI_GamePoints_C_AddNewPointMessage::Instigator' has a wrong offset!");

// Function UI_GamePoints.UI_GamePoints_C.CreateGamePointEntryWidget
// 0x00F0 (0x00F0 - 0x0000)
struct UI_GamePoints_C_CreateGamePointEntryWidget final
{
public:
	int32                                         AddPoint;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAccrualTypeGameScore                         AddGameScopeType;                                  // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11DB[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Instigator;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUI_GamePoints_Entry_C*                 L_CreatedWidget;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 L_CustomString;                                    // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                L_Instigator;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EAccrualTypeGameScore                         L_AddGameScopeType;                                // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11DC[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         L_AddGamePoint;                                    // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11DD[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11DE[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              CallFunc_AddChildToGrid_ReturnValue;               // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11DF[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_GamePoints_Entry_C*                 K2Node_DynamicCast_AsUI_Game_Points_Entry;         // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11E0[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              CallFunc_SlotAsGridSlot_ReturnValue;               // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11E1[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           K2Node_DynamicCast_AsPlayer_State;                 // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11E2[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11E3[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11E4[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11E5[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_GamePoints_Entry_C*                 CallFunc_Create_ReturnValue;                       // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GamePoints_C_CreateGamePointEntryWidget) == 0x000008, "Wrong alignment on UI_GamePoints_C_CreateGamePointEntryWidget");
static_assert(sizeof(UI_GamePoints_C_CreateGamePointEntryWidget) == 0x0000F0, "Wrong size on UI_GamePoints_C_CreateGamePointEntryWidget");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, AddPoint) == 0x000000, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::AddPoint' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, AddGameScopeType) == 0x000004, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::AddGameScopeType' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, Instigator) == 0x000008, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::Instigator' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, L_CreatedWidget) == 0x000010, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::L_CreatedWidget' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, L_CustomString) == 0x000018, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::L_CustomString' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, L_Instigator) == 0x000028, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::L_Instigator' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, L_AddGameScopeType) == 0x000030, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::L_AddGameScopeType' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, L_AddGamePoint) == 0x000034, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::L_AddGamePoint' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, Temp_int_Array_Index_Variable) == 0x000038, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, CallFunc_PlayAnimation_ReturnValue) == 0x000048, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, CallFunc_GetChildrenCount_ReturnValue) == 0x000050, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, CallFunc_Greater_IntInt_ReturnValue) == 0x000054, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, CallFunc_AddChildToGrid_ReturnValue) == 0x000058, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::CallFunc_AddChildToGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, CallFunc_GetAllChildren_ReturnValue) == 0x000060, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, CallFunc_Array_Get_Item) == 0x000070, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, K2Node_DynamicCast_AsUI_Game_Points_Entry) == 0x000080, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::K2Node_DynamicCast_AsUI_Game_Points_Entry' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, CallFunc_Less_IntInt_ReturnValue) == 0x000089, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, CallFunc_SlotAsGridSlot_ReturnValue) == 0x000090, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::CallFunc_SlotAsGridSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000098, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, CallFunc_Add_IntInt_ReturnValue_1) == 0x00009C, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, K2Node_DynamicCast_AsPlayer_State) == 0x0000A0, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::K2Node_DynamicCast_AsPlayer_State' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, CallFunc_GetPlayerName_ReturnValue) == 0x0000B0, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000C0, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000C8, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, CallFunc_IsValid_ReturnValue) == 0x0000D0, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000D8, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000E0, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_CreateGamePointEntryWidget, CallFunc_Create_ReturnValue) == 0x0000E8, "Member 'UI_GamePoints_C_CreateGamePointEntryWidget::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function UI_GamePoints.UI_GamePoints_C.ExecuteUbergraph_UI_GamePoints
// 0x00A8 (0x00A8 - 0x0000)
struct UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11E6[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11E7[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_AddPoint;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAccrualTypeGameScore                         K2Node_CustomEvent_AddGameScoreType;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11E8[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Instigator;                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0048(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11E9[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Constant_ReturnValue;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints) == 0x000008, "Wrong alignment on UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints");
static_assert(sizeof(UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints) == 0x0000A8, "Wrong size on UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints");
static_assert(offsetof(UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints, EntryPoint) == 0x000000, "Member 'UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints, CallFunc_FTrunc_ReturnValue) == 0x000004, "Member 'UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints, Temp_bool_Has_Been_Initd_Variable) == 0x000008, "Member 'UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints, Temp_bool_IsClosed_Variable) == 0x000028, "Member 'UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints, K2Node_CustomEvent_AddPoint) == 0x00002C, "Member 'UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints::K2Node_CustomEvent_AddPoint' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints, K2Node_CustomEvent_AddGameScoreType) == 0x000030, "Member 'UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints::K2Node_CustomEvent_AddGameScoreType' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints, K2Node_CustomEvent_Instigator) == 0x000038, "Member 'UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints::K2Node_CustomEvent_Instigator' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints, CallFunc_PlayAnimationForward_ReturnValue) == 0x000040, "Member 'UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints, K2Node_Event_MyGeometry) == 0x000048, "Member 'UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints, K2Node_Event_InDeltaTime) == 0x000080, "Member 'UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints, CallFunc_IsVisible_ReturnValue) == 0x000084, "Member 'UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000088, "Member 'UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000090, "Member 'UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints, CallFunc_FInterpTo_Constant_ReturnValue) == 0x000098, "Member 'UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints, CallFunc_FTrunc_ReturnValue_1) == 0x0000A0, "Member 'UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A4, "Member 'UI_GamePoints_C_ExecuteUbergraph_UI_GamePoints::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function UI_GamePoints.UI_GamePoints_C.Tick
// 0x003C (0x003C - 0x0000)
struct UI_GamePoints_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GamePoints_C_Tick) == 0x000004, "Wrong alignment on UI_GamePoints_C_Tick");
static_assert(sizeof(UI_GamePoints_C_Tick) == 0x00003C, "Wrong size on UI_GamePoints_C_Tick");
static_assert(offsetof(UI_GamePoints_C_Tick, MyGeometry) == 0x000000, "Member 'UI_GamePoints_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_GamePoints_C_Tick, InDeltaTime) == 0x000038, "Member 'UI_GamePoints_C_Tick::InDeltaTime' has a wrong offset!");

}

