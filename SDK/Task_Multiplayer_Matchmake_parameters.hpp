#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Task_Multiplayer_Matchmake

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Task_Multiplayer_Matchmake.Task_Multiplayer_Matchmake_C.ExecuteUbergraph_Task_Multiplayer_Matchmake
// 0x0088 (0x0088 - 0x0000)
struct Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3332[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTask_Multiplayer_ConnectToServer_C*    CallFunc_CreateAction_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool IsSuccessful)>            K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3333[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3334[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUI_ServerInfo_C*                       CallFunc_SelectBestServer_BestServer;              // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_PG_PlayerController_Menu_C*         K2Node_DynamicCast_AsBP_PG_Player_Controller_Menu; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsSuccessful;                   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3335[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetNumberField_ReturnValue;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetNumberField_ReturnValue_1;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetStringField_ReturnValue;               // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_FTrunc_A_ImplicitCast;                    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FTrunc_A_ImplicitCast_1;                  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake) == 0x000008, "Wrong alignment on Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake");
static_assert(sizeof(Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake) == 0x000088, "Wrong size on Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake, EntryPoint) == 0x000000, "Member 'Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake::EntryPoint' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake, CallFunc_CreateAction_ReturnValue) == 0x000008, "Member 'Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake::CallFunc_CreateAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake, CallFunc_GetPlayerController_ReturnValue) == 0x000038, "Member 'Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake, CallFunc_SelectBestServer_BestServer) == 0x000040, "Member 'Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake::CallFunc_SelectBestServer_BestServer' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake, K2Node_DynamicCast_AsBP_PG_Player_Controller_Menu) == 0x000048, "Member 'Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake::K2Node_DynamicCast_AsBP_PG_Player_Controller_Menu' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake, K2Node_CustomEvent_IsSuccessful) == 0x000051, "Member 'Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake::K2Node_CustomEvent_IsSuccessful' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake, CallFunc_GetNumberField_ReturnValue) == 0x000054, "Member 'Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake::CallFunc_GetNumberField_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake, CallFunc_FTrunc_ReturnValue) == 0x00005C, "Member 'Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake, CallFunc_GetNumberField_ReturnValue_1) == 0x000060, "Member 'Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake::CallFunc_GetNumberField_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake, CallFunc_FTrunc_ReturnValue_1) == 0x000064, "Member 'Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake, CallFunc_GetStringField_ReturnValue) == 0x000068, "Member 'Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake::CallFunc_GetStringField_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake, CallFunc_FTrunc_A_ImplicitCast) == 0x000078, "Member 'Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake::CallFunc_FTrunc_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake, CallFunc_FTrunc_A_ImplicitCast_1) == 0x000080, "Member 'Task_Multiplayer_Matchmake_C_ExecuteUbergraph_Task_Multiplayer_Matchmake::CallFunc_FTrunc_A_ImplicitCast_1' has a wrong offset!");

// Function Task_Multiplayer_Matchmake.Task_Multiplayer_Matchmake_C.OnConnectionFinished_Event
// 0x0001 (0x0001 - 0x0000)
struct Task_Multiplayer_Matchmake_C_OnConnectionFinished_Event final
{
public:
	bool                                          IsSuccessful;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Multiplayer_Matchmake_C_OnConnectionFinished_Event) == 0x000001, "Wrong alignment on Task_Multiplayer_Matchmake_C_OnConnectionFinished_Event");
static_assert(sizeof(Task_Multiplayer_Matchmake_C_OnConnectionFinished_Event) == 0x000001, "Wrong size on Task_Multiplayer_Matchmake_C_OnConnectionFinished_Event");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_OnConnectionFinished_Event, IsSuccessful) == 0x000000, "Member 'Task_Multiplayer_Matchmake_C_OnConnectionFinished_Event::IsSuccessful' has a wrong offset!");

// Function Task_Multiplayer_Matchmake.Task_Multiplayer_Matchmake_C.SelectBestServer
// 0x01E8 (0x01E8 - 0x0000)
struct Task_Multiplayer_Matchmake_C_SelectBestServer final
{
public:
	class UUI_ServerInfo_C*                       BestServer;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_ServerInfo_C*                       L_BestServer;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_ServerInfo_C*                       L_Iterator;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UUI_ServerInfo_C*>               L_BestServers;                                     // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         L_SquadPlayersNum;                                 // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3336[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3337[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3338[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolField_ReturnValue;                 // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasField_ReturnValue;                     // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3339[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0050(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue_1;                    // 0x0068(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_1;           // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_333A[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_ServerInfo_C*                       CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_333B[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_ServerInfo_C*                       CallFunc_Array_Get_Item_1;                         // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_333C[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOnlinePartySubsystem*                  CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_333D[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_333E[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue_2;                    // 0x00E8(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue_3;                    // 0x0100(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_3;          // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_2;           // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_3;           // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_333F[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetText_ReturnValue_4;                    // 0x0148(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_4;          // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3340[0x3];                                     // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_4;           // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3341[0x2];                                     // 0x017A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUI_ServerInfo_C*                       CallFunc_Array_Get_Item_2;                         // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FUniqueNetIdRepl                       CallFunc_GetControllerUniqueNetId_ReturnValue;     // 0x0188(0x0030)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3342[0x2];                                     // 0x01BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBlueprintPartyMember*>          CallFunc_GetPartyMembers_OutPartyMembersArray;     // 0x01C0(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetPartyMembers_ReturnValue;              // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3343[0x3];                                     // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3344[0x3];                                     // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x01E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Task_Multiplayer_Matchmake_C_SelectBestServer) == 0x000008, "Wrong alignment on Task_Multiplayer_Matchmake_C_SelectBestServer");
static_assert(sizeof(Task_Multiplayer_Matchmake_C_SelectBestServer) == 0x0001E8, "Wrong size on Task_Multiplayer_Matchmake_C_SelectBestServer");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, BestServer) == 0x000000, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::BestServer' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, L_BestServer) == 0x000008, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::L_BestServer' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, L_Iterator) == 0x000010, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::L_Iterator' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, L_BestServers) == 0x000018, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::L_BestServers' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, L_SquadPlayersNum) == 0x000028, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::L_SquadPlayersNum' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, Temp_bool_True_if_break_was_hit_Variable) == 0x00002C, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, Temp_int_Array_Index_Variable) == 0x000030, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Not_PreBool_ReturnValue) == 0x000034, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, Temp_bool_True_if_break_was_hit_Variable_1) == 0x00003C, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Not_PreBool_ReturnValue_1) == 0x00003D, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_GetBoolField_ReturnValue) == 0x000044, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_GetBoolField_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Not_PreBool_ReturnValue_2) == 0x000045, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_HasField_ReturnValue) == 0x000046, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_HasField_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Not_PreBool_ReturnValue_3) == 0x000047, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Array_Contains_ReturnValue) == 0x000048, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Not_PreBool_ReturnValue_4) == 0x000049, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_GetText_ReturnValue) == 0x000050, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_GetText_ReturnValue_1) == 0x000068, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_GetText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Conv_TextToString_ReturnValue) == 0x000080, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000090, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Conv_StringToInt_ReturnValue) == 0x0000A0, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Conv_StringToInt_ReturnValue_1) == 0x0000A4, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Conv_StringToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, Temp_int_Array_Index_Variable_1) == 0x0000A8, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Greater_IntInt_ReturnValue) == 0x0000BC, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Array_Get_Item_1) == 0x0000C0, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Array_Length_ReturnValue_1) == 0x0000C8, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x0000D0, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Array_Length_ReturnValue_2) == 0x0000D8, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000DC, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Array_Add_ReturnValue) == 0x0000E0, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_GetText_ReturnValue_2) == 0x0000E8, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_GetText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_GetText_ReturnValue_3) == 0x000100, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_GetText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Conv_TextToString_ReturnValue_2) == 0x000118, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Conv_TextToString_ReturnValue_3) == 0x000128, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Conv_TextToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Conv_StringToInt_ReturnValue_2) == 0x000138, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Conv_StringToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Conv_StringToInt_ReturnValue_3) == 0x00013C, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Conv_StringToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Less_IntInt_ReturnValue) == 0x000140, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, Temp_int_Loop_Counter_Variable_1) == 0x000144, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_GetText_ReturnValue_4) == 0x000148, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_GetText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Conv_TextToString_ReturnValue_4) == 0x000160, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Conv_TextToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Less_IntInt_ReturnValue_1) == 0x000170, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Conv_StringToInt_ReturnValue_4) == 0x000174, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Conv_StringToInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_BooleanAND_ReturnValue) == 0x000178, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000179, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Add_IntInt_ReturnValue_1) == 0x00017C, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Array_Get_Item_2) == 0x000180, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_GetControllerUniqueNetId_ReturnValue) == 0x000188, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_GetControllerUniqueNetId_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Array_Length_ReturnValue_3) == 0x0001B8, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001BC, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_BooleanAND_ReturnValue_1) == 0x0001BD, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_GetPartyMembers_OutPartyMembersArray) == 0x0001C0, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_GetPartyMembers_OutPartyMembersArray' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_GetPartyMembers_ReturnValue) == 0x0001D0, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_GetPartyMembers_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Array_Length_ReturnValue_4) == 0x0001D4, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_IsValid_ReturnValue) == 0x0001D8, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001DC, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_Add_IntInt_ReturnValue_3) == 0x0001E0, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001E4, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Task_Multiplayer_Matchmake_C_SelectBestServer, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0001E5, "Member 'Task_Multiplayer_Matchmake_C_SelectBestServer::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");

}

